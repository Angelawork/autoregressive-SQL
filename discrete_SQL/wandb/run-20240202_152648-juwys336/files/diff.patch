diff --git a/dsac.py b/dsac.py
index 01d6b63..afb1a62 100644
--- a/dsac.py
+++ b/dsac.py
@@ -17,14 +17,6 @@ from torch.utils.tensorboard import SummaryWriter
 import random
 
 
-def random_t(batch_size, size):
-    one_hot_vectors = torch.zeros(batch_size, size).long()
-    for i in range(batch_size):
-        index = random.randint(0, size-1)
-        one_hot_vectors[i, index] = 1
-    return one_hot_vectors
-
-
 def parse_args():
     # fmt: off
     parser = argparse.ArgumentParser()
@@ -242,7 +234,7 @@ poetry run pip install "stable_baselines3==2.0.0a1"
         device,
         handle_timeout_termination=False,
     )
-    t_0 = torch.zeros((data.observations.shape[0], args.diffusion_steps+1)).to(device)
+    t_0 = torch.zeros((args.batch_size, args.diffusion_steps+1)).to(device)
     t_0[:,0] = 1
     
     start_time = time.time()
diff --git a/lava_tests.ipynb b/lava_tests.ipynb
index 3747c6a..72a7c6a 100644
--- a/lava_tests.ipynb
+++ b/lava_tests.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -15,7 +15,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -56,8 +56,10 @@
     "        self.state[cur_state +1] = 1 \n",
     "        return cur_state[0][0]\n",
     "        \n",
+    "        \n",
     "    def step(self, action):\n",
     "\n",
+    "\n",
     "        #check if the coorddinates are at the start and end of any stone in the current state\n",
     "        pos = np.argwhere(self.state == 1) \n",
     "\n",
@@ -108,9 +110,10 @@
     "        #restrict it between 100 and 300 \n",
     "        plt.xlim(0, 200)\n",
     "        plt.pause(0.001)  # pause for a bit to display the image\n",
+    " \n",
     "\n",
     "\n",
-    "def visualize_trajectories(policy, env, num_trajectories=20, horizon=6):\n",
+    "def visualize_trajectories(policy, env, num_trajectories=10, horizon=6, sac=False):\n",
     "    episode_actions = defaultdict(list)\n",
     "    colors = plt.cm.get_cmap('tab10', num_trajectories)\n",
     "    trajectories = []\n",
@@ -119,8 +122,11 @@
     "        state = env.reset()\n",
     "        trajectory = [(-1,0)]  \n",
     "        for t in range(horizon):\n",
-    "            action, _, _ = policy(torch.tensor(state).unsqueeze(0).float().cuda())\n",
-    "            action = action.detach().cpu()[0]\n",
+    "            if sac:\n",
+    "                action, _, _ = policy(torch.Tensor(state).unsqueeze(0).cuda())\n",
+    "                action = action.detach().cpu().numpy()[0]\n",
+    "            else:\n",
+    "                action = policy(torch.tensor(state).float())\n",
     "            state, reward, done, _ = env.step(action)\n",
     "            episode_actions[i].append((state,action))\n",
     "            cur_state = np.argwhere(state == 1)[0][0]\n",
@@ -134,15 +140,23 @@
     "            for stones_patch in stones_level:\n",
     "                stones_patch = np.linspace(stones_patch[0], stones_patch[1], 100) *100 + 100\n",
     "                for k in stones_patch:\n",
-    "                    grid[i, int(k)] = .1\n",
+    "                    grid[i, int(k)] = .9\n",
+    "\n",
+    "        agent_width = np.linspace(-(env.stones_range * env.agent_width)/2,  (env.stones_range * env.agent_width)/2, 100) *100 +100\n",
+    "        for i in agent_width:\n",
+    "\n",
+    "            grid[0, int(i)] = .9\n",
+    "        \n",
     "\n",
     "        # append trajectories\n",
+    "\n",
+    "        trajectory[0] =(0,0)\n",
     "        trajectory = np.array(trajectory)\n",
     "        trajectory[:, 0] = trajectory[:, 0] * 100 + 100\n",
     "        trajectories.append(trajectory)\n",
     "        env.reset()\n",
     "    #plot grid and trajectories\n",
-    "    grid[0,0] = 1\n",
+    "    grid[0,0] = .9\n",
     "    plt.imshow(grid, cmap='binary', aspect='auto', interpolation='nearest')\n",
     "    for i,traj in enumerate(trajectories):    \n",
     "        plt.plot(traj[:, 0],traj[:, 1],color = colors(i))\n",
@@ -153,19 +167,22 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 17,
    "metadata": {},
    "outputs": [
     {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "envs.stones=defaultdict(<class 'list'>, {1: [(-0.826733024343522, -0.426733024343522), (-0.360842598857785, 0.039157401142215), (0.15265187787213036, 0.5526518778721303)], 2: [(-0.9134370942108603, -0.5134370942108603), (-0.5081107993477196, -0.10811079934771961), (0.26869727153775835, 0.6686972715377584)], 3: [(-0.8208602411865277, -0.42086024118652765), (-0.045766633246018484, 0.35423336675398154), (0.5252426965409089, 0.925242696540909)], 4: [(-0.8194983788261374, -0.4194983788261374), (-0.3511498706924718, 0.048850129307528245), (0.07480381716630394, 0.47480381716630393)], 5: [(-0.6087816180543881, -0.2087816180543881), (-0.10838601914459416, 0.29161398085540585), (0.30813505149016046, 0.7081350514901605)]})\n"
-     ]
+     "data": {
+      "image/png": "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",
+      "text/plain": [
+       "<Figure size 640x480 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
     },
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 640x480 with 1 Axes>"
       ]
@@ -175,10 +192,16 @@
     }
    ],
    "source": [
-    "envs = ContinuousGridWorld(size=5,stones_width=0.3,stones_patches=3,agent_width = 0.2)\n",
-    "print(f\"{envs.stones=}\")\n",
+    "envs = ContinuousGridWorld()\n",
+    "\n",
     "envs.reset()\n",
-    "envs.render()"
+    "def uniform_policy(state):\n",
+    "    return torch.tensor(np.random.uniform(-1,1)).float()\n",
+    "visualize_trajectories(uniform_policy, envs, num_trajectories=10, horizon=100)\n",
+    "\n",
+    "#envs.augment_enviroment(num_rows=5)\n",
+    "\n",
+    "visualize_trajectories(uniform_policy, envs, num_trajectories=10, horizon=100)"
    ]
   },
   {
@@ -190,9 +213,21 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 5,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/botocore/httpsession.py:41: DeprecationWarning: 'urllib3.contrib.pyopenssl' module is deprecated and will be removed in a future release of urllib3 2.x. Read more in this issue: https://github.com/urllib3/urllib3/issues/2680\n",
+      "  from urllib3.contrib.pyopenssl import orig_util_SSLContext as SSLContext\n",
+      "2024-02-01 19:14:48.552380: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
+      "To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
+      "2024-02-01 19:14:49.358170: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n"
+     ]
+    }
+   ],
    "source": [
     "import numpy as np\n",
     "import torch\n",
@@ -284,9 +319,2568 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 5,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/notebook/utils.py:280: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.\n",
+      "  return LooseVersion(v) >= LooseVersion(check)\n",
+      "Failed to detect the name of this notebook, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable to enable code saving.\n",
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/google/rpc/__init__.py:20: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('google.rpc')`.\n",
+      "Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\n",
+      "  pkg_resources.declare_namespace(__name__)\n",
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/pkg_resources/__init__.py:2349: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('google')`.\n",
+      "Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages\n",
+      "  declare_namespace(parent)\n",
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/comet_ml/monkey_patching.py:19: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\n",
+      "  import imp\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33msiddarthegreat\u001b[0m (\u001b[33mswish\u001b[0m). Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n",
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/wandb/sdk/lib/ipython.py:47: DeprecationWarning: Importing display from IPython.core.display is deprecated since IPython 7.14, please import from IPython display\n",
+      "  from IPython.core.display import HTML, display  # type: ignore\n"
+     ]
+    },
+    {
+     "data": {
+      "text/html": [
+       "wandb version 0.16.2 is available!  To upgrade, please run:\n",
+       " $ pip install wandb --upgrade"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Tracking run with wandb version 0.13.11"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Run data is saved locally in <code>/home/hyperpotato/Advantage-Diffusion/wandb/run-20240128_161300-9m6lyhkg</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Syncing run <strong><a href='https://wandb.ai/swish/empowerment/runs/9m6lyhkg' target=\"_blank\">SAC_lava_crossing</a></strong> to <a href='https://wandb.ai/swish/empowerment' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View project at <a href='https://wandb.ai/swish/empowerment' target=\"_blank\">https://wandb.ai/swish/empowerment</a>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View run at <a href='https://wandb.ai/swish/empowerment/runs/9m6lyhkg' target=\"_blank\">https://wandb.ai/swish/empowerment/runs/9m6lyhkg</a>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "2024-01-28 16:13:04.449592: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
+      "To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
+      "2024-01-28 16:13:05.202434: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n",
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/wandb/sdk/lib/import_hooks.py:243: DeprecationWarning: Deprecated since Python 3.4. Use importlib.util.find_spec() instead.\n",
+      "  loader = importlib.find_loader(fullname, path)\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Step: 2 Reward: 2.0\n",
+      "Step: 3 Reward: 0.0\n",
+      "Step: 5 Reward: 1.0\n",
+      "Step: 6 Reward: 0.0\n",
+      "Step: 8 Reward: 1.0\n",
+      "Step: 9 Reward: 0.0\n",
+      "Step: 10 Reward: 0.0\n",
+      "Step: 11 Reward: 0.0\n",
+      "Step: 16 Reward: 14.0\n",
+      "Step: 17 Reward: 0.0\n",
+      "Step: 19 Reward: 1.0\n",
+      "Step: 24 Reward: 4.0\n",
+      "Step: 25 Reward: 0.0\n",
+      "Step: 28 Reward: 2.0\n",
+      "Step: 29 Reward: 0.0\n",
+      "Step: 31 Reward: 1.0\n",
+      "Step: 36 Reward: 14.0\n",
+      "Step: 40 Reward: 3.0\n",
+      "Step: 42 Reward: 1.0\n",
+      "Step: 45 Reward: 2.0\n",
+      "Step: 47 Reward: 1.0\n",
+      "Step: 49 Reward: 1.0\n",
+      "Step: 50 Reward: 0.0\n",
+      "Step: 54 Reward: 3.0\n",
+      "Step: 55 Reward: 0.0\n",
+      "Step: 57 Reward: 1.0\n",
+      "Step: 61 Reward: 3.0\n",
+      "Step: 63 Reward: 1.0\n",
+      "Step: 66 Reward: 2.0\n",
+      "Step: 67 Reward: 0.0\n",
+      "Step: 68 Reward: 0.0\n",
+      "Step: 70 Reward: 1.0\n",
+      "Step: 73 Reward: 2.0\n",
+      "Step: 75 Reward: 1.0\n",
+      "Step: 78 Reward: 2.0\n",
+      "Step: 79 Reward: 0.0\n",
+      "Step: 80 Reward: 0.0\n",
+      "Step: 81 Reward: 0.0\n",
+      "Step: 82 Reward: 0.0\n",
+      "Step: 83 Reward: 0.0\n",
+      "Step: 84 Reward: 0.0\n",
+      "Step: 85 Reward: 0.0\n",
+      "Step: 86 Reward: 0.0\n",
+      "Step: 87 Reward: 0.0\n",
+      "Step: 88 Reward: 0.0\n",
+      "Step: 89 Reward: 0.0\n",
+      "Step: 90 Reward: 0.0\n",
+      "Step: 95 Reward: 14.0\n",
+      "Step: 97 Reward: 1.0\n",
+      "Step: 102 Reward: 14.0\n",
+      "Step: 103 Reward: 0.0\n",
+      "Step: 108 Reward: 14.0\n",
+      "Step: 109 Reward: 0.0\n",
+      "Step: 110 Reward: 0.0\n",
+      "Step: 111 Reward: 0.0\n",
+      "Step: 112 Reward: 0.0\n",
+      "Step: 113 Reward: 0.0\n",
+      "Step: 117 Reward: 3.0\n",
+      "Step: 118 Reward: 0.0\n",
+      "Step: 119 Reward: 0.0\n",
+      "Step: 120 Reward: 0.0\n",
+      "Step: 124 Reward: 3.0\n",
+      "Step: 126 Reward: 1.0\n",
+      "Step: 131 Reward: 4.0\n",
+      "Step: 136 Reward: 14.0\n",
+      "Step: 137 Reward: 0.0\n",
+      "Step: 140 Reward: 2.0\n",
+      "Step: 141 Reward: 0.0\n",
+      "Step: 142 Reward: 0.0\n",
+      "Step: 145 Reward: 2.0\n",
+      "Step: 146 Reward: 0.0\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/tmp/ipykernel_13582/2633305005.py:52: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:261.)\n",
+      "  states = torch.tensor([i[0] for i in minibatch]).float().cuda()\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Step: 147 Reward: 0.0\n",
+      "Step: 149 Reward: 1.0\n",
+      "Step: 152 Reward: 2.0\n",
+      "Step: 155 Reward: 2.0\n",
+      "Step: 157 Reward: 1.0\n",
+      "Step: 159 Reward: 1.0\n",
+      "Step: 161 Reward: 1.0\n",
+      "Step: 163 Reward: 1.0\n",
+      "Step: 166 Reward: 2.0\n",
+      "Step: 168 Reward: 1.0\n",
+      "Step: 173 Reward: 14.0\n",
+      "Step: 178 Reward: 4.0\n",
+      "Step: 183 Reward: 14.0\n",
+      "Step: 187 Reward: 3.0\n",
+      "Step: 189 Reward: 1.0\n",
+      "Step: 194 Reward: 14.0\n",
+      "Step: 197 Reward: 2.0\n",
+      "Step: 198 Reward: 0.0\n",
+      "Step: 203 Reward: 4.0\n",
+      "Step: 206 Reward: 2.0\n",
+      "Step: 208 Reward: 1.0\n",
+      "Step: 209 Reward: 0.0\n",
+      "Step: 213 Reward: 3.0\n",
+      "Step: 218 Reward: 4.0\n",
+      "Step: 219 Reward: 0.0\n",
+      "Step: 224 Reward: 14.0\n",
+      "Step: 227 Reward: 2.0\n",
+      "Step: 230 Reward: 2.0\n",
+      "Step: 235 Reward: 14.0\n",
+      "Step: 237 Reward: 1.0\n",
+      "Step: 242 Reward: 14.0\n",
+      "Step: 244 Reward: 1.0\n",
+      "Step: 248 Reward: 3.0\n",
+      "Step: 249 Reward: 0.0\n",
+      "Step: 254 Reward: 14.0\n",
+      "Step: 259 Reward: 14.0\n",
+      "Step: 262 Reward: 2.0\n",
+      "Step: 265 Reward: 2.0\n",
+      "Step: 268 Reward: 2.0\n",
+      "Step: 271 Reward: 2.0\n",
+      "Step: 275 Reward: 3.0\n",
+      "Step: 280 Reward: 14.0\n",
+      "Step: 284 Reward: 3.0\n",
+      "Step: 287 Reward: 2.0\n",
+      "Step: 289 Reward: 1.0\n",
+      "Step: 290 Reward: 0.0\n",
+      "Step: 295 Reward: 14.0\n",
+      "Step: 297 Reward: 1.0\n",
+      "Step: 302 Reward: 4.0\n",
+      "Step: 304 Reward: 1.0\n",
+      "Step: 309 Reward: 14.0\n",
+      "Step: 314 Reward: 14.0\n",
+      "Step: 319 Reward: 14.0\n",
+      "Step: 320 Reward: 0.0\n",
+      "Step: 324 Reward: 3.0\n",
+      "Step: 327 Reward: 2.0\n",
+      "Step: 330 Reward: 2.0\n",
+      "Step: 335 Reward: 4.0\n",
+      "Step: 336 Reward: 0.0\n",
+      "Step: 337 Reward: 0.0\n",
+      "Step: 340 Reward: 2.0\n",
+      "Step: 343 Reward: 2.0\n",
+      "Step: 348 Reward: 4.0\n",
+      "Step: 353 Reward: 4.0\n",
+      "Step: 356 Reward: 2.0\n",
+      "Step: 358 Reward: 1.0\n",
+      "Step: 361 Reward: 2.0\n",
+      "Step: 364 Reward: 2.0\n",
+      "Step: 369 Reward: 14.0\n",
+      "Step: 373 Reward: 3.0\n",
+      "Step: 376 Reward: 2.0\n",
+      "Step: 377 Reward: 0.0\n",
+      "Step: 382 Reward: 14.0\n",
+      "Step: 383 Reward: 0.0\n",
+      "Step: 384 Reward: 0.0\n",
+      "Step: 387 Reward: 2.0\n",
+      "Step: 389 Reward: 1.0\n",
+      "Step: 390 Reward: 0.0\n",
+      "Step: 393 Reward: 2.0\n",
+      "Step: 396 Reward: 2.0\n",
+      "Step: 397 Reward: 0.0\n",
+      "Step: 402 Reward: 4.0\n",
+      "Step: 403 Reward: 0.0\n",
+      "Step: 404 Reward: 0.0\n",
+      "Step: 406 Reward: 1.0\n",
+      "Step: 408 Reward: 1.0\n",
+      "Step: 409 Reward: 0.0\n",
+      "Step: 410 Reward: 0.0\n",
+      "Step: 415 Reward: 14.0\n",
+      "Step: 417 Reward: 1.0\n",
+      "Step: 418 Reward: 0.0\n",
+      "Step: 420 Reward: 1.0\n",
+      "Step: 425 Reward: 4.0\n",
+      "Step: 429 Reward: 3.0\n",
+      "Step: 431 Reward: 1.0\n",
+      "Step: 434 Reward: 2.0\n",
+      "Step: 435 Reward: 0.0\n",
+      "Step: 436 Reward: 0.0\n",
+      "Step: 439 Reward: 2.0\n",
+      "Step: 444 Reward: 14.0\n",
+      "Step: 449 Reward: 4.0\n",
+      "Step: 450 Reward: 0.0\n",
+      "Step: 452 Reward: 1.0\n",
+      "Step: 453 Reward: 0.0\n",
+      "Step: 456 Reward: 2.0\n",
+      "Step: 460 Reward: 3.0\n",
+      "Step: 465 Reward: 14.0\n",
+      "Step: 468 Reward: 2.0\n",
+      "Step: 469 Reward: 0.0\n",
+      "Step: 474 Reward: 14.0\n",
+      "Step: 479 Reward: 14.0\n",
+      "Step: 482 Reward: 2.0\n",
+      "Step: 483 Reward: 0.0\n",
+      "Step: 488 Reward: 14.0\n",
+      "Step: 493 Reward: 4.0\n",
+      "Step: 498 Reward: 4.0\n",
+      "Step: 500 Reward: 1.0\n",
+      "Step: 505 Reward: 14.0\n",
+      "Step: 508 Reward: 2.0\n",
+      "Step: 510 Reward: 1.0\n",
+      "Step: 511 Reward: 0.0\n",
+      "Step: 513 Reward: 1.0\n",
+      "Step: 517 Reward: 3.0\n",
+      "Step: 521 Reward: 3.0\n",
+      "Step: 522 Reward: 0.0\n",
+      "Step: 527 Reward: 14.0\n",
+      "Step: 528 Reward: 0.0\n",
+      "Step: 533 Reward: 4.0\n",
+      "Step: 534 Reward: 0.0\n",
+      "Step: 537 Reward: 2.0\n",
+      "Step: 538 Reward: 0.0\n",
+      "Step: 539 Reward: 0.0\n",
+      "Step: 544 Reward: 14.0\n",
+      "Step: 549 Reward: 14.0\n",
+      "Step: 550 Reward: 0.0\n",
+      "Step: 553 Reward: 2.0\n",
+      "Step: 558 Reward: 4.0\n",
+      "Step: 563 Reward: 14.0\n",
+      "Step: 568 Reward: 4.0\n",
+      "Step: 570 Reward: 1.0\n",
+      "Step: 575 Reward: 14.0\n",
+      "Step: 580 Reward: 14.0\n",
+      "Step: 583 Reward: 2.0\n",
+      "Step: 585 Reward: 1.0\n",
+      "Step: 588 Reward: 2.0\n",
+      "Step: 592 Reward: 3.0\n",
+      "Step: 595 Reward: 2.0\n",
+      "Step: 600 Reward: 4.0\n",
+      "Step: 601 Reward: 0.0\n",
+      "Step: 602 Reward: 0.0\n",
+      "Step: 605 Reward: 2.0\n",
+      "Step: 606 Reward: 0.0\n",
+      "Step: 608 Reward: 1.0\n",
+      "Step: 612 Reward: 3.0\n",
+      "Step: 616 Reward: 3.0\n",
+      "Step: 617 Reward: 0.0\n",
+      "Step: 618 Reward: 0.0\n",
+      "Step: 621 Reward: 2.0\n",
+      "Step: 622 Reward: 0.0\n",
+      "Step: 625 Reward: 2.0\n",
+      "Step: 626 Reward: 0.0\n",
+      "Step: 627 Reward: 0.0\n",
+      "Step: 629 Reward: 1.0\n",
+      "Step: 630 Reward: 0.0\n",
+      "Step: 633 Reward: 2.0\n",
+      "Step: 635 Reward: 1.0\n",
+      "Step: 640 Reward: 4.0\n",
+      "Step: 643 Reward: 2.0\n",
+      "Step: 646 Reward: 2.0\n",
+      "Step: 647 Reward: 0.0\n",
+      "Step: 650 Reward: 2.0\n",
+      "Step: 655 Reward: 14.0\n",
+      "Step: 656 Reward: 0.0\n",
+      "Step: 657 Reward: 0.0\n",
+      "Step: 658 Reward: 0.0\n",
+      "Step: 663 Reward: 14.0\n",
+      "Step: 665 Reward: 1.0\n",
+      "Step: 666 Reward: 0.0\n",
+      "Step: 671 Reward: 14.0\n",
+      "Step: 676 Reward: 4.0\n",
+      "Step: 681 Reward: 4.0\n",
+      "Step: 685 Reward: 3.0\n",
+      "Step: 689 Reward: 3.0\n",
+      "Step: 694 Reward: 14.0\n",
+      "Step: 697 Reward: 2.0\n",
+      "Step: 702 Reward: 14.0\n",
+      "Step: 703 Reward: 0.0\n",
+      "Step: 704 Reward: 0.0\n",
+      "Step: 705 Reward: 0.0\n",
+      "Step: 710 Reward: 14.0\n",
+      "Step: 714 Reward: 3.0\n",
+      "Step: 719 Reward: 14.0\n",
+      "Step: 720 Reward: 0.0\n",
+      "Step: 721 Reward: 0.0\n",
+      "Step: 726 Reward: 14.0\n",
+      "Step: 731 Reward: 14.0\n",
+      "Step: 735 Reward: 3.0\n",
+      "Step: 739 Reward: 3.0\n",
+      "Step: 744 Reward: 14.0\n",
+      "Step: 746 Reward: 1.0\n",
+      "Step: 749 Reward: 2.0\n",
+      "Step: 754 Reward: 4.0\n",
+      "Step: 756 Reward: 1.0\n",
+      "Step: 759 Reward: 2.0\n",
+      "Step: 760 Reward: 0.0\n",
+      "Step: 763 Reward: 2.0\n",
+      "Step: 768 Reward: 4.0\n",
+      "Step: 772 Reward: 3.0\n",
+      "Step: 777 Reward: 4.0\n",
+      "Step: 781 Reward: 3.0\n",
+      "Step: 784 Reward: 2.0\n",
+      "Step: 789 Reward: 14.0\n",
+      "Step: 794 Reward: 14.0\n",
+      "Step: 799 Reward: 14.0\n",
+      "Step: 804 Reward: 4.0\n",
+      "Step: 809 Reward: 14.0\n",
+      "Step: 812 Reward: 2.0\n",
+      "Step: 817 Reward: 4.0\n",
+      "Step: 822 Reward: 4.0\n",
+      "Step: 827 Reward: 14.0\n",
+      "Step: 830 Reward: 2.0\n",
+      "Step: 834 Reward: 3.0\n",
+      "Step: 838 Reward: 3.0\n",
+      "Step: 842 Reward: 3.0\n",
+      "Step: 844 Reward: 1.0\n",
+      "Step: 849 Reward: 4.0\n",
+      "Step: 850 Reward: 0.0\n",
+      "Step: 854 Reward: 3.0\n",
+      "Step: 859 Reward: 4.0\n",
+      "Step: 862 Reward: 2.0\n",
+      "Step: 863 Reward: 0.0\n",
+      "Step: 865 Reward: 1.0\n",
+      "Step: 868 Reward: 2.0\n",
+      "Step: 872 Reward: 3.0\n",
+      "Step: 877 Reward: 4.0\n",
+      "Step: 878 Reward: 0.0\n",
+      "Step: 879 Reward: 0.0\n",
+      "Step: 881 Reward: 1.0\n",
+      "Step: 886 Reward: 14.0\n",
+      "Step: 891 Reward: 14.0\n",
+      "Step: 894 Reward: 2.0\n",
+      "Step: 899 Reward: 14.0\n",
+      "Step: 902 Reward: 2.0\n",
+      "Step: 905 Reward: 2.0\n",
+      "Step: 906 Reward: 0.0\n",
+      "Step: 908 Reward: 1.0\n",
+      "Step: 910 Reward: 1.0\n",
+      "Step: 915 Reward: 4.0\n",
+      "Step: 916 Reward: 0.0\n",
+      "Step: 918 Reward: 1.0\n",
+      "Step: 922 Reward: 3.0\n",
+      "Step: 927 Reward: 4.0\n",
+      "Step: 931 Reward: 3.0\n",
+      "Step: 932 Reward: 0.0\n",
+      "Step: 937 Reward: 4.0\n",
+      "Step: 942 Reward: 14.0\n",
+      "Step: 945 Reward: 2.0\n",
+      "Step: 950 Reward: 14.0\n",
+      "Step: 951 Reward: 0.0\n",
+      "Step: 956 Reward: 14.0\n",
+      "Step: 959 Reward: 2.0\n",
+      "Step: 964 Reward: 14.0\n",
+      "Step: 969 Reward: 14.0\n",
+      "Step: 974 Reward: 14.0\n",
+      "Step: 977 Reward: 2.0\n",
+      "Step: 978 Reward: 0.0\n",
+      "Step: 980 Reward: 1.0\n",
+      "Step: 983 Reward: 2.0\n",
+      "Step: 986 Reward: 2.0\n",
+      "Step: 989 Reward: 2.0\n",
+      "Step: 990 Reward: 0.0\n",
+      "Step: 992 Reward: 1.0\n",
+      "Step: 993 Reward: 0.0\n",
+      "Step: 994 Reward: 0.0\n",
+      "Step: 995 Reward: 0.0\n",
+      "Step: 998 Reward: 2.0\n",
+      "Step: 1001 Reward: 2.0\n",
+      "Step: 1004 Reward: 2.0\n",
+      "Step: 1009 Reward: 4.0\n",
+      "Step: 1012 Reward: 2.0\n",
+      "Step: 1013 Reward: 0.0\n",
+      "Step: 1018 Reward: 4.0\n",
+      "Step: 1021 Reward: 2.0\n",
+      "Step: 1026 Reward: 4.0\n",
+      "Step: 1031 Reward: 14.0\n",
+      "Step: 1034 Reward: 2.0\n",
+      "Step: 1039 Reward: 14.0\n",
+      "Step: 1044 Reward: 14.0\n",
+      "Step: 1048 Reward: 3.0\n",
+      "Step: 1051 Reward: 2.0\n",
+      "Step: 1052 Reward: 0.0\n",
+      "Step: 1055 Reward: 2.0\n",
+      "Step: 1060 Reward: 14.0\n",
+      "Step: 1065 Reward: 4.0\n",
+      "Step: 1066 Reward: 0.0\n",
+      "Step: 1071 Reward: 14.0\n",
+      "Step: 1073 Reward: 1.0\n",
+      "Step: 1076 Reward: 2.0\n",
+      "Step: 1079 Reward: 2.0\n",
+      "Step: 1080 Reward: 0.0\n",
+      "Step: 1083 Reward: 2.0\n",
+      "Step: 1087 Reward: 3.0\n",
+      "Step: 1088 Reward: 0.0\n",
+      "Step: 1092 Reward: 3.0\n",
+      "Step: 1095 Reward: 2.0\n",
+      "Step: 1100 Reward: 4.0\n",
+      "Step: 1101 Reward: 0.0\n",
+      "Step: 1106 Reward: 14.0\n",
+      "Step: 1111 Reward: 14.0\n",
+      "Step: 1112 Reward: 0.0\n",
+      "Step: 1115 Reward: 2.0\n",
+      "Step: 1120 Reward: 14.0\n",
+      "Step: 1125 Reward: 14.0\n",
+      "Step: 1129 Reward: 3.0\n",
+      "Step: 1132 Reward: 2.0\n",
+      "Step: 1137 Reward: 4.0\n",
+      "Step: 1138 Reward: 0.0\n",
+      "Step: 1139 Reward: 0.0\n",
+      "Step: 1144 Reward: 14.0\n",
+      "Step: 1149 Reward: 4.0\n",
+      "Step: 1150 Reward: 0.0\n",
+      "Step: 1155 Reward: 14.0\n",
+      "Step: 1160 Reward: 14.0\n",
+      "Step: 1163 Reward: 2.0\n",
+      "Step: 1168 Reward: 14.0\n",
+      "Step: 1171 Reward: 2.0\n",
+      "Step: 1174 Reward: 2.0\n",
+      "Step: 1179 Reward: 4.0\n",
+      "Step: 1184 Reward: 4.0\n",
+      "Step: 1189 Reward: 14.0\n",
+      "Step: 1193 Reward: 3.0\n",
+      "Step: 1198 Reward: 14.0\n",
+      "Step: 1199 Reward: 0.0\n",
+      "Step: 1200 Reward: 0.0\n",
+      "Step: 1201 Reward: 0.0\n",
+      "Step: 1204 Reward: 2.0\n",
+      "Step: 1208 Reward: 3.0\n",
+      "Step: 1209 Reward: 0.0\n",
+      "Step: 1213 Reward: 3.0\n",
+      "Step: 1218 Reward: 14.0\n",
+      "Step: 1223 Reward: 4.0\n",
+      "Step: 1226 Reward: 2.0\n",
+      "Step: 1230 Reward: 3.0\n",
+      "Step: 1233 Reward: 2.0\n",
+      "Step: 1234 Reward: 0.0\n",
+      "Step: 1237 Reward: 2.0\n",
+      "Step: 1238 Reward: 0.0\n",
+      "Step: 1243 Reward: 14.0\n",
+      "Step: 1248 Reward: 4.0\n",
+      "Step: 1250 Reward: 1.0\n",
+      "Step: 1254 Reward: 3.0\n",
+      "Step: 1257 Reward: 2.0\n",
+      "Step: 1262 Reward: 4.0\n",
+      "Step: 1267 Reward: 14.0\n",
+      "Step: 1271 Reward: 3.0\n",
+      "Step: 1273 Reward: 1.0\n",
+      "Step: 1277 Reward: 3.0\n",
+      "Step: 1281 Reward: 3.0\n",
+      "Step: 1282 Reward: 0.0\n",
+      "Step: 1283 Reward: 0.0\n",
+      "Step: 1284 Reward: 0.0\n",
+      "Step: 1288 Reward: 3.0\n",
+      "Step: 1291 Reward: 2.0\n",
+      "Step: 1294 Reward: 2.0\n",
+      "Step: 1298 Reward: 3.0\n",
+      "Step: 1302 Reward: 3.0\n",
+      "Step: 1306 Reward: 3.0\n",
+      "Step: 1310 Reward: 3.0\n",
+      "Step: 1314 Reward: 3.0\n",
+      "Step: 1317 Reward: 2.0\n",
+      "Step: 1320 Reward: 2.0\n",
+      "Step: 1321 Reward: 0.0\n",
+      "Step: 1324 Reward: 2.0\n",
+      "Step: 1326 Reward: 1.0\n",
+      "Step: 1330 Reward: 3.0\n",
+      "Step: 1333 Reward: 2.0\n",
+      "Step: 1338 Reward: 14.0\n",
+      "Step: 1342 Reward: 3.0\n",
+      "Step: 1347 Reward: 14.0\n",
+      "Step: 1352 Reward: 14.0\n",
+      "Step: 1357 Reward: 14.0\n",
+      "Step: 1360 Reward: 2.0\n",
+      "Step: 1365 Reward: 4.0\n",
+      "Step: 1368 Reward: 2.0\n",
+      "Step: 1371 Reward: 2.0\n",
+      "Step: 1374 Reward: 2.0\n",
+      "Step: 1379 Reward: 14.0\n",
+      "Step: 1380 Reward: 0.0\n",
+      "Step: 1383 Reward: 2.0\n",
+      "Step: 1384 Reward: 0.0\n",
+      "Step: 1387 Reward: 2.0\n",
+      "Step: 1388 Reward: 0.0\n",
+      "Step: 1390 Reward: 1.0\n",
+      "Step: 1394 Reward: 3.0\n",
+      "Step: 1397 Reward: 2.0\n",
+      "Step: 1402 Reward: 4.0\n",
+      "Step: 1405 Reward: 2.0\n",
+      "Step: 1410 Reward: 14.0\n",
+      "Step: 1413 Reward: 2.0\n",
+      "Step: 1417 Reward: 3.0\n",
+      "Step: 1420 Reward: 2.0\n",
+      "Step: 1425 Reward: 14.0\n",
+      "Step: 1429 Reward: 3.0\n",
+      "Step: 1432 Reward: 2.0\n",
+      "Step: 1437 Reward: 14.0\n",
+      "Step: 1441 Reward: 3.0\n",
+      "Step: 1443 Reward: 1.0\n",
+      "Step: 1448 Reward: 14.0\n",
+      "Step: 1450 Reward: 1.0\n",
+      "Step: 1451 Reward: 0.0\n",
+      "Step: 1456 Reward: 14.0\n",
+      "Step: 1458 Reward: 1.0\n",
+      "Step: 1463 Reward: 14.0\n",
+      "Step: 1468 Reward: 14.0\n",
+      "Step: 1473 Reward: 14.0\n",
+      "Step: 1477 Reward: 3.0\n",
+      "Step: 1478 Reward: 0.0\n",
+      "Step: 1480 Reward: 1.0\n",
+      "Step: 1481 Reward: 0.0\n",
+      "Step: 1482 Reward: 0.0\n",
+      "Step: 1485 Reward: 2.0\n",
+      "Step: 1490 Reward: 14.0\n",
+      "Step: 1495 Reward: 4.0\n",
+      "Step: 1497 Reward: 1.0\n",
+      "Step: 1502 Reward: 4.0\n",
+      "Step: 1507 Reward: 4.0\n",
+      "Step: 1510 Reward: 2.0\n",
+      "Step: 1513 Reward: 2.0\n",
+      "Step: 1514 Reward: 0.0\n",
+      "Step: 1515 Reward: 0.0\n",
+      "Step: 1518 Reward: 2.0\n",
+      "Step: 1519 Reward: 0.0\n",
+      "Step: 1520 Reward: 0.0\n",
+      "Step: 1524 Reward: 3.0\n",
+      "Step: 1525 Reward: 0.0\n",
+      "Step: 1528 Reward: 2.0\n",
+      "Step: 1532 Reward: 3.0\n",
+      "Step: 1533 Reward: 0.0\n",
+      "Step: 1534 Reward: 0.0\n",
+      "Step: 1539 Reward: 14.0\n",
+      "Step: 1543 Reward: 3.0\n",
+      "Step: 1548 Reward: 4.0\n",
+      "Step: 1551 Reward: 2.0\n",
+      "Step: 1556 Reward: 4.0\n",
+      "Step: 1559 Reward: 2.0\n",
+      "Step: 1562 Reward: 2.0\n",
+      "Step: 1564 Reward: 1.0\n",
+      "Step: 1569 Reward: 14.0\n",
+      "Step: 1574 Reward: 4.0\n",
+      "Step: 1575 Reward: 0.0\n",
+      "Step: 1578 Reward: 2.0\n",
+      "Step: 1583 Reward: 14.0\n",
+      "Step: 1586 Reward: 2.0\n",
+      "Step: 1591 Reward: 4.0\n",
+      "Step: 1593 Reward: 1.0\n",
+      "Step: 1595 Reward: 1.0\n",
+      "Step: 1598 Reward: 2.0\n",
+      "Step: 1602 Reward: 3.0\n",
+      "Step: 1605 Reward: 2.0\n",
+      "Step: 1607 Reward: 1.0\n",
+      "Step: 1610 Reward: 2.0\n",
+      "Step: 1611 Reward: 0.0\n",
+      "Step: 1613 Reward: 1.0\n",
+      "Step: 1618 Reward: 14.0\n",
+      "Step: 1621 Reward: 2.0\n",
+      "Step: 1626 Reward: 14.0\n",
+      "Step: 1631 Reward: 14.0\n",
+      "Step: 1634 Reward: 2.0\n",
+      "Step: 1637 Reward: 2.0\n",
+      "Step: 1642 Reward: 4.0\n",
+      "Step: 1645 Reward: 2.0\n",
+      "Step: 1648 Reward: 2.0\n",
+      "Step: 1649 Reward: 0.0\n",
+      "Step: 1652 Reward: 2.0\n",
+      "Step: 1656 Reward: 3.0\n",
+      "Step: 1661 Reward: 4.0\n",
+      "Step: 1664 Reward: 2.0\n",
+      "Step: 1665 Reward: 0.0\n",
+      "Step: 1670 Reward: 14.0\n",
+      "Step: 1675 Reward: 14.0\n",
+      "Step: 1678 Reward: 2.0\n",
+      "Step: 1680 Reward: 1.0\n",
+      "Step: 1682 Reward: 1.0\n",
+      "Step: 1687 Reward: 14.0\n",
+      "Step: 1688 Reward: 0.0\n",
+      "Step: 1689 Reward: 0.0\n",
+      "Step: 1694 Reward: 14.0\n",
+      "Step: 1697 Reward: 2.0\n",
+      "Step: 1702 Reward: 14.0\n",
+      "Step: 1707 Reward: 14.0\n",
+      "Step: 1708 Reward: 0.0\n",
+      "Step: 1710 Reward: 1.0\n",
+      "Step: 1711 Reward: 0.0\n",
+      "Step: 1716 Reward: 4.0\n",
+      "Step: 1719 Reward: 2.0\n",
+      "Step: 1720 Reward: 0.0\n",
+      "Step: 1725 Reward: 14.0\n",
+      "Step: 1730 Reward: 4.0\n",
+      "Step: 1735 Reward: 14.0\n",
+      "Step: 1740 Reward: 14.0\n",
+      "Step: 1745 Reward: 4.0\n",
+      "Step: 1749 Reward: 3.0\n",
+      "Step: 1753 Reward: 3.0\n",
+      "Step: 1758 Reward: 14.0\n",
+      "Step: 1763 Reward: 4.0\n",
+      "Step: 1767 Reward: 3.0\n",
+      "Step: 1769 Reward: 1.0\n",
+      "Step: 1770 Reward: 0.0\n",
+      "Step: 1775 Reward: 14.0\n",
+      "Step: 1778 Reward: 2.0\n",
+      "Step: 1781 Reward: 2.0\n",
+      "Step: 1785 Reward: 3.0\n",
+      "Step: 1788 Reward: 2.0\n",
+      "Step: 1793 Reward: 4.0\n",
+      "Step: 1798 Reward: 4.0\n",
+      "Step: 1803 Reward: 14.0\n",
+      "Step: 1806 Reward: 2.0\n",
+      "Step: 1811 Reward: 14.0\n",
+      "Step: 1812 Reward: 0.0\n",
+      "Step: 1815 Reward: 2.0\n",
+      "Step: 1816 Reward: 0.0\n",
+      "Step: 1821 Reward: 14.0\n",
+      "Step: 1824 Reward: 2.0\n",
+      "Step: 1826 Reward: 1.0\n",
+      "Step: 1829 Reward: 2.0\n",
+      "Step: 1832 Reward: 2.0\n",
+      "Step: 1837 Reward: 4.0\n",
+      "Step: 1838 Reward: 0.0\n",
+      "Step: 1841 Reward: 2.0\n",
+      "Step: 1842 Reward: 0.0\n",
+      "Step: 1844 Reward: 1.0\n",
+      "Step: 1845 Reward: 0.0\n",
+      "Step: 1848 Reward: 2.0\n",
+      "Step: 1853 Reward: 14.0\n",
+      "Step: 1856 Reward: 2.0\n",
+      "Step: 1859 Reward: 2.0\n",
+      "Step: 1861 Reward: 1.0\n",
+      "Step: 1864 Reward: 2.0\n",
+      "Step: 1868 Reward: 3.0\n",
+      "Step: 1873 Reward: 14.0\n",
+      "Step: 1876 Reward: 2.0\n",
+      "Step: 1879 Reward: 2.0\n",
+      "Step: 1884 Reward: 14.0\n",
+      "Step: 1887 Reward: 2.0\n",
+      "Step: 1892 Reward: 4.0\n",
+      "Step: 1893 Reward: 0.0\n",
+      "Step: 1894 Reward: 0.0\n",
+      "Step: 1899 Reward: 4.0\n",
+      "Step: 1901 Reward: 1.0\n",
+      "Step: 1906 Reward: 14.0\n",
+      "Step: 1908 Reward: 1.0\n",
+      "Step: 1911 Reward: 2.0\n",
+      "Step: 1913 Reward: 1.0\n",
+      "Step: 1914 Reward: 0.0\n",
+      "Step: 1919 Reward: 14.0\n",
+      "Step: 1924 Reward: 14.0\n",
+      "Step: 1929 Reward: 14.0\n",
+      "Step: 1933 Reward: 3.0\n",
+      "Step: 1938 Reward: 14.0\n",
+      "Step: 1939 Reward: 0.0\n",
+      "Step: 1944 Reward: 14.0\n",
+      "Step: 1946 Reward: 1.0\n",
+      "Step: 1950 Reward: 3.0\n",
+      "Step: 1954 Reward: 3.0\n",
+      "Step: 1957 Reward: 2.0\n",
+      "Step: 1960 Reward: 2.0\n",
+      "Step: 1961 Reward: 0.0\n",
+      "Step: 1964 Reward: 2.0\n",
+      "Step: 1967 Reward: 2.0\n",
+      "Step: 1972 Reward: 14.0\n",
+      "Step: 1977 Reward: 4.0\n",
+      "Step: 1980 Reward: 2.0\n",
+      "Step: 1985 Reward: 14.0\n",
+      "Step: 1990 Reward: 4.0\n",
+      "Step: 1995 Reward: 14.0\n",
+      "Step: 1996 Reward: 0.0\n",
+      "Step: 2000 Reward: 3.0\n",
+      "Step: 2003 Reward: 2.0\n",
+      "Step: 2007 Reward: 3.0\n",
+      "Step: 2010 Reward: 2.0\n",
+      "Step: 2014 Reward: 3.0\n",
+      "Step: 2019 Reward: 14.0\n",
+      "Step: 2024 Reward: 14.0\n",
+      "Step: 2029 Reward: 14.0\n",
+      "Step: 2034 Reward: 4.0\n",
+      "Step: 2037 Reward: 2.0\n",
+      "Step: 2040 Reward: 2.0\n",
+      "Step: 2043 Reward: 2.0\n",
+      "Step: 2048 Reward: 4.0\n",
+      "Step: 2052 Reward: 3.0\n",
+      "Step: 2054 Reward: 1.0\n",
+      "Step: 2055 Reward: 0.0\n",
+      "Step: 2059 Reward: 3.0\n",
+      "Step: 2062 Reward: 2.0\n",
+      "Step: 2065 Reward: 2.0\n",
+      "Step: 2069 Reward: 3.0\n",
+      "Step: 2074 Reward: 14.0\n",
+      "Step: 2079 Reward: 14.0\n",
+      "Step: 2080 Reward: 0.0\n",
+      "Step: 2083 Reward: 2.0\n",
+      "Step: 2085 Reward: 1.0\n",
+      "Step: 2088 Reward: 2.0\n",
+      "Step: 2089 Reward: 0.0\n",
+      "Step: 2094 Reward: 14.0\n",
+      "Step: 2095 Reward: 0.0\n",
+      "Step: 2098 Reward: 2.0\n",
+      "Step: 2100 Reward: 1.0\n",
+      "Step: 2103 Reward: 2.0\n",
+      "Step: 2106 Reward: 2.0\n",
+      "Step: 2111 Reward: 4.0\n",
+      "Step: 2116 Reward: 14.0\n",
+      "Step: 2119 Reward: 2.0\n",
+      "Step: 2123 Reward: 3.0\n",
+      "Step: 2128 Reward: 14.0\n",
+      "Step: 2132 Reward: 3.0\n",
+      "Step: 2136 Reward: 3.0\n",
+      "Step: 2141 Reward: 14.0\n",
+      "Step: 2146 Reward: 14.0\n",
+      "Step: 2149 Reward: 2.0\n",
+      "Step: 2152 Reward: 2.0\n",
+      "Step: 2155 Reward: 2.0\n",
+      "Step: 2158 Reward: 2.0\n",
+      "Step: 2163 Reward: 14.0\n",
+      "Step: 2168 Reward: 14.0\n",
+      "Step: 2171 Reward: 2.0\n",
+      "Step: 2176 Reward: 4.0\n",
+      "Step: 2181 Reward: 14.0\n",
+      "Step: 2184 Reward: 2.0\n",
+      "Step: 2187 Reward: 2.0\n",
+      "Step: 2189 Reward: 1.0\n",
+      "Step: 2194 Reward: 4.0\n",
+      "Step: 2198 Reward: 3.0\n",
+      "Step: 2202 Reward: 3.0\n",
+      "Step: 2204 Reward: 1.0\n",
+      "Step: 2208 Reward: 3.0\n",
+      "Step: 2212 Reward: 3.0\n",
+      "Step: 2215 Reward: 2.0\n",
+      "Step: 2218 Reward: 2.0\n",
+      "Step: 2222 Reward: 3.0\n",
+      "Step: 2227 Reward: 14.0\n",
+      "Step: 2231 Reward: 3.0\n",
+      "Step: 2232 Reward: 0.0\n",
+      "Step: 2233 Reward: 0.0\n",
+      "Step: 2236 Reward: 2.0\n",
+      "Step: 2239 Reward: 2.0\n",
+      "Step: 2244 Reward: 14.0\n",
+      "Step: 2249 Reward: 4.0\n",
+      "Step: 2253 Reward: 3.0\n",
+      "Step: 2258 Reward: 14.0\n",
+      "Step: 2260 Reward: 1.0\n",
+      "Step: 2263 Reward: 2.0\n",
+      "Step: 2268 Reward: 14.0\n",
+      "Step: 2273 Reward: 14.0\n",
+      "Step: 2277 Reward: 3.0\n",
+      "Step: 2280 Reward: 2.0\n",
+      "Step: 2283 Reward: 2.0\n",
+      "Step: 2285 Reward: 1.0\n",
+      "Step: 2289 Reward: 3.0\n",
+      "Step: 2291 Reward: 1.0\n",
+      "Step: 2295 Reward: 3.0\n",
+      "Step: 2297 Reward: 1.0\n",
+      "Step: 2302 Reward: 14.0\n",
+      "Step: 2307 Reward: 14.0\n",
+      "Step: 2312 Reward: 14.0\n",
+      "Step: 2317 Reward: 14.0\n",
+      "Step: 2319 Reward: 1.0\n",
+      "Step: 2323 Reward: 3.0\n",
+      "Step: 2327 Reward: 3.0\n",
+      "Step: 2332 Reward: 14.0\n",
+      "Step: 2335 Reward: 2.0\n",
+      "Step: 2340 Reward: 14.0\n",
+      "Step: 2343 Reward: 2.0\n",
+      "Step: 2344 Reward: 0.0\n",
+      "Step: 2349 Reward: 4.0\n",
+      "Step: 2354 Reward: 4.0\n",
+      "Step: 2357 Reward: 2.0\n",
+      "Step: 2361 Reward: 3.0\n",
+      "Step: 2365 Reward: 3.0\n",
+      "Step: 2370 Reward: 14.0\n",
+      "Step: 2374 Reward: 3.0\n",
+      "Step: 2378 Reward: 3.0\n",
+      "Step: 2380 Reward: 1.0\n",
+      "Step: 2385 Reward: 14.0\n",
+      "Step: 2388 Reward: 2.0\n",
+      "Step: 2390 Reward: 1.0\n",
+      "Step: 2392 Reward: 1.0\n",
+      "Step: 2397 Reward: 14.0\n",
+      "Step: 2401 Reward: 3.0\n",
+      "Step: 2403 Reward: 1.0\n",
+      "Step: 2406 Reward: 2.0\n",
+      "Step: 2411 Reward: 14.0\n",
+      "Step: 2413 Reward: 1.0\n",
+      "Step: 2416 Reward: 2.0\n",
+      "Step: 2421 Reward: 4.0\n",
+      "Step: 2426 Reward: 4.0\n",
+      "Step: 2427 Reward: 0.0\n",
+      "Step: 2431 Reward: 3.0\n",
+      "Step: 2436 Reward: 4.0\n",
+      "Step: 2441 Reward: 14.0\n",
+      "Step: 2444 Reward: 2.0\n",
+      "Step: 2447 Reward: 2.0\n",
+      "Step: 2451 Reward: 3.0\n",
+      "Step: 2453 Reward: 1.0\n",
+      "Step: 2458 Reward: 14.0\n",
+      "Step: 2459 Reward: 0.0\n",
+      "Step: 2461 Reward: 1.0\n",
+      "Step: 2466 Reward: 14.0\n",
+      "Step: 2469 Reward: 2.0\n",
+      "Step: 2472 Reward: 2.0\n",
+      "Step: 2476 Reward: 3.0\n",
+      "Step: 2481 Reward: 4.0\n",
+      "Step: 2485 Reward: 3.0\n",
+      "Step: 2490 Reward: 14.0\n",
+      "Step: 2493 Reward: 2.0\n",
+      "Step: 2495 Reward: 1.0\n",
+      "Step: 2498 Reward: 2.0\n",
+      "Step: 2501 Reward: 2.0\n",
+      "Step: 2504 Reward: 2.0\n",
+      "Step: 2507 Reward: 2.0\n",
+      "Step: 2509 Reward: 1.0\n",
+      "Step: 2510 Reward: 0.0\n",
+      "Step: 2515 Reward: 4.0\n",
+      "Step: 2520 Reward: 14.0\n",
+      "Step: 2523 Reward: 2.0\n",
+      "Step: 2528 Reward: 14.0\n",
+      "Step: 2533 Reward: 4.0\n",
+      "Step: 2537 Reward: 3.0\n",
+      "Step: 2540 Reward: 2.0\n",
+      "Step: 2544 Reward: 3.0\n",
+      "Step: 2549 Reward: 14.0\n",
+      "Step: 2554 Reward: 14.0\n",
+      "Step: 2558 Reward: 3.0\n",
+      "Step: 2561 Reward: 2.0\n",
+      "Step: 2566 Reward: 4.0\n",
+      "Step: 2568 Reward: 1.0\n",
+      "Step: 2571 Reward: 2.0\n",
+      "Step: 2576 Reward: 14.0\n",
+      "Step: 2579 Reward: 2.0\n",
+      "Step: 2582 Reward: 2.0\n",
+      "Step: 2584 Reward: 1.0\n",
+      "Step: 2588 Reward: 3.0\n",
+      "Step: 2593 Reward: 14.0\n",
+      "Step: 2594 Reward: 0.0\n",
+      "Step: 2599 Reward: 4.0\n",
+      "Step: 2602 Reward: 2.0\n",
+      "Step: 2605 Reward: 2.0\n",
+      "Step: 2610 Reward: 14.0\n",
+      "Step: 2611 Reward: 0.0\n",
+      "Step: 2616 Reward: 14.0\n",
+      "Step: 2620 Reward: 3.0\n",
+      "Step: 2624 Reward: 3.0\n",
+      "Step: 2629 Reward: 4.0\n",
+      "Step: 2630 Reward: 0.0\n",
+      "Step: 2635 Reward: 14.0\n",
+      "Step: 2638 Reward: 2.0\n",
+      "Step: 2641 Reward: 2.0\n",
+      "Step: 2644 Reward: 2.0\n",
+      "Step: 2649 Reward: 4.0\n",
+      "Step: 2653 Reward: 3.0\n",
+      "Step: 2656 Reward: 2.0\n",
+      "Step: 2659 Reward: 2.0\n",
+      "Step: 2664 Reward: 14.0\n",
+      "Step: 2669 Reward: 14.0\n",
+      "Step: 2672 Reward: 2.0\n",
+      "Step: 2677 Reward: 14.0\n",
+      "Step: 2679 Reward: 1.0\n",
+      "Step: 2684 Reward: 14.0\n",
+      "Step: 2689 Reward: 14.0\n",
+      "Step: 2691 Reward: 1.0\n",
+      "Step: 2694 Reward: 2.0\n",
+      "Step: 2699 Reward: 4.0\n",
+      "Step: 2702 Reward: 2.0\n",
+      "Step: 2707 Reward: 14.0\n",
+      "Step: 2709 Reward: 1.0\n",
+      "Step: 2712 Reward: 2.0\n",
+      "Step: 2715 Reward: 2.0\n",
+      "Step: 2719 Reward: 3.0\n",
+      "Step: 2720 Reward: 0.0\n",
+      "Step: 2722 Reward: 1.0\n",
+      "Step: 2726 Reward: 3.0\n",
+      "Step: 2729 Reward: 2.0\n",
+      "Step: 2730 Reward: 0.0\n",
+      "Step: 2733 Reward: 2.0\n",
+      "Step: 2738 Reward: 14.0\n",
+      "Step: 2743 Reward: 14.0\n",
+      "Step: 2745 Reward: 1.0\n",
+      "Step: 2750 Reward: 4.0\n",
+      "Step: 2755 Reward: 14.0\n",
+      "Step: 2757 Reward: 1.0\n",
+      "Step: 2760 Reward: 2.0\n",
+      "Step: 2765 Reward: 4.0\n",
+      "Step: 2770 Reward: 4.0\n",
+      "Step: 2774 Reward: 3.0\n",
+      "Step: 2779 Reward: 14.0\n",
+      "Step: 2782 Reward: 2.0\n",
+      "Step: 2784 Reward: 1.0\n",
+      "Step: 2789 Reward: 4.0\n",
+      "Step: 2794 Reward: 14.0\n",
+      "Step: 2798 Reward: 3.0\n",
+      "Step: 2800 Reward: 1.0\n",
+      "Step: 2804 Reward: 3.0\n",
+      "Step: 2809 Reward: 14.0\n",
+      "Step: 2812 Reward: 2.0\n",
+      "Step: 2815 Reward: 2.0\n",
+      "Step: 2818 Reward: 2.0\n",
+      "Step: 2823 Reward: 14.0\n",
+      "Step: 2828 Reward: 14.0\n",
+      "Step: 2832 Reward: 3.0\n",
+      "Step: 2837 Reward: 14.0\n",
+      "Step: 2839 Reward: 1.0\n",
+      "Step: 2842 Reward: 2.0\n",
+      "Step: 2847 Reward: 4.0\n",
+      "Step: 2852 Reward: 14.0\n",
+      "Step: 2855 Reward: 2.0\n",
+      "Step: 2858 Reward: 2.0\n",
+      "Step: 2863 Reward: 14.0\n",
+      "Step: 2864 Reward: 0.0\n",
+      "Step: 2868 Reward: 3.0\n",
+      "Step: 2869 Reward: 0.0\n",
+      "Step: 2874 Reward: 4.0\n",
+      "Step: 2877 Reward: 2.0\n",
+      "Step: 2882 Reward: 14.0\n",
+      "Step: 2887 Reward: 14.0\n",
+      "Step: 2892 Reward: 4.0\n",
+      "Step: 2897 Reward: 14.0\n",
+      "Step: 2900 Reward: 2.0\n",
+      "Step: 2905 Reward: 14.0\n",
+      "Step: 2909 Reward: 3.0\n",
+      "Step: 2914 Reward: 4.0\n",
+      "Step: 2918 Reward: 3.0\n",
+      "Step: 2921 Reward: 2.0\n",
+      "Step: 2924 Reward: 2.0\n",
+      "Step: 2929 Reward: 4.0\n",
+      "Step: 2934 Reward: 14.0\n",
+      "Step: 2937 Reward: 2.0\n",
+      "Step: 2942 Reward: 14.0\n",
+      "Step: 2947 Reward: 14.0\n",
+      "Step: 2951 Reward: 3.0\n",
+      "Step: 2952 Reward: 0.0\n",
+      "Step: 2957 Reward: 14.0\n",
+      "Step: 2960 Reward: 2.0\n",
+      "Step: 2965 Reward: 14.0\n",
+      "Step: 2966 Reward: 0.0\n",
+      "Step: 2969 Reward: 2.0\n",
+      "Step: 2974 Reward: 14.0\n",
+      "Step: 2979 Reward: 4.0\n",
+      "Step: 2984 Reward: 14.0\n",
+      "Step: 2987 Reward: 2.0\n",
+      "Step: 2992 Reward: 14.0\n",
+      "Step: 2997 Reward: 14.0\n",
+      "Step: 3000 Reward: 2.0\n",
+      "Step: 3002 Reward: 1.0\n",
+      "Step: 3005 Reward: 2.0\n",
+      "Step: 3008 Reward: 2.0\n",
+      "Step: 3013 Reward: 14.0\n",
+      "Step: 3018 Reward: 14.0\n",
+      "Step: 3022 Reward: 3.0\n",
+      "Step: 3025 Reward: 2.0\n",
+      "Step: 3028 Reward: 2.0\n",
+      "Step: 3029 Reward: 0.0\n",
+      "Step: 3034 Reward: 4.0\n",
+      "Step: 3035 Reward: 0.0\n",
+      "Step: 3040 Reward: 14.0\n",
+      "Step: 3045 Reward: 14.0\n",
+      "Step: 3050 Reward: 14.0\n",
+      "Step: 3055 Reward: 14.0\n",
+      "Step: 3060 Reward: 14.0\n",
+      "Step: 3063 Reward: 2.0\n",
+      "Step: 3066 Reward: 2.0\n",
+      "Step: 3071 Reward: 14.0\n",
+      "Step: 3072 Reward: 0.0\n",
+      "Step: 3077 Reward: 4.0\n",
+      "Step: 3082 Reward: 14.0\n",
+      "Step: 3087 Reward: 14.0\n",
+      "Step: 3092 Reward: 4.0\n",
+      "Step: 3097 Reward: 14.0\n",
+      "Step: 3100 Reward: 2.0\n",
+      "Step: 3103 Reward: 2.0\n",
+      "Step: 3108 Reward: 4.0\n",
+      "Step: 3113 Reward: 4.0\n",
+      "Step: 3115 Reward: 1.0\n",
+      "Step: 3116 Reward: 0.0\n",
+      "Step: 3121 Reward: 4.0\n",
+      "Step: 3126 Reward: 14.0\n",
+      "Step: 3129 Reward: 2.0\n",
+      "Step: 3134 Reward: 14.0\n",
+      "Step: 3139 Reward: 14.0\n",
+      "Step: 3144 Reward: 14.0\n",
+      "Step: 3149 Reward: 4.0\n",
+      "Step: 3152 Reward: 2.0\n",
+      "Step: 3157 Reward: 14.0\n",
+      "Step: 3162 Reward: 14.0\n",
+      "Step: 3167 Reward: 14.0\n",
+      "Step: 3171 Reward: 3.0\n",
+      "Step: 3174 Reward: 2.0\n",
+      "Step: 3179 Reward: 14.0\n",
+      "Step: 3182 Reward: 2.0\n",
+      "Step: 3183 Reward: 0.0\n",
+      "Step: 3186 Reward: 2.0\n",
+      "Step: 3191 Reward: 14.0\n",
+      "Step: 3196 Reward: 14.0\n",
+      "Step: 3199 Reward: 2.0\n",
+      "Step: 3204 Reward: 14.0\n",
+      "Step: 3209 Reward: 14.0\n",
+      "Step: 3214 Reward: 4.0\n",
+      "Step: 3219 Reward: 14.0\n",
+      "Step: 3224 Reward: 14.0\n",
+      "Step: 3226 Reward: 1.0\n",
+      "Step: 3231 Reward: 14.0\n",
+      "Step: 3236 Reward: 4.0\n",
+      "Step: 3241 Reward: 14.0\n",
+      "Step: 3246 Reward: 4.0\n",
+      "Step: 3249 Reward: 2.0\n",
+      "Step: 3252 Reward: 2.0\n",
+      "Step: 3257 Reward: 14.0\n",
+      "Step: 3262 Reward: 4.0\n",
+      "Step: 3267 Reward: 14.0\n",
+      "Step: 3272 Reward: 14.0\n",
+      "Step: 3277 Reward: 14.0\n",
+      "Step: 3282 Reward: 4.0\n",
+      "Step: 3285 Reward: 2.0\n",
+      "Step: 3288 Reward: 2.0\n",
+      "Step: 3293 Reward: 14.0\n",
+      "Step: 3296 Reward: 2.0\n",
+      "Step: 3301 Reward: 4.0\n",
+      "Step: 3304 Reward: 2.0\n",
+      "Step: 3307 Reward: 2.0\n",
+      "Step: 3310 Reward: 2.0\n",
+      "Step: 3311 Reward: 0.0\n",
+      "Step: 3314 Reward: 2.0\n",
+      "Step: 3319 Reward: 14.0\n",
+      "Step: 3324 Reward: 14.0\n",
+      "Step: 3329 Reward: 14.0\n",
+      "Step: 3334 Reward: 14.0\n",
+      "Step: 3337 Reward: 2.0\n",
+      "Step: 3339 Reward: 1.0\n",
+      "Step: 3344 Reward: 14.0\n",
+      "Step: 3349 Reward: 4.0\n",
+      "Step: 3354 Reward: 14.0\n",
+      "Step: 3359 Reward: 14.0\n",
+      "Step: 3362 Reward: 2.0\n",
+      "Step: 3363 Reward: 0.0\n",
+      "Step: 3365 Reward: 1.0\n",
+      "Step: 3366 Reward: 0.0\n",
+      "Step: 3371 Reward: 14.0\n",
+      "Step: 3376 Reward: 14.0\n",
+      "Step: 3381 Reward: 14.0\n",
+      "Step: 3384 Reward: 2.0\n",
+      "Step: 3389 Reward: 14.0\n",
+      "Step: 3392 Reward: 2.0\n",
+      "Step: 3397 Reward: 14.0\n",
+      "Step: 3402 Reward: 14.0\n",
+      "Step: 3405 Reward: 2.0\n",
+      "Step: 3408 Reward: 2.0\n",
+      "Step: 3413 Reward: 14.0\n",
+      "Step: 3414 Reward: 0.0\n",
+      "Step: 3417 Reward: 2.0\n",
+      "Step: 3422 Reward: 14.0\n",
+      "Step: 3427 Reward: 14.0\n",
+      "Step: 3432 Reward: 14.0\n",
+      "Step: 3435 Reward: 2.0\n",
+      "Step: 3440 Reward: 4.0\n",
+      "Step: 3445 Reward: 14.0\n",
+      "Step: 3448 Reward: 2.0\n",
+      "Step: 3451 Reward: 2.0\n",
+      "Step: 3456 Reward: 14.0\n",
+      "Step: 3458 Reward: 1.0\n",
+      "Step: 3463 Reward: 4.0\n",
+      "Step: 3468 Reward: 14.0\n",
+      "Step: 3471 Reward: 2.0\n",
+      "Step: 3474 Reward: 2.0\n",
+      "Step: 3479 Reward: 14.0\n",
+      "Step: 3482 Reward: 2.0\n",
+      "Step: 3487 Reward: 14.0\n",
+      "Step: 3492 Reward: 4.0\n",
+      "Step: 3497 Reward: 14.0\n",
+      "Step: 3502 Reward: 14.0\n",
+      "Step: 3507 Reward: 14.0\n",
+      "Step: 3510 Reward: 2.0\n",
+      "Step: 3515 Reward: 4.0\n",
+      "Step: 3517 Reward: 1.0\n",
+      "Step: 3522 Reward: 4.0\n",
+      "Step: 3525 Reward: 2.0\n",
+      "Step: 3530 Reward: 14.0\n",
+      "Step: 3533 Reward: 2.0\n",
+      "Step: 3536 Reward: 2.0\n",
+      "Step: 3539 Reward: 2.0\n",
+      "Step: 3542 Reward: 2.0\n",
+      "Step: 3547 Reward: 14.0\n",
+      "Step: 3550 Reward: 2.0\n",
+      "Step: 3555 Reward: 14.0\n",
+      "Step: 3560 Reward: 14.0\n",
+      "Step: 3565 Reward: 14.0\n",
+      "Step: 3568 Reward: 2.0\n",
+      "Step: 3573 Reward: 14.0\n",
+      "Step: 3578 Reward: 14.0\n",
+      "Step: 3583 Reward: 4.0\n",
+      "Step: 3586 Reward: 2.0\n",
+      "Step: 3591 Reward: 14.0\n",
+      "Step: 3596 Reward: 14.0\n",
+      "Step: 3599 Reward: 2.0\n",
+      "Step: 3604 Reward: 14.0\n",
+      "Step: 3607 Reward: 2.0\n",
+      "Step: 3610 Reward: 2.0\n",
+      "Step: 3613 Reward: 2.0\n",
+      "Step: 3618 Reward: 4.0\n",
+      "Step: 3623 Reward: 14.0\n",
+      "Step: 3626 Reward: 2.0\n",
+      "Step: 3629 Reward: 2.0\n",
+      "Step: 3634 Reward: 14.0\n",
+      "Step: 3639 Reward: 14.0\n",
+      "Step: 3644 Reward: 14.0\n",
+      "Step: 3649 Reward: 4.0\n",
+      "Step: 3654 Reward: 14.0\n",
+      "Step: 3659 Reward: 14.0\n",
+      "Step: 3664 Reward: 14.0\n",
+      "Step: 3669 Reward: 14.0\n",
+      "Step: 3672 Reward: 2.0\n",
+      "Step: 3676 Reward: 3.0\n",
+      "Step: 3679 Reward: 2.0\n",
+      "Step: 3684 Reward: 4.0\n",
+      "Step: 3687 Reward: 2.0\n",
+      "Step: 3690 Reward: 2.0\n",
+      "Step: 3695 Reward: 14.0\n",
+      "Step: 3700 Reward: 14.0\n",
+      "Step: 3705 Reward: 14.0\n",
+      "Step: 3710 Reward: 14.0\n",
+      "Step: 3715 Reward: 14.0\n",
+      "Step: 3720 Reward: 14.0\n",
+      "Step: 3721 Reward: 0.0\n",
+      "Step: 3726 Reward: 14.0\n",
+      "Step: 3729 Reward: 2.0\n",
+      "Step: 3732 Reward: 2.0\n",
+      "Step: 3737 Reward: 4.0\n",
+      "Step: 3742 Reward: 14.0\n",
+      "Step: 3747 Reward: 4.0\n",
+      "Step: 3750 Reward: 2.0\n",
+      "Step: 3755 Reward: 14.0\n",
+      "Step: 3760 Reward: 14.0\n",
+      "Step: 3765 Reward: 14.0\n",
+      "Step: 3770 Reward: 14.0\n",
+      "Step: 3775 Reward: 14.0\n",
+      "Step: 3780 Reward: 14.0\n",
+      "Step: 3783 Reward: 2.0\n",
+      "Step: 3788 Reward: 14.0\n",
+      "Step: 3789 Reward: 0.0\n",
+      "Step: 3792 Reward: 2.0\n",
+      "Step: 3797 Reward: 14.0\n",
+      "Step: 3802 Reward: 14.0\n",
+      "Step: 3807 Reward: 14.0\n",
+      "Step: 3812 Reward: 14.0\n",
+      "Step: 3817 Reward: 14.0\n",
+      "Step: 3822 Reward: 14.0\n",
+      "Step: 3827 Reward: 14.0\n",
+      "Step: 3832 Reward: 14.0\n",
+      "Step: 3837 Reward: 14.0\n",
+      "Step: 3842 Reward: 14.0\n",
+      "Step: 3845 Reward: 2.0\n",
+      "Step: 3850 Reward: 14.0\n",
+      "Step: 3855 Reward: 14.0\n",
+      "Step: 3860 Reward: 14.0\n",
+      "Step: 3865 Reward: 14.0\n",
+      "Step: 3870 Reward: 14.0\n",
+      "Step: 3875 Reward: 14.0\n",
+      "Step: 3878 Reward: 2.0\n",
+      "Step: 3883 Reward: 14.0\n",
+      "Step: 3888 Reward: 14.0\n",
+      "Step: 3893 Reward: 14.0\n",
+      "Step: 3898 Reward: 14.0\n",
+      "Step: 3899 Reward: 0.0\n",
+      "Step: 3904 Reward: 14.0\n",
+      "Step: 3907 Reward: 2.0\n",
+      "Step: 3910 Reward: 2.0\n",
+      "Step: 3913 Reward: 2.0\n",
+      "Step: 3918 Reward: 14.0\n",
+      "Step: 3921 Reward: 2.0\n",
+      "Step: 3926 Reward: 14.0\n",
+      "Step: 3931 Reward: 14.0\n",
+      "Step: 3936 Reward: 14.0\n",
+      "Step: 3939 Reward: 2.0\n",
+      "Step: 3944 Reward: 14.0\n",
+      "Step: 3949 Reward: 14.0\n",
+      "Step: 3954 Reward: 14.0\n",
+      "Step: 3959 Reward: 14.0\n",
+      "Step: 3964 Reward: 14.0\n",
+      "Step: 3969 Reward: 14.0\n",
+      "Step: 3974 Reward: 14.0\n",
+      "Step: 3979 Reward: 14.0\n",
+      "Step: 3982 Reward: 2.0\n",
+      "Step: 3987 Reward: 14.0\n",
+      "Step: 3992 Reward: 14.0\n",
+      "Step: 3995 Reward: 2.0\n",
+      "Step: 4000 Reward: 14.0\n",
+      "Step: 4005 Reward: 14.0\n",
+      "Step: 4010 Reward: 14.0\n",
+      "Step: 4015 Reward: 14.0\n",
+      "Step: 4020 Reward: 4.0\n",
+      "Step: 4025 Reward: 14.0\n",
+      "Step: 4030 Reward: 14.0\n",
+      "Step: 4033 Reward: 2.0\n",
+      "Step: 4036 Reward: 2.0\n",
+      "Step: 4039 Reward: 2.0\n",
+      "Step: 4041 Reward: 1.0\n",
+      "Step: 4046 Reward: 14.0\n",
+      "Step: 4051 Reward: 14.0\n",
+      "Step: 4056 Reward: 14.0\n",
+      "Step: 4059 Reward: 2.0\n",
+      "Step: 4062 Reward: 2.0\n",
+      "Step: 4067 Reward: 14.0\n",
+      "Step: 4070 Reward: 2.0\n",
+      "Step: 4075 Reward: 14.0\n",
+      "Step: 4078 Reward: 2.0\n",
+      "Step: 4083 Reward: 14.0\n",
+      "Step: 4088 Reward: 14.0\n",
+      "Step: 4093 Reward: 14.0\n",
+      "Step: 4098 Reward: 14.0\n",
+      "Step: 4103 Reward: 14.0\n",
+      "Step: 4108 Reward: 14.0\n",
+      "Step: 4111 Reward: 2.0\n",
+      "Step: 4114 Reward: 2.0\n",
+      "Step: 4119 Reward: 14.0\n",
+      "Step: 4124 Reward: 14.0\n",
+      "Step: 4129 Reward: 14.0\n",
+      "Step: 4134 Reward: 14.0\n",
+      "Step: 4137 Reward: 2.0\n",
+      "Step: 4140 Reward: 2.0\n",
+      "Step: 4145 Reward: 14.0\n",
+      "Step: 4150 Reward: 14.0\n",
+      "Step: 4155 Reward: 14.0\n",
+      "Step: 4160 Reward: 14.0\n",
+      "Step: 4165 Reward: 14.0\n",
+      "Step: 4170 Reward: 14.0\n",
+      "Step: 4175 Reward: 14.0\n",
+      "Step: 4178 Reward: 2.0\n",
+      "Step: 4183 Reward: 14.0\n",
+      "Step: 4188 Reward: 14.0\n",
+      "Step: 4193 Reward: 14.0\n",
+      "Step: 4198 Reward: 14.0\n",
+      "Step: 4201 Reward: 2.0\n",
+      "Step: 4206 Reward: 14.0\n",
+      "Step: 4211 Reward: 14.0\n",
+      "Step: 4216 Reward: 14.0\n",
+      "Step: 4221 Reward: 14.0\n",
+      "Step: 4226 Reward: 14.0\n",
+      "Step: 4229 Reward: 2.0\n",
+      "Step: 4234 Reward: 14.0\n",
+      "Step: 4239 Reward: 14.0\n",
+      "Step: 4244 Reward: 14.0\n",
+      "Step: 4249 Reward: 14.0\n",
+      "Step: 4252 Reward: 2.0\n",
+      "Step: 4257 Reward: 14.0\n",
+      "Step: 4260 Reward: 2.0\n",
+      "Step: 4263 Reward: 2.0\n",
+      "Step: 4266 Reward: 2.0\n",
+      "Step: 4271 Reward: 14.0\n",
+      "Step: 4276 Reward: 14.0\n",
+      "Step: 4281 Reward: 14.0\n",
+      "Step: 4286 Reward: 14.0\n",
+      "Step: 4289 Reward: 2.0\n",
+      "Step: 4294 Reward: 14.0\n",
+      "Step: 4297 Reward: 2.0\n",
+      "Step: 4302 Reward: 14.0\n",
+      "Step: 4307 Reward: 14.0\n",
+      "Step: 4312 Reward: 14.0\n",
+      "Step: 4315 Reward: 2.0\n",
+      "Step: 4318 Reward: 2.0\n",
+      "Step: 4323 Reward: 4.0\n",
+      "Step: 4328 Reward: 14.0\n",
+      "Step: 4333 Reward: 14.0\n",
+      "Step: 4336 Reward: 2.0\n",
+      "Step: 4341 Reward: 14.0\n",
+      "Step: 4346 Reward: 14.0\n",
+      "Step: 4351 Reward: 14.0\n",
+      "Step: 4356 Reward: 4.0\n",
+      "Step: 4359 Reward: 2.0\n",
+      "Step: 4364 Reward: 14.0\n",
+      "Step: 4367 Reward: 2.0\n",
+      "Step: 4372 Reward: 14.0\n",
+      "Step: 4375 Reward: 2.0\n",
+      "Step: 4380 Reward: 14.0\n",
+      "Step: 4385 Reward: 14.0\n",
+      "Step: 4390 Reward: 14.0\n",
+      "Step: 4393 Reward: 2.0\n",
+      "Step: 4398 Reward: 14.0\n",
+      "Step: 4403 Reward: 14.0\n",
+      "Step: 4408 Reward: 14.0\n",
+      "Step: 4413 Reward: 14.0\n",
+      "Step: 4418 Reward: 14.0\n",
+      "Step: 4423 Reward: 14.0\n",
+      "Step: 4428 Reward: 14.0\n",
+      "Step: 4433 Reward: 14.0\n",
+      "Step: 4438 Reward: 14.0\n",
+      "Step: 4443 Reward: 14.0\n",
+      "Step: 4448 Reward: 14.0\n",
+      "Step: 4453 Reward: 14.0\n",
+      "Step: 4456 Reward: 2.0\n",
+      "Step: 4461 Reward: 14.0\n",
+      "Step: 4466 Reward: 14.0\n",
+      "Step: 4469 Reward: 2.0\n",
+      "Step: 4472 Reward: 2.0\n",
+      "Step: 4477 Reward: 14.0\n",
+      "Step: 4482 Reward: 14.0\n",
+      "Step: 4487 Reward: 14.0\n",
+      "Step: 4492 Reward: 14.0\n",
+      "Step: 4497 Reward: 14.0\n",
+      "Step: 4501 Reward: 3.0\n",
+      "Step: 4506 Reward: 14.0\n",
+      "Step: 4511 Reward: 14.0\n",
+      "Step: 4516 Reward: 14.0\n",
+      "Step: 4519 Reward: 2.0\n",
+      "Step: 4522 Reward: 2.0\n",
+      "Step: 4527 Reward: 14.0\n",
+      "Step: 4530 Reward: 2.0\n",
+      "Step: 4535 Reward: 14.0\n",
+      "Step: 4536 Reward: 0.0\n",
+      "Step: 4541 Reward: 14.0\n",
+      "Step: 4544 Reward: 2.0\n",
+      "Step: 4549 Reward: 14.0\n",
+      "Step: 4552 Reward: 2.0\n",
+      "Step: 4557 Reward: 14.0\n",
+      "Step: 4562 Reward: 14.0\n",
+      "Step: 4567 Reward: 14.0\n",
+      "Step: 4572 Reward: 14.0\n",
+      "Step: 4577 Reward: 14.0\n",
+      "Step: 4582 Reward: 14.0\n",
+      "Step: 4587 Reward: 14.0\n",
+      "Step: 4590 Reward: 2.0\n",
+      "Step: 4595 Reward: 14.0\n",
+      "Step: 4598 Reward: 2.0\n",
+      "Step: 4601 Reward: 2.0\n",
+      "Step: 4606 Reward: 14.0\n",
+      "Step: 4611 Reward: 14.0\n",
+      "Step: 4616 Reward: 14.0\n",
+      "Step: 4619 Reward: 2.0\n",
+      "Step: 4624 Reward: 14.0\n",
+      "Step: 4629 Reward: 14.0\n",
+      "Step: 4632 Reward: 2.0\n",
+      "Step: 4635 Reward: 2.0\n",
+      "Step: 4638 Reward: 2.0\n",
+      "Step: 4641 Reward: 2.0\n",
+      "Step: 4646 Reward: 14.0\n",
+      "Step: 4651 Reward: 14.0\n",
+      "Step: 4654 Reward: 2.0\n",
+      "Step: 4659 Reward: 14.0\n",
+      "Step: 4664 Reward: 14.0\n",
+      "Step: 4669 Reward: 14.0\n",
+      "Step: 4674 Reward: 14.0\n",
+      "Step: 4679 Reward: 14.0\n",
+      "Step: 4684 Reward: 14.0\n",
+      "Step: 4689 Reward: 14.0\n",
+      "Step: 4694 Reward: 14.0\n",
+      "Step: 4699 Reward: 14.0\n",
+      "Step: 4704 Reward: 14.0\n",
+      "Step: 4707 Reward: 2.0\n",
+      "Step: 4712 Reward: 14.0\n",
+      "Step: 4717 Reward: 14.0\n",
+      "Step: 4722 Reward: 14.0\n",
+      "Step: 4727 Reward: 14.0\n",
+      "Step: 4732 Reward: 14.0\n",
+      "Step: 4735 Reward: 2.0\n",
+      "Step: 4740 Reward: 14.0\n",
+      "Step: 4745 Reward: 14.0\n",
+      "Step: 4748 Reward: 2.0\n",
+      "Step: 4751 Reward: 2.0\n",
+      "Step: 4756 Reward: 14.0\n",
+      "Step: 4757 Reward: 0.0\n",
+      "Step: 4762 Reward: 14.0\n",
+      "Step: 4767 Reward: 14.0\n",
+      "Step: 4772 Reward: 14.0\n",
+      "Step: 4777 Reward: 14.0\n",
+      "Step: 4782 Reward: 14.0\n",
+      "Step: 4787 Reward: 14.0\n",
+      "Step: 4790 Reward: 2.0\n",
+      "Step: 4795 Reward: 14.0\n",
+      "Step: 4798 Reward: 2.0\n",
+      "Step: 4803 Reward: 14.0\n",
+      "Step: 4808 Reward: 14.0\n",
+      "Step: 4813 Reward: 14.0\n",
+      "Step: 4818 Reward: 14.0\n",
+      "Step: 4823 Reward: 14.0\n",
+      "Step: 4828 Reward: 14.0\n",
+      "Step: 4831 Reward: 2.0\n",
+      "Step: 4834 Reward: 2.0\n",
+      "Step: 4839 Reward: 14.0\n",
+      "Step: 4844 Reward: 14.0\n",
+      "Step: 4849 Reward: 14.0\n",
+      "Step: 4854 Reward: 14.0\n",
+      "Step: 4859 Reward: 14.0\n",
+      "Step: 4864 Reward: 14.0\n",
+      "Step: 4867 Reward: 2.0\n",
+      "Step: 4870 Reward: 2.0\n",
+      "Step: 4873 Reward: 2.0\n",
+      "Step: 4878 Reward: 14.0\n",
+      "Step: 4883 Reward: 14.0\n",
+      "Step: 4888 Reward: 14.0\n",
+      "Step: 4891 Reward: 2.0\n",
+      "Step: 4896 Reward: 14.0\n",
+      "Step: 4901 Reward: 14.0\n",
+      "Step: 4906 Reward: 14.0\n",
+      "Step: 4911 Reward: 14.0\n",
+      "Step: 4916 Reward: 14.0\n",
+      "Step: 4919 Reward: 2.0\n",
+      "Step: 4924 Reward: 14.0\n",
+      "Step: 4929 Reward: 14.0\n",
+      "Step: 4934 Reward: 14.0\n",
+      "Step: 4939 Reward: 14.0\n",
+      "Step: 4944 Reward: 14.0\n",
+      "Step: 4949 Reward: 14.0\n",
+      "Step: 4954 Reward: 14.0\n",
+      "Step: 4959 Reward: 14.0\n",
+      "Step: 4962 Reward: 2.0\n",
+      "Step: 4967 Reward: 14.0\n",
+      "Step: 4969 Reward: 1.0\n",
+      "Step: 4974 Reward: 14.0\n",
+      "Step: 4979 Reward: 14.0\n",
+      "Step: 4984 Reward: 14.0\n",
+      "Step: 4987 Reward: 2.0\n",
+      "Step: 4990 Reward: 2.0\n",
+      "Step: 4995 Reward: 14.0\n",
+      "Step: 5000 Reward: 14.0\n",
+      "Step: 5005 Reward: 14.0\n",
+      "Step: 5008 Reward: 2.0\n",
+      "Step: 5013 Reward: 14.0\n",
+      "Step: 5018 Reward: 14.0\n",
+      "Step: 5023 Reward: 14.0\n",
+      "Step: 5028 Reward: 14.0\n",
+      "Step: 5031 Reward: 2.0\n",
+      "Step: 5034 Reward: 2.0\n",
+      "Step: 5037 Reward: 2.0\n",
+      "Step: 5039 Reward: 1.0\n",
+      "Step: 5042 Reward: 2.0\n",
+      "Step: 5047 Reward: 14.0\n",
+      "Step: 5052 Reward: 14.0\n",
+      "Step: 5055 Reward: 2.0\n",
+      "Step: 5060 Reward: 14.0\n",
+      "Step: 5065 Reward: 14.0\n",
+      "Step: 5070 Reward: 14.0\n",
+      "Step: 5073 Reward: 2.0\n",
+      "Step: 5076 Reward: 2.0\n",
+      "Step: 5081 Reward: 14.0\n",
+      "Step: 5083 Reward: 1.0\n",
+      "Step: 5088 Reward: 14.0\n",
+      "Step: 5093 Reward: 14.0\n",
+      "Step: 5096 Reward: 2.0\n",
+      "Step: 5101 Reward: 14.0\n",
+      "Step: 5106 Reward: 14.0\n",
+      "Step: 5109 Reward: 2.0\n",
+      "Step: 5110 Reward: 0.0\n",
+      "Step: 5115 Reward: 14.0\n",
+      "Step: 5118 Reward: 2.0\n",
+      "Step: 5123 Reward: 14.0\n",
+      "Step: 5126 Reward: 2.0\n",
+      "Step: 5131 Reward: 14.0\n",
+      "Step: 5136 Reward: 14.0\n",
+      "Step: 5141 Reward: 14.0\n",
+      "Step: 5146 Reward: 14.0\n",
+      "Step: 5151 Reward: 14.0\n",
+      "Step: 5154 Reward: 2.0\n",
+      "Step: 5159 Reward: 14.0\n",
+      "Step: 5162 Reward: 2.0\n",
+      "Step: 5167 Reward: 14.0\n",
+      "Step: 5172 Reward: 14.0\n",
+      "Step: 5177 Reward: 14.0\n",
+      "Step: 5182 Reward: 14.0\n",
+      "Step: 5187 Reward: 14.0\n",
+      "Step: 5190 Reward: 2.0\n",
+      "Step: 5195 Reward: 14.0\n",
+      "Step: 5200 Reward: 14.0\n",
+      "Step: 5205 Reward: 14.0\n",
+      "Step: 5210 Reward: 14.0\n",
+      "Step: 5215 Reward: 14.0\n",
+      "Step: 5218 Reward: 2.0\n",
+      "Step: 5221 Reward: 2.0\n",
+      "Step: 5226 Reward: 14.0\n",
+      "Step: 5231 Reward: 14.0\n",
+      "Step: 5236 Reward: 14.0\n",
+      "Step: 5241 Reward: 14.0\n",
+      "Step: 5246 Reward: 14.0\n",
+      "Step: 5251 Reward: 14.0\n",
+      "Step: 5254 Reward: 2.0\n",
+      "Step: 5258 Reward: 3.0\n",
+      "Step: 5261 Reward: 2.0\n",
+      "Step: 5266 Reward: 14.0\n",
+      "Step: 5271 Reward: 14.0\n",
+      "Step: 5276 Reward: 14.0\n",
+      "Step: 5281 Reward: 14.0\n",
+      "Step: 5286 Reward: 14.0\n",
+      "Step: 5289 Reward: 2.0\n",
+      "Step: 5292 Reward: 2.0\n",
+      "Step: 5295 Reward: 2.0\n",
+      "Step: 5300 Reward: 14.0\n",
+      "Step: 5303 Reward: 2.0\n",
+      "Step: 5308 Reward: 14.0\n",
+      "Step: 5311 Reward: 2.0\n",
+      "Step: 5316 Reward: 14.0\n",
+      "Step: 5319 Reward: 2.0\n",
+      "Step: 5324 Reward: 14.0\n",
+      "Step: 5329 Reward: 14.0\n",
+      "Step: 5332 Reward: 2.0\n",
+      "Step: 5337 Reward: 14.0\n",
+      "Step: 5342 Reward: 14.0\n",
+      "Step: 5347 Reward: 14.0\n",
+      "Step: 5352 Reward: 14.0\n",
+      "Step: 5355 Reward: 2.0\n",
+      "Step: 5360 Reward: 14.0\n",
+      "Step: 5365 Reward: 14.0\n",
+      "Step: 5370 Reward: 14.0\n",
+      "Step: 5373 Reward: 2.0\n",
+      "Step: 5378 Reward: 14.0\n",
+      "Step: 5383 Reward: 14.0\n",
+      "Step: 5388 Reward: 4.0\n",
+      "Step: 5391 Reward: 2.0\n",
+      "Step: 5394 Reward: 2.0\n",
+      "Step: 5399 Reward: 14.0\n",
+      "Step: 5404 Reward: 14.0\n",
+      "Step: 5407 Reward: 2.0\n",
+      "Step: 5412 Reward: 14.0\n",
+      "Step: 5417 Reward: 14.0\n",
+      "Step: 5420 Reward: 2.0\n",
+      "Step: 5425 Reward: 14.0\n",
+      "Step: 5428 Reward: 2.0\n",
+      "Step: 5433 Reward: 14.0\n",
+      "Step: 5436 Reward: 2.0\n",
+      "Step: 5441 Reward: 14.0\n",
+      "Step: 5446 Reward: 14.0\n",
+      "Step: 5449 Reward: 2.0\n",
+      "Step: 5454 Reward: 14.0\n",
+      "Step: 5459 Reward: 14.0\n",
+      "Step: 5464 Reward: 14.0\n",
+      "Step: 5467 Reward: 2.0\n",
+      "Step: 5472 Reward: 14.0\n",
+      "Step: 5477 Reward: 14.0\n",
+      "Step: 5482 Reward: 14.0\n",
+      "Step: 5485 Reward: 2.0\n",
+      "Step: 5490 Reward: 14.0\n",
+      "Step: 5495 Reward: 14.0\n",
+      "Step: 5498 Reward: 2.0\n",
+      "Step: 5503 Reward: 14.0\n",
+      "Step: 5508 Reward: 14.0\n",
+      "Step: 5511 Reward: 2.0\n",
+      "Step: 5514 Reward: 2.0\n",
+      "Step: 5519 Reward: 14.0\n",
+      "Step: 5522 Reward: 2.0\n",
+      "Step: 5527 Reward: 14.0\n",
+      "Step: 5532 Reward: 14.0\n",
+      "Step: 5535 Reward: 2.0\n",
+      "Step: 5540 Reward: 14.0\n",
+      "Step: 5545 Reward: 14.0\n",
+      "Step: 5548 Reward: 2.0\n",
+      "Step: 5553 Reward: 14.0\n",
+      "Step: 5558 Reward: 14.0\n",
+      "Step: 5563 Reward: 14.0\n",
+      "Step: 5566 Reward: 2.0\n",
+      "Step: 5569 Reward: 2.0\n",
+      "Step: 5574 Reward: 14.0\n",
+      "Step: 5579 Reward: 14.0\n",
+      "Step: 5582 Reward: 2.0\n",
+      "Step: 5587 Reward: 14.0\n",
+      "Step: 5592 Reward: 14.0\n",
+      "Step: 5597 Reward: 14.0\n",
+      "Step: 5602 Reward: 14.0\n",
+      "Step: 5607 Reward: 14.0\n",
+      "Step: 5612 Reward: 14.0\n",
+      "Step: 5617 Reward: 14.0\n",
+      "Step: 5620 Reward: 2.0\n",
+      "Step: 5625 Reward: 14.0\n",
+      "Step: 5630 Reward: 14.0\n",
+      "Step: 5633 Reward: 2.0\n",
+      "Step: 5638 Reward: 14.0\n",
+      "Step: 5643 Reward: 14.0\n",
+      "Step: 5648 Reward: 14.0\n",
+      "Step: 5653 Reward: 14.0\n",
+      "Step: 5655 Reward: 1.0\n",
+      "Step: 5658 Reward: 2.0\n",
+      "Step: 5663 Reward: 14.0\n",
+      "Step: 5668 Reward: 14.0\n",
+      "Step: 5673 Reward: 14.0\n",
+      "Step: 5678 Reward: 14.0\n",
+      "Step: 5683 Reward: 14.0\n",
+      "Step: 5688 Reward: 14.0\n",
+      "Step: 5693 Reward: 4.0\n",
+      "Step: 5696 Reward: 2.0\n",
+      "Step: 5699 Reward: 2.0\n",
+      "Step: 5704 Reward: 14.0\n",
+      "Step: 5709 Reward: 14.0\n",
+      "Step: 5712 Reward: 2.0\n",
+      "Step: 5715 Reward: 2.0\n",
+      "Step: 5720 Reward: 14.0\n",
+      "Step: 5725 Reward: 14.0\n",
+      "Step: 5730 Reward: 14.0\n",
+      "Step: 5735 Reward: 14.0\n",
+      "Step: 5740 Reward: 14.0\n",
+      "Step: 5745 Reward: 14.0\n",
+      "Step: 5750 Reward: 14.0\n",
+      "Step: 5753 Reward: 2.0\n",
+      "Step: 5756 Reward: 2.0\n",
+      "Step: 5761 Reward: 14.0\n",
+      "Step: 5764 Reward: 2.0\n",
+      "Step: 5769 Reward: 14.0\n",
+      "Step: 5772 Reward: 2.0\n",
+      "Step: 5777 Reward: 14.0\n",
+      "Step: 5782 Reward: 14.0\n",
+      "Step: 5787 Reward: 14.0\n",
+      "Step: 5792 Reward: 14.0\n",
+      "Step: 5797 Reward: 14.0\n",
+      "Step: 5802 Reward: 14.0\n",
+      "Step: 5807 Reward: 14.0\n",
+      "Step: 5812 Reward: 14.0\n",
+      "Step: 5817 Reward: 14.0\n",
+      "Step: 5820 Reward: 2.0\n",
+      "Step: 5825 Reward: 14.0\n",
+      "Step: 5830 Reward: 14.0\n",
+      "Step: 5835 Reward: 14.0\n",
+      "Step: 5840 Reward: 14.0\n",
+      "Step: 5843 Reward: 2.0\n",
+      "Step: 5848 Reward: 14.0\n",
+      "Step: 5851 Reward: 2.0\n",
+      "Step: 5856 Reward: 14.0\n",
+      "Step: 5861 Reward: 14.0\n",
+      "Step: 5866 Reward: 14.0\n",
+      "Step: 5871 Reward: 14.0\n",
+      "Step: 5876 Reward: 14.0\n",
+      "Step: 5881 Reward: 14.0\n",
+      "Step: 5886 Reward: 14.0\n",
+      "Step: 5889 Reward: 2.0\n",
+      "Step: 5892 Reward: 2.0\n",
+      "Step: 5895 Reward: 2.0\n",
+      "Step: 5900 Reward: 14.0\n",
+      "Step: 5905 Reward: 14.0\n",
+      "Step: 5910 Reward: 14.0\n",
+      "Step: 5915 Reward: 14.0\n",
+      "Step: 5918 Reward: 2.0\n",
+      "Step: 5923 Reward: 14.0\n",
+      "Step: 5928 Reward: 14.0\n",
+      "Step: 5933 Reward: 14.0\n",
+      "Step: 5938 Reward: 14.0\n",
+      "Step: 5943 Reward: 14.0\n",
+      "Step: 5948 Reward: 14.0\n",
+      "Step: 5953 Reward: 14.0\n",
+      "Step: 5958 Reward: 14.0\n",
+      "Step: 5963 Reward: 14.0\n",
+      "Step: 5968 Reward: 14.0\n",
+      "Step: 5971 Reward: 2.0\n",
+      "Step: 5976 Reward: 14.0\n",
+      "Step: 5981 Reward: 14.0\n",
+      "Step: 5986 Reward: 14.0\n",
+      "Step: 5991 Reward: 14.0\n",
+      "Step: 5994 Reward: 2.0\n",
+      "Step: 5999 Reward: 14.0\n",
+      "Step: 6004 Reward: 14.0\n",
+      "Step: 6009 Reward: 14.0\n",
+      "Step: 6014 Reward: 14.0\n",
+      "Step: 6019 Reward: 14.0\n",
+      "Step: 6024 Reward: 14.0\n",
+      "Step: 6029 Reward: 14.0\n",
+      "Step: 6034 Reward: 14.0\n",
+      "Step: 6037 Reward: 2.0\n",
+      "Step: 6040 Reward: 2.0\n",
+      "Step: 6045 Reward: 14.0\n",
+      "Step: 6050 Reward: 14.0\n",
+      "Step: 6055 Reward: 14.0\n",
+      "Step: 6060 Reward: 14.0\n",
+      "Step: 6065 Reward: 14.0\n",
+      "Step: 6070 Reward: 14.0\n",
+      "Step: 6075 Reward: 14.0\n",
+      "Step: 6080 Reward: 14.0\n",
+      "Step: 6085 Reward: 14.0\n",
+      "Step: 6090 Reward: 14.0\n",
+      "Step: 6095 Reward: 14.0\n",
+      "Step: 6100 Reward: 14.0\n",
+      "Step: 6105 Reward: 14.0\n",
+      "Step: 6108 Reward: 2.0\n",
+      "Step: 6110 Reward: 1.0\n",
+      "Step: 6115 Reward: 4.0\n",
+      "Step: 6120 Reward: 14.0\n",
+      "Step: 6125 Reward: 14.0\n",
+      "Step: 6130 Reward: 4.0\n",
+      "Step: 6135 Reward: 14.0\n",
+      "Step: 6140 Reward: 14.0\n",
+      "Step: 6145 Reward: 14.0\n",
+      "Step: 6150 Reward: 14.0\n",
+      "Step: 6155 Reward: 14.0\n",
+      "Step: 6160 Reward: 14.0\n",
+      "Step: 6165 Reward: 14.0\n",
+      "Step: 6170 Reward: 14.0\n",
+      "Step: 6175 Reward: 14.0\n",
+      "Step: 6177 Reward: 1.0\n",
+      "Step: 6182 Reward: 14.0\n",
+      "Step: 6187 Reward: 14.0\n",
+      "Step: 6192 Reward: 14.0\n",
+      "Step: 6197 Reward: 14.0\n",
+      "Step: 6202 Reward: 14.0\n",
+      "Step: 6207 Reward: 14.0\n",
+      "Step: 6212 Reward: 14.0\n",
+      "Step: 6217 Reward: 14.0\n",
+      "Step: 6222 Reward: 14.0\n",
+      "Step: 6227 Reward: 14.0\n",
+      "Step: 6232 Reward: 14.0\n",
+      "Step: 6237 Reward: 14.0\n",
+      "Step: 6242 Reward: 14.0\n",
+      "Step: 6247 Reward: 14.0\n",
+      "Step: 6252 Reward: 14.0\n",
+      "Step: 6257 Reward: 14.0\n",
+      "Step: 6262 Reward: 14.0\n",
+      "Step: 6267 Reward: 14.0\n",
+      "Step: 6272 Reward: 14.0\n",
+      "Step: 6277 Reward: 14.0\n",
+      "Step: 6282 Reward: 14.0\n",
+      "Step: 6287 Reward: 14.0\n",
+      "Step: 6292 Reward: 14.0\n",
+      "Step: 6297 Reward: 4.0\n",
+      "Step: 6302 Reward: 14.0\n",
+      "Step: 6307 Reward: 14.0\n",
+      "Step: 6312 Reward: 14.0\n",
+      "Step: 6317 Reward: 14.0\n",
+      "Step: 6322 Reward: 14.0\n",
+      "Step: 6327 Reward: 14.0\n",
+      "Step: 6331 Reward: 3.0\n",
+      "Step: 6334 Reward: 2.0\n",
+      "Step: 6339 Reward: 14.0\n",
+      "Step: 6344 Reward: 14.0\n",
+      "Step: 6349 Reward: 14.0\n",
+      "Step: 6354 Reward: 14.0\n",
+      "Step: 6359 Reward: 14.0\n",
+      "Step: 6364 Reward: 14.0\n",
+      "Step: 6369 Reward: 14.0\n",
+      "Step: 6374 Reward: 14.0\n",
+      "Step: 6379 Reward: 14.0\n",
+      "Step: 6384 Reward: 14.0\n",
+      "Step: 6389 Reward: 14.0\n",
+      "Step: 6394 Reward: 14.0\n",
+      "Step: 6399 Reward: 14.0\n",
+      "Step: 6404 Reward: 14.0\n",
+      "Step: 6409 Reward: 14.0\n",
+      "Step: 6414 Reward: 14.0\n",
+      "Step: 6419 Reward: 14.0\n",
+      "Step: 6424 Reward: 14.0\n",
+      "Step: 6429 Reward: 14.0\n",
+      "Step: 6434 Reward: 14.0\n",
+      "Step: 6439 Reward: 14.0\n",
+      "Step: 6444 Reward: 14.0\n",
+      "Step: 6449 Reward: 14.0\n",
+      "Step: 6454 Reward: 14.0\n",
+      "Step: 6459 Reward: 14.0\n",
+      "Step: 6464 Reward: 14.0\n",
+      "Step: 6469 Reward: 14.0\n",
+      "Step: 6474 Reward: 14.0\n",
+      "Step: 6479 Reward: 14.0\n",
+      "Step: 6484 Reward: 14.0\n",
+      "Step: 6489 Reward: 14.0\n",
+      "Step: 6494 Reward: 14.0\n",
+      "Step: 6499 Reward: 14.0\n",
+      "Step: 6504 Reward: 14.0\n",
+      "Step: 6509 Reward: 14.0\n",
+      "Step: 6514 Reward: 14.0\n",
+      "Step: 6519 Reward: 14.0\n",
+      "Step: 6524 Reward: 14.0\n",
+      "Step: 6529 Reward: 14.0\n",
+      "Step: 6534 Reward: 14.0\n",
+      "Step: 6539 Reward: 14.0\n",
+      "Step: 6544 Reward: 14.0\n",
+      "Step: 6549 Reward: 14.0\n",
+      "Step: 6554 Reward: 14.0\n",
+      "Step: 6559 Reward: 14.0\n",
+      "Step: 6564 Reward: 14.0\n",
+      "Step: 6569 Reward: 14.0\n",
+      "Step: 6574 Reward: 14.0\n",
+      "Step: 6579 Reward: 14.0\n",
+      "Step: 6584 Reward: 14.0\n",
+      "Step: 6589 Reward: 14.0\n",
+      "Step: 6594 Reward: 14.0\n",
+      "Step: 6599 Reward: 14.0\n",
+      "Step: 6604 Reward: 14.0\n",
+      "Step: 6609 Reward: 14.0\n",
+      "Step: 6614 Reward: 14.0\n",
+      "Step: 6619 Reward: 14.0\n",
+      "Step: 6624 Reward: 14.0\n",
+      "Step: 6629 Reward: 14.0\n",
+      "Step: 6630 Reward: 0.0\n",
+      "Step: 6635 Reward: 14.0\n",
+      "Step: 6640 Reward: 14.0\n",
+      "Step: 6645 Reward: 14.0\n",
+      "Step: 6650 Reward: 14.0\n",
+      "Step: 6655 Reward: 14.0\n",
+      "Step: 6660 Reward: 14.0\n",
+      "Step: 6665 Reward: 14.0\n",
+      "Step: 6670 Reward: 14.0\n",
+      "Step: 6675 Reward: 14.0\n",
+      "Step: 6680 Reward: 14.0\n",
+      "Step: 6685 Reward: 14.0\n",
+      "Step: 6690 Reward: 14.0\n",
+      "Step: 6695 Reward: 14.0\n",
+      "Step: 6700 Reward: 14.0\n",
+      "Step: 6705 Reward: 14.0\n",
+      "Step: 6710 Reward: 14.0\n",
+      "Step: 6715 Reward: 14.0\n",
+      "Step: 6720 Reward: 14.0\n",
+      "Step: 6725 Reward: 14.0\n",
+      "Step: 6730 Reward: 14.0\n",
+      "Step: 6735 Reward: 14.0\n",
+      "Step: 6740 Reward: 14.0\n",
+      "Step: 6745 Reward: 14.0\n",
+      "Step: 6750 Reward: 14.0\n",
+      "Step: 6755 Reward: 14.0\n",
+      "Step: 6760 Reward: 14.0\n",
+      "Step: 6765 Reward: 14.0\n",
+      "Step: 6770 Reward: 14.0\n",
+      "Step: 6775 Reward: 14.0\n",
+      "Step: 6780 Reward: 14.0\n",
+      "Step: 6785 Reward: 14.0\n",
+      "Step: 6789 Reward: 3.0\n",
+      "Step: 6791 Reward: 1.0\n",
+      "Step: 6796 Reward: 14.0\n",
+      "Step: 6801 Reward: 14.0\n",
+      "Step: 6806 Reward: 14.0\n",
+      "Step: 6811 Reward: 14.0\n",
+      "Step: 6816 Reward: 14.0\n",
+      "Step: 6821 Reward: 14.0\n",
+      "Step: 6826 Reward: 14.0\n",
+      "Step: 6831 Reward: 14.0\n",
+      "Step: 6836 Reward: 14.0\n",
+      "Step: 6841 Reward: 14.0\n",
+      "Step: 6846 Reward: 14.0\n",
+      "Step: 6851 Reward: 14.0\n",
+      "Step: 6856 Reward: 14.0\n",
+      "Step: 6861 Reward: 14.0\n",
+      "Step: 6866 Reward: 14.0\n",
+      "Step: 6871 Reward: 14.0\n",
+      "Step: 6876 Reward: 14.0\n",
+      "Step: 6881 Reward: 14.0\n",
+      "Step: 6886 Reward: 14.0\n",
+      "Step: 6891 Reward: 14.0\n",
+      "Step: 6896 Reward: 14.0\n",
+      "Step: 6901 Reward: 14.0\n",
+      "Step: 6906 Reward: 14.0\n",
+      "Step: 6911 Reward: 14.0\n",
+      "Step: 6916 Reward: 14.0\n",
+      "Step: 6921 Reward: 14.0\n",
+      "Step: 6926 Reward: 14.0\n",
+      "Step: 6931 Reward: 14.0\n",
+      "Step: 6936 Reward: 14.0\n",
+      "Step: 6941 Reward: 14.0\n",
+      "Step: 6946 Reward: 14.0\n",
+      "Step: 6951 Reward: 14.0\n",
+      "Step: 6956 Reward: 14.0\n",
+      "Step: 6961 Reward: 14.0\n",
+      "Step: 6966 Reward: 14.0\n",
+      "Step: 6971 Reward: 14.0\n",
+      "Step: 6976 Reward: 14.0\n",
+      "Step: 6981 Reward: 14.0\n",
+      "Step: 6986 Reward: 14.0\n",
+      "Step: 6991 Reward: 14.0\n",
+      "Step: 6996 Reward: 14.0\n",
+      "Step: 7001 Reward: 14.0\n",
+      "Step: 7006 Reward: 14.0\n",
+      "Step: 7011 Reward: 14.0\n",
+      "Step: 7016 Reward: 14.0\n",
+      "Step: 7021 Reward: 14.0\n",
+      "Step: 7026 Reward: 14.0\n",
+      "Step: 7031 Reward: 14.0\n",
+      "Step: 7036 Reward: 14.0\n",
+      "Step: 7041 Reward: 14.0\n",
+      "Step: 7046 Reward: 14.0\n",
+      "Step: 7051 Reward: 14.0\n",
+      "Step: 7056 Reward: 14.0\n",
+      "Step: 7061 Reward: 14.0\n",
+      "Step: 7066 Reward: 14.0\n",
+      "Step: 7071 Reward: 14.0\n",
+      "Step: 7076 Reward: 14.0\n",
+      "Step: 7081 Reward: 14.0\n",
+      "Step: 7086 Reward: 14.0\n",
+      "Step: 7091 Reward: 14.0\n",
+      "Step: 7096 Reward: 14.0\n",
+      "Step: 7101 Reward: 14.0\n",
+      "Step: 7106 Reward: 14.0\n",
+      "Step: 7111 Reward: 14.0\n",
+      "Step: 7116 Reward: 14.0\n",
+      "Step: 7121 Reward: 14.0\n",
+      "Step: 7126 Reward: 14.0\n",
+      "Step: 7129 Reward: 2.0\n",
+      "Step: 7134 Reward: 14.0\n",
+      "Step: 7139 Reward: 14.0\n",
+      "Step: 7144 Reward: 14.0\n",
+      "Step: 7149 Reward: 14.0\n",
+      "Step: 7154 Reward: 14.0\n",
+      "Step: 7159 Reward: 14.0\n",
+      "Step: 7164 Reward: 14.0\n",
+      "Step: 7169 Reward: 14.0\n",
+      "Step: 7174 Reward: 14.0\n",
+      "Step: 7179 Reward: 14.0\n",
+      "Step: 7184 Reward: 14.0\n",
+      "Step: 7189 Reward: 14.0\n",
+      "Step: 7194 Reward: 14.0\n",
+      "Step: 7199 Reward: 14.0\n",
+      "Step: 7204 Reward: 14.0\n",
+      "Step: 7209 Reward: 14.0\n",
+      "Step: 7214 Reward: 14.0\n",
+      "Step: 7219 Reward: 14.0\n",
+      "Step: 7224 Reward: 14.0\n",
+      "Step: 7229 Reward: 14.0\n",
+      "Step: 7234 Reward: 14.0\n",
+      "Step: 7239 Reward: 14.0\n",
+      "Step: 7244 Reward: 14.0\n",
+      "Step: 7249 Reward: 14.0\n",
+      "Step: 7254 Reward: 14.0\n",
+      "Step: 7259 Reward: 14.0\n",
+      "Step: 7264 Reward: 14.0\n",
+      "Step: 7269 Reward: 14.0\n",
+      "Step: 7274 Reward: 14.0\n",
+      "Step: 7279 Reward: 14.0\n",
+      "Step: 7284 Reward: 14.0\n",
+      "Step: 7289 Reward: 14.0\n",
+      "Step: 7294 Reward: 14.0\n",
+      "Step: 7299 Reward: 14.0\n",
+      "Step: 7304 Reward: 14.0\n",
+      "Step: 7309 Reward: 14.0\n",
+      "Step: 7314 Reward: 14.0\n",
+      "Step: 7319 Reward: 14.0\n",
+      "Step: 7323 Reward: 3.0\n",
+      "Step: 7328 Reward: 14.0\n",
+      "Step: 7333 Reward: 14.0\n",
+      "Step: 7338 Reward: 4.0\n",
+      "Step: 7343 Reward: 14.0\n",
+      "Step: 7346 Reward: 2.0\n",
+      "Step: 7351 Reward: 14.0\n",
+      "Step: 7356 Reward: 14.0\n",
+      "Step: 7361 Reward: 14.0\n",
+      "Step: 7366 Reward: 14.0\n",
+      "Step: 7371 Reward: 14.0\n",
+      "Step: 7376 Reward: 14.0\n",
+      "Step: 7381 Reward: 14.0\n",
+      "Step: 7386 Reward: 14.0\n",
+      "Step: 7391 Reward: 14.0\n",
+      "Step: 7396 Reward: 14.0\n",
+      "Step: 7401 Reward: 14.0\n",
+      "Step: 7406 Reward: 14.0\n",
+      "Step: 7411 Reward: 14.0\n",
+      "Step: 7416 Reward: 14.0\n",
+      "Step: 7421 Reward: 14.0\n",
+      "Step: 7426 Reward: 14.0\n",
+      "Step: 7431 Reward: 14.0\n",
+      "Step: 7436 Reward: 14.0\n",
+      "Step: 7441 Reward: 14.0\n",
+      "Step: 7446 Reward: 14.0\n",
+      "Step: 7451 Reward: 14.0\n",
+      "Step: 7456 Reward: 14.0\n",
+      "Step: 7457 Reward: 0.0\n",
+      "Step: 7460 Reward: 2.0\n",
+      "Step: 7465 Reward: 14.0\n",
+      "Step: 7470 Reward: 14.0\n",
+      "Step: 7475 Reward: 14.0\n",
+      "Step: 7477 Reward: 1.0\n",
+      "Step: 7482 Reward: 14.0\n",
+      "Step: 7487 Reward: 14.0\n",
+      "Step: 7492 Reward: 14.0\n",
+      "Step: 7497 Reward: 14.0\n",
+      "Step: 7502 Reward: 14.0\n",
+      "Step: 7507 Reward: 14.0\n",
+      "Step: 7512 Reward: 14.0\n",
+      "Step: 7517 Reward: 14.0\n",
+      "Step: 7522 Reward: 14.0\n",
+      "Step: 7527 Reward: 14.0\n",
+      "Step: 7532 Reward: 14.0\n",
+      "Step: 7537 Reward: 14.0\n",
+      "Step: 7542 Reward: 14.0\n",
+      "Step: 7547 Reward: 14.0\n",
+      "Step: 7552 Reward: 14.0\n",
+      "Step: 7557 Reward: 14.0\n",
+      "Step: 7562 Reward: 14.0\n",
+      "Step: 7566 Reward: 3.0\n",
+      "Step: 7571 Reward: 14.0\n",
+      "Step: 7576 Reward: 14.0\n",
+      "Step: 7581 Reward: 14.0\n",
+      "Step: 7586 Reward: 14.0\n",
+      "Step: 7591 Reward: 14.0\n",
+      "Step: 7596 Reward: 14.0\n",
+      "Step: 7601 Reward: 14.0\n",
+      "Step: 7606 Reward: 14.0\n",
+      "Step: 7611 Reward: 14.0\n",
+      "Step: 7616 Reward: 14.0\n",
+      "Step: 7621 Reward: 14.0\n",
+      "Step: 7626 Reward: 14.0\n",
+      "Step: 7631 Reward: 14.0\n",
+      "Step: 7636 Reward: 14.0\n",
+      "Step: 7641 Reward: 14.0\n",
+      "Step: 7646 Reward: 14.0\n",
+      "Step: 7651 Reward: 14.0\n",
+      "Step: 7656 Reward: 14.0\n",
+      "Step: 7661 Reward: 14.0\n",
+      "Step: 7666 Reward: 14.0\n",
+      "Step: 7671 Reward: 14.0\n",
+      "Step: 7676 Reward: 14.0\n",
+      "Step: 7681 Reward: 14.0\n",
+      "Step: 7686 Reward: 14.0\n",
+      "Step: 7691 Reward: 14.0\n",
+      "Step: 7696 Reward: 14.0\n",
+      "Step: 7701 Reward: 14.0\n",
+      "Step: 7706 Reward: 14.0\n",
+      "Step: 7711 Reward: 14.0\n",
+      "Step: 7716 Reward: 14.0\n",
+      "Step: 7721 Reward: 14.0\n",
+      "Step: 7726 Reward: 14.0\n",
+      "Step: 7731 Reward: 14.0\n",
+      "Step: 7736 Reward: 14.0\n",
+      "Step: 7741 Reward: 14.0\n",
+      "Step: 7746 Reward: 14.0\n",
+      "Step: 7751 Reward: 14.0\n",
+      "Step: 7756 Reward: 14.0\n",
+      "Step: 7761 Reward: 14.0\n",
+      "Step: 7766 Reward: 14.0\n",
+      "Step: 7771 Reward: 14.0\n",
+      "Step: 7776 Reward: 14.0\n",
+      "Step: 7781 Reward: 14.0\n",
+      "Step: 7786 Reward: 14.0\n",
+      "Step: 7791 Reward: 14.0\n",
+      "Step: 7796 Reward: 14.0\n",
+      "Step: 7801 Reward: 14.0\n",
+      "Step: 7806 Reward: 14.0\n",
+      "Step: 7811 Reward: 14.0\n",
+      "Step: 7816 Reward: 14.0\n",
+      "Step: 7817 Reward: 0.0\n",
+      "Step: 7822 Reward: 14.0\n",
+      "Step: 7827 Reward: 14.0\n",
+      "Step: 7832 Reward: 14.0\n",
+      "Step: 7837 Reward: 14.0\n",
+      "Step: 7842 Reward: 14.0\n",
+      "Step: 7847 Reward: 14.0\n",
+      "Step: 7852 Reward: 14.0\n",
+      "Step: 7857 Reward: 14.0\n",
+      "Step: 7862 Reward: 14.0\n",
+      "Step: 7867 Reward: 14.0\n",
+      "Step: 7872 Reward: 14.0\n",
+      "Step: 7877 Reward: 14.0\n",
+      "Step: 7879 Reward: 1.0\n",
+      "Step: 7884 Reward: 14.0\n",
+      "Step: 7889 Reward: 14.0\n",
+      "Step: 7894 Reward: 14.0\n",
+      "Step: 7899 Reward: 14.0\n",
+      "Step: 7904 Reward: 14.0\n",
+      "Step: 7909 Reward: 14.0\n",
+      "Step: 7914 Reward: 14.0\n",
+      "Step: 7919 Reward: 14.0\n",
+      "Step: 7924 Reward: 14.0\n",
+      "Step: 7929 Reward: 14.0\n",
+      "Step: 7934 Reward: 14.0\n",
+      "Step: 7939 Reward: 14.0\n",
+      "Step: 7944 Reward: 14.0\n",
+      "Step: 7949 Reward: 14.0\n",
+      "Step: 7954 Reward: 14.0\n",
+      "Step: 7959 Reward: 14.0\n",
+      "Step: 7964 Reward: 14.0\n",
+      "Step: 7969 Reward: 14.0\n",
+      "Step: 7974 Reward: 14.0\n",
+      "Step: 7979 Reward: 14.0\n",
+      "Step: 7984 Reward: 14.0\n",
+      "Step: 7989 Reward: 14.0\n",
+      "Step: 7994 Reward: 14.0\n",
+      "Step: 7999 Reward: 14.0\n",
+      "Step: 8004 Reward: 14.0\n",
+      "Step: 8009 Reward: 14.0\n",
+      "Step: 8014 Reward: 14.0\n",
+      "Step: 8019 Reward: 4.0\n",
+      "Step: 8024 Reward: 14.0\n",
+      "Step: 8029 Reward: 14.0\n",
+      "Step: 8034 Reward: 14.0\n",
+      "Step: 8039 Reward: 14.0\n",
+      "Step: 8044 Reward: 14.0\n",
+      "Step: 8049 Reward: 14.0\n",
+      "Step: 8054 Reward: 14.0\n",
+      "Step: 8059 Reward: 14.0\n",
+      "Step: 8064 Reward: 14.0\n",
+      "Step: 8069 Reward: 14.0\n",
+      "Step: 8074 Reward: 14.0\n",
+      "Step: 8079 Reward: 14.0\n",
+      "Step: 8084 Reward: 14.0\n",
+      "Step: 8089 Reward: 14.0\n",
+      "Step: 8094 Reward: 14.0\n",
+      "Step: 8099 Reward: 14.0\n",
+      "Step: 8104 Reward: 14.0\n",
+      "Step: 8109 Reward: 14.0\n",
+      "Step: 8114 Reward: 14.0\n",
+      "Step: 8119 Reward: 14.0\n",
+      "Step: 8124 Reward: 14.0\n",
+      "Step: 8129 Reward: 14.0\n",
+      "Step: 8134 Reward: 14.0\n",
+      "Step: 8139 Reward: 14.0\n",
+      "Step: 8144 Reward: 14.0\n",
+      "Step: 8149 Reward: 14.0\n",
+      "Step: 8154 Reward: 14.0\n",
+      "Step: 8159 Reward: 14.0\n",
+      "Step: 8164 Reward: 14.0\n",
+      "Step: 8169 Reward: 14.0\n",
+      "Step: 8174 Reward: 14.0\n",
+      "Step: 8179 Reward: 14.0\n",
+      "Step: 8184 Reward: 14.0\n",
+      "Step: 8189 Reward: 14.0\n",
+      "Step: 8194 Reward: 14.0\n",
+      "Step: 8199 Reward: 14.0\n",
+      "Step: 8204 Reward: 14.0\n",
+      "Step: 8209 Reward: 14.0\n",
+      "Step: 8214 Reward: 14.0\n",
+      "Step: 8219 Reward: 14.0\n",
+      "Step: 8224 Reward: 14.0\n",
+      "Step: 8226 Reward: 1.0\n",
+      "Step: 8231 Reward: 14.0\n",
+      "Step: 8236 Reward: 14.0\n",
+      "Step: 8241 Reward: 14.0\n",
+      "Step: 8246 Reward: 14.0\n",
+      "Step: 8251 Reward: 14.0\n",
+      "Step: 8256 Reward: 14.0\n",
+      "Step: 8261 Reward: 14.0\n",
+      "Step: 8266 Reward: 14.0\n",
+      "Step: 8271 Reward: 14.0\n",
+      "Step: 8276 Reward: 14.0\n",
+      "Step: 8281 Reward: 14.0\n",
+      "Step: 8286 Reward: 14.0\n",
+      "Step: 8291 Reward: 14.0\n",
+      "Step: 8296 Reward: 14.0\n",
+      "Step: 8301 Reward: 14.0\n",
+      "Step: 8306 Reward: 14.0\n",
+      "Step: 8311 Reward: 14.0\n",
+      "Step: 8316 Reward: 14.0\n",
+      "Step: 8321 Reward: 14.0\n",
+      "Step: 8326 Reward: 14.0\n",
+      "Step: 8331 Reward: 14.0\n",
+      "Step: 8336 Reward: 14.0\n",
+      "Step: 8341 Reward: 14.0\n",
+      "Step: 8346 Reward: 14.0\n",
+      "Step: 8351 Reward: 14.0\n",
+      "Step: 8356 Reward: 14.0\n",
+      "Step: 8361 Reward: 14.0\n",
+      "Step: 8366 Reward: 14.0\n",
+      "Step: 8371 Reward: 14.0\n",
+      "Step: 8376 Reward: 14.0\n",
+      "Step: 8381 Reward: 14.0\n",
+      "Step: 8386 Reward: 14.0\n",
+      "Step: 8391 Reward: 14.0\n",
+      "Step: 8396 Reward: 14.0\n",
+      "Step: 8401 Reward: 14.0\n",
+      "Step: 8406 Reward: 14.0\n",
+      "Step: 8411 Reward: 14.0\n",
+      "Step: 8416 Reward: 14.0\n",
+      "Step: 8418 Reward: 1.0\n",
+      "Step: 8423 Reward: 14.0\n",
+      "Step: 8428 Reward: 14.0\n",
+      "Step: 8433 Reward: 14.0\n",
+      "Step: 8438 Reward: 14.0\n",
+      "Step: 8443 Reward: 14.0\n",
+      "Step: 8448 Reward: 14.0\n",
+      "Step: 8453 Reward: 14.0\n",
+      "Step: 8458 Reward: 14.0\n",
+      "Step: 8463 Reward: 14.0\n",
+      "Step: 8468 Reward: 14.0\n",
+      "Step: 8473 Reward: 14.0\n",
+      "Step: 8478 Reward: 14.0\n",
+      "Step: 8483 Reward: 14.0\n",
+      "Step: 8488 Reward: 14.0\n",
+      "Step: 8493 Reward: 14.0\n",
+      "Step: 8498 Reward: 14.0\n",
+      "Step: 8503 Reward: 14.0\n",
+      "Step: 8508 Reward: 14.0\n",
+      "Step: 8513 Reward: 14.0\n",
+      "Step: 8518 Reward: 14.0\n",
+      "Step: 8523 Reward: 14.0\n",
+      "Step: 8528 Reward: 14.0\n",
+      "Step: 8533 Reward: 14.0\n",
+      "Step: 8538 Reward: 14.0\n",
+      "Step: 8543 Reward: 14.0\n",
+      "Step: 8548 Reward: 14.0\n",
+      "Step: 8549 Reward: 0.0\n",
+      "Step: 8554 Reward: 14.0\n",
+      "Step: 8559 Reward: 14.0\n",
+      "Step: 8564 Reward: 14.0\n",
+      "Step: 8569 Reward: 14.0\n",
+      "Step: 8574 Reward: 14.0\n",
+      "Step: 8579 Reward: 14.0\n",
+      "Step: 8584 Reward: 14.0\n",
+      "Step: 8589 Reward: 14.0\n",
+      "Step: 8594 Reward: 14.0\n",
+      "Step: 8599 Reward: 14.0\n",
+      "Step: 8602 Reward: 2.0\n",
+      "Step: 8607 Reward: 14.0\n",
+      "Step: 8612 Reward: 14.0\n",
+      "Step: 8617 Reward: 14.0\n",
+      "Step: 8622 Reward: 14.0\n",
+      "Step: 8627 Reward: 14.0\n",
+      "Step: 8632 Reward: 14.0\n",
+      "Step: 8637 Reward: 14.0\n",
+      "Step: 8642 Reward: 14.0\n",
+      "Step: 8647 Reward: 14.0\n",
+      "Step: 8652 Reward: 14.0\n",
+      "Step: 8657 Reward: 14.0\n",
+      "Step: 8662 Reward: 14.0\n",
+      "Step: 8667 Reward: 14.0\n",
+      "Step: 8672 Reward: 14.0\n",
+      "Step: 8677 Reward: 14.0\n",
+      "Step: 8682 Reward: 14.0\n",
+      "Step: 8687 Reward: 14.0\n",
+      "Step: 8692 Reward: 14.0\n",
+      "Step: 8697 Reward: 14.0\n",
+      "Step: 8702 Reward: 14.0\n",
+      "Step: 8707 Reward: 14.0\n",
+      "Step: 8712 Reward: 14.0\n",
+      "Step: 8717 Reward: 14.0\n",
+      "Step: 8722 Reward: 14.0\n",
+      "Step: 8727 Reward: 14.0\n",
+      "Step: 8732 Reward: 14.0\n",
+      "Step: 8737 Reward: 14.0\n",
+      "Step: 8742 Reward: 14.0\n",
+      "Step: 8747 Reward: 14.0\n",
+      "Step: 8752 Reward: 14.0\n",
+      "Step: 8757 Reward: 14.0\n",
+      "Step: 8762 Reward: 14.0\n",
+      "Step: 8767 Reward: 14.0\n",
+      "Step: 8772 Reward: 14.0\n",
+      "Step: 8777 Reward: 4.0\n",
+      "Step: 8782 Reward: 14.0\n",
+      "Step: 8787 Reward: 14.0\n",
+      "Step: 8792 Reward: 14.0\n",
+      "Step: 8797 Reward: 14.0\n",
+      "Step: 8802 Reward: 14.0\n",
+      "Step: 8807 Reward: 14.0\n",
+      "Step: 8812 Reward: 14.0\n",
+      "Step: 8817 Reward: 14.0\n",
+      "Step: 8822 Reward: 14.0\n",
+      "Step: 8827 Reward: 14.0\n",
+      "Step: 8832 Reward: 14.0\n",
+      "Step: 8837 Reward: 14.0\n",
+      "Step: 8842 Reward: 14.0\n",
+      "Step: 8847 Reward: 4.0\n",
+      "Step: 8852 Reward: 14.0\n",
+      "Step: 8857 Reward: 14.0\n",
+      "Step: 8862 Reward: 14.0\n",
+      "Step: 8863 Reward: 0.0\n",
+      "Step: 8868 Reward: 14.0\n",
+      "Step: 8873 Reward: 14.0\n",
+      "Step: 8878 Reward: 14.0\n",
+      "Step: 8883 Reward: 14.0\n",
+      "Step: 8888 Reward: 14.0\n",
+      "Step: 8893 Reward: 14.0\n",
+      "Step: 8898 Reward: 14.0\n",
+      "Step: 8903 Reward: 14.0\n",
+      "Step: 8908 Reward: 14.0\n",
+      "Step: 8913 Reward: 14.0\n",
+      "Step: 8918 Reward: 14.0\n",
+      "Step: 8923 Reward: 14.0\n",
+      "Step: 8928 Reward: 14.0\n",
+      "Step: 8933 Reward: 14.0\n",
+      "Step: 8938 Reward: 14.0\n",
+      "Step: 8943 Reward: 14.0\n",
+      "Step: 8948 Reward: 14.0\n",
+      "Step: 8953 Reward: 14.0\n",
+      "Step: 8958 Reward: 14.0\n",
+      "Step: 8963 Reward: 14.0\n",
+      "Step: 8968 Reward: 14.0\n",
+      "Step: 8973 Reward: 14.0\n",
+      "Step: 8978 Reward: 14.0\n",
+      "Step: 8983 Reward: 14.0\n",
+      "Step: 8988 Reward: 14.0\n",
+      "Step: 8993 Reward: 14.0\n",
+      "Step: 8998 Reward: 14.0\n",
+      "Step: 9003 Reward: 14.0\n",
+      "Step: 9008 Reward: 14.0\n",
+      "Step: 9013 Reward: 14.0\n",
+      "Step: 9018 Reward: 14.0\n",
+      "Step: 9023 Reward: 14.0\n",
+      "Step: 9028 Reward: 14.0\n",
+      "Step: 9033 Reward: 14.0\n",
+      "Step: 9038 Reward: 14.0\n",
+      "Step: 9043 Reward: 14.0\n",
+      "Step: 9048 Reward: 14.0\n",
+      "Step: 9053 Reward: 14.0\n",
+      "Step: 9058 Reward: 14.0\n",
+      "Step: 9063 Reward: 14.0\n",
+      "Step: 9068 Reward: 14.0\n",
+      "Step: 9073 Reward: 14.0\n",
+      "Step: 9078 Reward: 14.0\n",
+      "Step: 9083 Reward: 14.0\n",
+      "Step: 9088 Reward: 14.0\n",
+      "Step: 9093 Reward: 14.0\n",
+      "Step: 9098 Reward: 14.0\n",
+      "Step: 9103 Reward: 14.0\n",
+      "Step: 9108 Reward: 14.0\n",
+      "Step: 9112 Reward: 3.0\n",
+      "Step: 9117 Reward: 14.0\n",
+      "Step: 9122 Reward: 14.0\n",
+      "Step: 9127 Reward: 14.0\n",
+      "Step: 9132 Reward: 14.0\n",
+      "Step: 9137 Reward: 14.0\n",
+      "Step: 9142 Reward: 14.0\n",
+      "Step: 9147 Reward: 14.0\n",
+      "Step: 9152 Reward: 14.0\n",
+      "Step: 9157 Reward: 14.0\n",
+      "Step: 9162 Reward: 14.0\n",
+      "Step: 9167 Reward: 14.0\n",
+      "Step: 9172 Reward: 14.0\n",
+      "Step: 9177 Reward: 14.0\n",
+      "Step: 9182 Reward: 14.0\n",
+      "Step: 9187 Reward: 14.0\n",
+      "Step: 9192 Reward: 14.0\n",
+      "Step: 9197 Reward: 14.0\n",
+      "Step: 9202 Reward: 14.0\n",
+      "Step: 9207 Reward: 14.0\n",
+      "Step: 9212 Reward: 14.0\n",
+      "Step: 9217 Reward: 14.0\n",
+      "Step: 9222 Reward: 14.0\n",
+      "Step: 9227 Reward: 14.0\n",
+      "Step: 9232 Reward: 14.0\n",
+      "Step: 9237 Reward: 14.0\n",
+      "Step: 9242 Reward: 14.0\n",
+      "Step: 9247 Reward: 14.0\n",
+      "Step: 9252 Reward: 14.0\n",
+      "Step: 9257 Reward: 14.0\n",
+      "Step: 9262 Reward: 14.0\n",
+      "Step: 9267 Reward: 14.0\n",
+      "Step: 9272 Reward: 14.0\n",
+      "Step: 9277 Reward: 14.0\n",
+      "Step: 9282 Reward: 14.0\n",
+      "Step: 9287 Reward: 14.0\n",
+      "Step: 9292 Reward: 14.0\n",
+      "Step: 9297 Reward: 14.0\n",
+      "Step: 9302 Reward: 14.0\n",
+      "Step: 9307 Reward: 14.0\n",
+      "Step: 9312 Reward: 14.0\n",
+      "Step: 9317 Reward: 14.0\n",
+      "Step: 9322 Reward: 14.0\n",
+      "Step: 9327 Reward: 14.0\n",
+      "Step: 9332 Reward: 14.0\n",
+      "Step: 9337 Reward: 14.0\n",
+      "Step: 9339 Reward: 1.0\n",
+      "Step: 9344 Reward: 14.0\n",
+      "Step: 9349 Reward: 14.0\n",
+      "Step: 9354 Reward: 14.0\n",
+      "Step: 9359 Reward: 14.0\n",
+      "Step: 9364 Reward: 14.0\n",
+      "Step: 9369 Reward: 14.0\n",
+      "Step: 9374 Reward: 14.0\n",
+      "Step: 9379 Reward: 14.0\n",
+      "Step: 9384 Reward: 14.0\n",
+      "Step: 9389 Reward: 14.0\n",
+      "Step: 9394 Reward: 14.0\n",
+      "Step: 9399 Reward: 14.0\n",
+      "Step: 9404 Reward: 14.0\n",
+      "Step: 9409 Reward: 14.0\n",
+      "Step: 9414 Reward: 14.0\n",
+      "Step: 9419 Reward: 14.0\n",
+      "Step: 9424 Reward: 14.0\n",
+      "Step: 9429 Reward: 14.0\n",
+      "Step: 9434 Reward: 14.0\n",
+      "Step: 9439 Reward: 14.0\n",
+      "Step: 9444 Reward: 14.0\n",
+      "Step: 9449 Reward: 14.0\n",
+      "Step: 9454 Reward: 14.0\n",
+      "Step: 9459 Reward: 14.0\n",
+      "Step: 9464 Reward: 14.0\n",
+      "Step: 9469 Reward: 14.0\n",
+      "Step: 9474 Reward: 14.0\n",
+      "Step: 9479 Reward: 14.0\n",
+      "Step: 9484 Reward: 14.0\n",
+      "Step: 9489 Reward: 14.0\n",
+      "Step: 9494 Reward: 14.0\n",
+      "Step: 9499 Reward: 14.0\n",
+      "Step: 9504 Reward: 14.0\n",
+      "Step: 9509 Reward: 14.0\n",
+      "Step: 9514 Reward: 14.0\n",
+      "Step: 9519 Reward: 14.0\n",
+      "Step: 9524 Reward: 14.0\n",
+      "Step: 9529 Reward: 14.0\n",
+      "Step: 9534 Reward: 14.0\n",
+      "Step: 9539 Reward: 14.0\n",
+      "Step: 9542 Reward: 2.0\n",
+      "Step: 9547 Reward: 14.0\n",
+      "Step: 9552 Reward: 14.0\n",
+      "Step: 9557 Reward: 14.0\n",
+      "Step: 9562 Reward: 14.0\n",
+      "Step: 9567 Reward: 14.0\n",
+      "Step: 9570 Reward: 2.0\n",
+      "Step: 9575 Reward: 14.0\n",
+      "Step: 9580 Reward: 14.0\n",
+      "Step: 9585 Reward: 14.0\n",
+      "Step: 9590 Reward: 14.0\n",
+      "Step: 9595 Reward: 14.0\n",
+      "Step: 9600 Reward: 14.0\n",
+      "Step: 9605 Reward: 14.0\n",
+      "Step: 9610 Reward: 14.0\n",
+      "Step: 9615 Reward: 14.0\n",
+      "Step: 9620 Reward: 14.0\n",
+      "Step: 9625 Reward: 14.0\n",
+      "Step: 9630 Reward: 14.0\n",
+      "Step: 9635 Reward: 14.0\n",
+      "Step: 9640 Reward: 14.0\n",
+      "Step: 9645 Reward: 14.0\n",
+      "Step: 9650 Reward: 14.0\n",
+      "Step: 9655 Reward: 14.0\n",
+      "Step: 9660 Reward: 14.0\n",
+      "Step: 9665 Reward: 14.0\n",
+      "Step: 9670 Reward: 14.0\n",
+      "Step: 9675 Reward: 14.0\n",
+      "Step: 9680 Reward: 14.0\n",
+      "Step: 9685 Reward: 14.0\n",
+      "Step: 9690 Reward: 14.0\n",
+      "Step: 9695 Reward: 14.0\n",
+      "Step: 9700 Reward: 14.0\n",
+      "Step: 9705 Reward: 14.0\n",
+      "Step: 9710 Reward: 14.0\n",
+      "Step: 9715 Reward: 14.0\n",
+      "Step: 9720 Reward: 14.0\n",
+      "Step: 9725 Reward: 14.0\n",
+      "Step: 9730 Reward: 14.0\n",
+      "Step: 9735 Reward: 14.0\n",
+      "Step: 9740 Reward: 14.0\n",
+      "Step: 9745 Reward: 14.0\n",
+      "Step: 9750 Reward: 14.0\n",
+      "Step: 9755 Reward: 14.0\n",
+      "Step: 9760 Reward: 14.0\n",
+      "Step: 9765 Reward: 14.0\n",
+      "Step: 9770 Reward: 14.0\n",
+      "Step: 9775 Reward: 14.0\n",
+      "Step: 9780 Reward: 14.0\n",
+      "Step: 9785 Reward: 14.0\n",
+      "Step: 9790 Reward: 14.0\n",
+      "Step: 9795 Reward: 14.0\n",
+      "Step: 9800 Reward: 14.0\n",
+      "Step: 9805 Reward: 14.0\n",
+      "Step: 9810 Reward: 14.0\n",
+      "Step: 9815 Reward: 14.0\n",
+      "Step: 9820 Reward: 14.0\n",
+      "Step: 9825 Reward: 14.0\n",
+      "Step: 9830 Reward: 14.0\n",
+      "Step: 9832 Reward: 1.0\n",
+      "Step: 9837 Reward: 14.0\n",
+      "Step: 9842 Reward: 14.0\n",
+      "Step: 9847 Reward: 14.0\n",
+      "Step: 9852 Reward: 14.0\n",
+      "Step: 9857 Reward: 14.0\n",
+      "Step: 9862 Reward: 14.0\n",
+      "Step: 9867 Reward: 14.0\n",
+      "Step: 9872 Reward: 14.0\n",
+      "Step: 9877 Reward: 14.0\n",
+      "Step: 9882 Reward: 14.0\n",
+      "Step: 9887 Reward: 14.0\n",
+      "Step: 9892 Reward: 14.0\n",
+      "Step: 9897 Reward: 14.0\n",
+      "Step: 9902 Reward: 14.0\n",
+      "Step: 9907 Reward: 14.0\n",
+      "Step: 9912 Reward: 14.0\n",
+      "Step: 9917 Reward: 14.0\n",
+      "Step: 9922 Reward: 4.0\n",
+      "Step: 9927 Reward: 14.0\n",
+      "Step: 9932 Reward: 14.0\n",
+      "Step: 9937 Reward: 14.0\n",
+      "Step: 9942 Reward: 14.0\n",
+      "Step: 9947 Reward: 14.0\n",
+      "Step: 9952 Reward: 14.0\n",
+      "Step: 9957 Reward: 14.0\n",
+      "Step: 9962 Reward: 14.0\n",
+      "Step: 9967 Reward: 14.0\n",
+      "Step: 9972 Reward: 14.0\n",
+      "Step: 9977 Reward: 14.0\n",
+      "Step: 9982 Reward: 14.0\n",
+      "Step: 9987 Reward: 14.0\n",
+      "Step: 9992 Reward: 14.0\n",
+      "Step: 9997 Reward: 14.0\n"
+     ]
+    }
+   ],
    "source": [
     "from collections import deque\n",
     "import random\n",
@@ -316,7 +2910,7 @@
     "qf2_target.load_state_dict(qf2.state_dict())\n",
     "q_optimizer = optim.Adam(list(qf1.parameters()) + list(qf2.parameters()), lr=1e-3)\n",
     "actor_optimizer = optim.Adam(list(actor.parameters()), lr=3e-4)\n",
-    "alpha = 0.2\n",
+    "alpha = 0.5\n",
     "\n",
     "TOTAL_STEPS = 10000\n",
     "ep_reward = 0.0\n",
@@ -386,11 +2980,22 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 11,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "image/png": "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",
+      "text/plain": [
+       "<Figure size 640x480 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
    "source": [
-    "visualize_trajectories(actor.get_action, envs, num_trajectories=10, horizon=100)"
+    "visualize_trajectories(actor.get_action, envs, num_trajectories=10, horizon=100, sac=True)"
    ]
   },
   {
@@ -402,7 +3007,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -415,7 +3020,8 @@
     "import torch.optim as optim\n",
     "from stable_baselines3.common.buffers import ReplayBuffer\n",
     "from torch.utils.tensorboard import SummaryWriter\n",
-    "from qflow_model import  SinusoidalPositionEmbeddings, SoftQNetwork, SoftQNetworkMLP\n",
+    "#from qflow_model import  SinusoidalPositionEmbeddings, SoftQNetwork, SoftQNetworkMLP\n",
+    "from qflow_dgfs_model import SoftQNetworkMLP\n",
     "from qflow_dgfs_gflownet import get_alg, sample_traj, sample_policy\n",
     "from qflow_dgfs_buffer import GFlowNetReplayBuffer\n",
     "from collections import deque\n",
@@ -429,8 +3035,8 @@
     "        self.subtb_lambda = 2.0\n",
     "        self.weight_decay = 1e-7\n",
     "        self.tstep = 100\n",
-    "        self.dt = 0.02\n",
-    "        self.N = 50\n",
+    "        self.dt = 0.05\n",
+    "        self.N = 20\n",
     "        self.sigma = 1.0\n",
     "        self.sigma_interactive = 1.0\n",
     "        self.xclip = -1\n",
@@ -444,70 +3050,244 @@
     "        self.gfn_num_states = 32\n",
     "        self.gfn_batch_size = 32\n",
     "        self.gfn_replay_buffer = False\n",
-    "        self.alpha = 0.2\n",
+    "        self.alpha = 0.5\n",
     "        self.q_lr = 1e-3\n",
+    "        self.use_tanh = True\n",
+    "        self.score_normalization = False\n",
+    "        self.divide_by_alpha_score = False\n",
+    "        self.barrier_function = False\n",
+    "        self.action_scale = 1.0\n",
+    "        self.langevin_steps = 0\n",
+    "        self.fourier_features = True\n",
     "        \n",
     "args = Arguments()"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/wandb/sdk/lib/ipython.py:47: DeprecationWarning: Importing display from IPython.core.display is deprecated since IPython 7.14, please import from IPython display\n",
-      "  from IPython.core.display import HTML, display  # type: ignore\n"
-     ]
-    },
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:0v0sdh71) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Waiting for W&B process to finish... <strong style=\"color:green\">(success).</strong>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: left ; width: auto;} td:nth-child(2) {text-align: left ; width: 100%}\n",
-       "    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n",
-       "    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n",
-       "    </style>\n",
-       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>global_step</td><td>▁▃▆█</td></tr><tr><td>losses/GFN</td><td>▁██▁</td></tr><tr><td>losses/qf1_values</td><td>▁▃▆█</td></tr><tr><td>losses/v_values</td><td>▁▅▆█</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>global_step</td><td>500</td></tr><tr><td>losses/GFN</td><td>799.21094</td></tr><tr><td>losses/qf1_values</td><td>13.20834</td></tr><tr><td>losses/v_values</td><td>89.28679</td></tr></table><br/></div></div>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       " View run <strong style=\"color:#cdcd00\">QFlow_lava_crossing</strong> at: <a href='https://wandb.ai/swish/empowerment/runs/0v0sdh71' target=\"_blank\">https://wandb.ai/swish/empowerment/runs/0v0sdh71</a><br/>Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)"
+   "outputs": [],
+   "source": [
+    "wandb.init(\n",
+    "    project=\"empowerment\",\n",
+    "    entity='swish',\n",
+    "    sync_tensorboard=True,\n",
+    "    name=run_name,\n",
+    "    monitor_gym=True,\n",
+    "    save_code=False,\n",
+    ")\n",
+    "writer = SummaryWriter(f\"runs/{run_name}\")\n",
+    "device = torch.device(\"cuda\")\n",
+    "\n",
+    "q1 = SoftQNetworkMLP(args, envs, alpha=args.alpha).to(device)\n",
+    "q1_target = SoftQNetworkMLP(args, envs, alpha=args.alpha).to(device)\n",
+    "q1_target.load_state_dict(q1.state_dict())\n",
+    "args.action_dim = envs.action_space.shape[0]\n",
+    "args.t_end = args.dt * args.N\n",
+    "args.state_dim = envs.observation_space.shape[0]\n",
+    "args.action_dim = envs.action_space.shape[0]\n",
+    "gflownet = get_alg(args, q1)\n",
+    "gflownet.to(device)\n",
+    "gflownet.train()\n",
+    "\n",
+    "param_ls = [\n",
+    "            {\"params\": gflownet.f_func.parameters(), \"lr\": args.gfn_policy_lr},\n",
+    "            {\"params\": gflownet.flow.parameters(), \"lr\": args.gfn_flow_lr},\n",
+    "            {\"params\": gflownet.lgv_coef.parameters(), \"lr\": args.gfn_policy_lr}\n",
+    "        ]\n",
+    "q_optimizer = optim.Adam(q1.parameters(), lr=args.q_lr)\n",
+    "gflow_optimizer = optim.Adam(param_ls, weight_decay=args.weight_decay)\n",
+    "\n",
+    "TOTAL_STEPS = 10000\n",
+    "memory = deque(maxlen=100000)\n",
+    "state = envs.reset().copy()\n",
+    "reward_cur = 0.0\n",
+    "ep_reward = 0.0\n",
+    "for global_step in range(TOTAL_STEPS):\n",
+    "    if global_step < 100:\n",
+    "        actions = np.array(envs.action_space.sample())\n",
+    "    else:\n",
+    "        actions, _, _ = sample_policy(gflownet, torch.Tensor(state).unsqueeze(0).to(device), args, sigma=args.sigma_interactive)\n",
+    "        actions = torch.tanh(actions).detach().cpu().numpy()[0]\n",
+    "    next_state, reward_cur, done, _ = envs.step(actions)\n",
+    "    ep_reward += reward_cur\n",
+    "\n",
+    "    memory.append((state.copy(), np.arctanh(actions), reward_cur, next_state.copy(), done))\n",
+    "    state = next_state.copy()\n",
+    "    \n",
+    "    if done:\n",
+    "        writer.add_scalar(\"charts/episodic_return\", ep_reward, global_step)\n",
+    "        print('Step:', global_step, 'Reward:', ep_reward)\n",
+    "        state = envs.reset().copy()\n",
+    "        ep_reward = 0.0\n",
+    "        \n",
+    "    if global_step > 130:\n",
+    "        minibatch = random.sample(memory, 64)\n",
+    "        states = torch.tensor([i[0] for i in minibatch]).float().cuda()\n",
+    "        actions = torch.tensor([i[1] for i in minibatch]).float().cuda()\n",
+    "        rewards = torch.tensor([i[2] for i in minibatch]).float().cuda()\n",
+    "        next_states = torch.tensor([i[3] for i in minibatch]).float().cuda()\n",
+    "        dones = torch.tensor([i[4] for i in minibatch]).float().cuda()\n",
+    "        \n",
+    "        next_traj_batch, info = sample_traj(gflownet, next_states, args, q1_target.logr_fn_detach, batch_size=args.gfn_batch_size, sigma = args.sigma_interactive)\n",
+    "        next_V = gflownet.compute_V(next_traj_batch, info)\n",
+    "        td_target = rewards + args.alpha * (1 - dones) * next_V.view(-1)\n",
+    "        \n",
+    "        q1_a_values = q1(states, actions).view(-1)\n",
+    "        qf1_loss = F.mse_loss(q1_a_values, td_target.detach())\n",
+    "        q_optimizer.zero_grad()\n",
+    "        qf1_loss.backward()\n",
+    "        q_optimizer.step()\n",
+    "        \n",
+    "        minibatch = random.sample(memory, args.gfn_num_states)\n",
+    "        states = torch.tensor([i[0] for i in minibatch]).float().cuda()\n",
+    "        actions = torch.tensor([i[1] for i in minibatch]).float().cuda()\n",
+    "        rewards = torch.tensor([i[2] for i in minibatch]).float().cuda()\n",
+    "        next_states = torch.tensor([i[3] for i in minibatch]).float().cuda()\n",
+    "        dones = torch.tensor([i[4] for i in minibatch]).float().cuda()\n",
+    "        \n",
+    "        traj_batch, info = sample_traj(gflownet, states, args, q1_target.logr_fn_detach, batch_size=args.gfn_batch_size, sigma = args.sigma_interactive)\n",
+    "        info = gflownet.train_step(traj_batch, info)\n",
+    "        \n",
+    "        for param, target_param in zip(q1.parameters(), q1_target.parameters()):\n",
+    "            target_param.data.copy_(0.995 * param.data + (0.005) * target_param.data)\n",
+    "            \n",
+    "        if global_step % 100 == 0:\n",
+    "            writer.add_scalar(\"losses/qf1_values\", q1_a_values.mean().item(), global_step)\n",
+    "            writer.add_scalar(\"losses/v_values\", next_V.mean().item(), global_step)\n",
+    "            writer.add_scalar(\"losses/GFN\", info['loss_train'], global_step)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "def visualize_gfn_trajectories(env, num_trajectories=20, horizon=6):\n",
+    "    episode_actions = defaultdict(list)\n",
+    "    colors = plt.cm.get_cmap('tab10', num_trajectories)\n",
+    "    trajectories = []\n",
+    "    #sample trajectories from policy network\n",
+    "    for i in range(num_trajectories):\n",
+    "        state = env.reset()\n",
+    "        trajectory = [(-1,0)]  \n",
+    "        for t in range(horizon):\n",
+    "            action, _, _ = sample_policy(gflownet, torch.Tensor(state).unsqueeze(0).to(device), args, sigma=args.sigma_interactive)\n",
+    "            action = action.detach().cpu()[0]\n",
+    "            state, reward, done, _ = env.step(action)\n",
+    "            episode_actions[i].append((state,action))\n",
+    "            cur_state = np.argwhere(state == 1)[0][0]\n",
+    "            if not done or reward == 10:\n",
+    "                trajectory.append((action.item(),cur_state))\n",
+    "            if done:\n",
+    "                break\n",
+    "        # plot the grid\n",
+    "        grid = np.zeros(((env.size+1), (env.size+1)*100))\n",
+    "        for i,stones_level in env.stones.items():\n",
+    "            for stones_patch in stones_level:\n",
+    "                stones_patch = np.linspace(stones_patch[0], stones_patch[1], 100) *100 + 100\n",
+    "                for k in stones_patch:\n",
+    "                    grid[i, int(k)] = .9\n",
+    "\n",
+    "        agent_width = np.linspace(-(env.stones_range * env.agent_width)/2,  (env.stones_range * env.agent_width)/2, 100) *100 +100\n",
+    "        for i in agent_width:\n",
+    "\n",
+    "            grid[0, int(i)] = .9\n",
+    "        \n",
+    "\n",
+    "        # append trajectories\n",
+    "\n",
+    "        trajectory[0] =(0,0)\n",
+    "        trajectory = np.array(trajectory)\n",
+    "        trajectory[:, 0] = trajectory[:, 0] * 100 + 100\n",
+    "        trajectories.append(trajectory)\n",
+    "        env.reset()\n",
+    "    #plot grid and trajectories\n",
+    "    grid[0,0] = .9\n",
+    "    plt.imshow(grid, cmap='binary', aspect='auto', interpolation='nearest')\n",
+    "    for i,traj in enumerate(trajectories):    \n",
+    "        plt.plot(traj[:, 0],traj[:, 1],color = colors(i))\n",
+    "        plt.xlim(0, 200)\n",
+    "\n",
+    "    plt.show()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 640x480 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "visualize_gfn_trajectories(envs, num_trajectories=100, horizon=6)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 20,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from diffusion_model import Model_mlp, Model_Cond_Diffusion\n",
+    "\n",
+    "class Arguments:\n",
+    "    def __init__(self):\n",
+    "        self.diffusion_steps = 20\n",
+    "        self.time_embed_dim = 256\n",
+    "        self.alpha = 0.1\n",
+    "        self.q_lr = 1e-3\n",
+    "        self.policy_lr = 3e-4\n",
+    "        self.batch_size = 128\n",
+    "        self.tau = 0.005\n",
+    "        self.gamma = 0.99\n",
+    " \n",
+    "class SoftQNetwork(nn.Module):\n",
+    "    def __init__(self, env, diffusion_steps):\n",
+    "        super().__init__()\n",
+    "        self.fc1 = nn.Linear(np.array(env.observation_space.shape).prod() + np.prod(env.action_space.shape) + diffusion_steps, 512)\n",
+    "        self.fc2 = nn.Linear(512, 512)\n",
+    "        self.fc3 = nn.Linear(512, 256)\n",
+    "        self.fc4 = nn.Linear(256, 1)\n",
+    "\n",
+    "    def forward(self, x, a, t):\n",
+    "        x = torch.cat([x, a, t], 1)\n",
+    "        x = F.relu(self.fc1(x))\n",
+    "        x = F.relu(self.fc2(x))\n",
+    "        x = F.relu(self.fc3(x))\n",
+    "        x = self.fc4(x)\n",
+    "        return x        \n",
+    "args = Arguments()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/hyperpotato/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/wandb/sdk/lib/ipython.py:47: DeprecationWarning: Importing display from IPython.core.display is deprecated since IPython 7.14, please import from IPython display\n",
+      "  from IPython.core.display import HTML, display  # type: ignore\n"
+     ]
+    },
+    {
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:jpx9xdo0) before initializing another..."
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -519,7 +3299,7 @@
     {
      "data": {
       "text/html": [
-       "Find logs at: <code>./wandb/run-20240117_032945-0v0sdh71/logs</code>"
+       "Waiting for W&B process to finish... <strong style=\"color:green\">(success).</strong>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -531,7 +3311,48 @@
     {
      "data": {
       "text/html": [
-       "Successfully finished last run (ID:0v0sdh71). Initializing new run:<br/>"
+       "<style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: left ; width: auto;} td:nth-child(2) {text-align: left ; width: 100%}\n",
+       "    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n",
+       "    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n",
+       "    </style>\n",
+       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>charts/episodic_return</td><td>▁▁▂▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>global_step</td><td>▁▁▂▂▂▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇▇████</td></tr><tr><td>losses/actor_loss</td><td>▁▅▃▅█▅▆</td></tr><tr><td>losses/qf1_loss</td><td>█▂▂█▁▂▃</td></tr><tr><td>losses/qf1_values</td><td>█▆▄█▁▆▄</td></tr><tr><td>losses/qf2_loss</td><td>▇▁▂█▁▂▂</td></tr><tr><td>losses/qf2_values</td><td>█▆▄█▁▆▄</td></tr><tr><td>losses/qf_loss</td><td>▇▁▂█▁▂▂</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>charts/episodic_return</td><td>0.0</td></tr><tr><td>global_step</td><td>1253</td></tr><tr><td>losses/actor_loss</td><td>-0.58533</td></tr><tr><td>losses/qf1_loss</td><td>1.40899</td></tr><tr><td>losses/qf1_values</td><td>0.85824</td></tr><tr><td>losses/qf2_loss</td><td>1.39706</td></tr><tr><td>losses/qf2_values</td><td>0.85007</td></tr><tr><td>losses/qf_loss</td><td>1.40302</td></tr></table><br/></div></div>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View run <strong style=\"color:#cdcd00\">DSAC_lava_crossing</strong> at: <a href='https://wandb.ai/swish/empowerment/runs/jpx9xdo0' target=\"_blank\">https://wandb.ai/swish/empowerment/runs/jpx9xdo0</a><br/>Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find logs at: <code>./wandb/run-20240201_194655-jpx9xdo0/logs</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Successfully finished last run (ID:jpx9xdo0). Initializing new run:<br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -551,12 +3372,12 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "49ea66e6a1d64b179a6e7907c910a22f",
+       "model_id": "21c4dca1587e40549602326ea0b26db9",
        "version_major": 2,
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value='Waiting for wandb.init()...\\r'), FloatProgress(value=0.016669835033341466, max=1.0…"
+       "VBox(children=(Label(value='Waiting for wandb.init()...\\r'), FloatProgress(value=0.016668781699991086, max=1.0…"
       ]
      },
      "metadata": {},
@@ -590,7 +3411,7 @@
     {
      "data": {
       "text/html": [
-       "Run data is saved locally in <code>/home/hyperpotato/Advantage-Diffusion/wandb/run-20240117_033953-hbpzawmv</code>"
+       "Run data is saved locally in <code>/home/hyperpotato/Advantage-Diffusion/wandb/run-20240201_195143-htiyb4zd</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -602,7 +3423,7 @@
     {
      "data": {
       "text/html": [
-       "Syncing run <strong><a href='https://wandb.ai/swish/empowerment/runs/hbpzawmv' target=\"_blank\">QFlow_lava_crossing</a></strong> to <a href='https://wandb.ai/swish/empowerment' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
+       "Syncing run <strong><a href='https://wandb.ai/swish/empowerment/runs/htiyb4zd' target=\"_blank\">DSAC_lava_crossing</a></strong> to <a href='https://wandb.ai/swish/empowerment' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -626,7 +3447,7 @@
     {
      "data": {
       "text/html": [
-       " View run at <a href='https://wandb.ai/swish/empowerment/runs/hbpzawmv' target=\"_blank\">https://wandb.ai/swish/empowerment/runs/hbpzawmv</a>"
+       " View run at <a href='https://wandb.ai/swish/empowerment/runs/htiyb4zd' target=\"_blank\">https://wandb.ai/swish/empowerment/runs/htiyb4zd</a>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -639,696 +3460,2292 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Step: 0 Reward: 0.0\n",
-      "Step: 1 Reward: 0.0\n",
-      "Step: 2 Reward: 0.0\n",
-      "Step: 6 Reward: 3.0\n",
-      "Step: 10 Reward: 3.0\n",
-      "Step: 11 Reward: 0.0\n",
-      "Step: 13 Reward: 1.0\n",
-      "Step: 15 Reward: 1.0\n",
-      "Step: 18 Reward: 2.0\n",
-      "Step: 20 Reward: 1.0\n",
-      "Step: 21 Reward: 0.0\n",
-      "Step: 26 Reward: 14.0\n",
-      "Step: 27 Reward: 0.0\n",
-      "Step: 31 Reward: 3.0\n",
-      "Step: 32 Reward: 0.0\n",
-      "Step: 33 Reward: 0.0\n",
-      "Step: 38 Reward: 14.0\n",
-      "Step: 39 Reward: 0.0\n",
-      "Step: 40 Reward: 0.0\n",
-      "Step: 45 Reward: 4.0\n",
-      "Step: 46 Reward: 0.0\n",
-      "Step: 47 Reward: 0.0\n",
-      "Step: 48 Reward: 0.0\n",
-      "Step: 49 Reward: 0.0\n",
-      "Step: 50 Reward: 0.0\n",
-      "Step: 51 Reward: 0.0\n",
-      "Step: 56 Reward: 4.0\n",
-      "Step: 60 Reward: 3.0\n",
-      "Step: 65 Reward: 14.0\n",
-      "Step: 69 Reward: 3.0\n",
-      "Step: 74 Reward: 4.0\n",
-      "Step: 75 Reward: 0.0\n",
-      "Step: 77 Reward: 1.0\n",
+      "Step: 2 Reward: 2.0\n",
+      "Step: 4 Reward: 1.0\n",
+      "Step: 6 Reward: 1.0\n",
+      "Step: 9 Reward: 2.0\n",
+      "Step: 11 Reward: 1.0\n",
+      "Step: 12 Reward: 0.0\n",
+      "Step: 13 Reward: 0.0\n",
+      "Step: 14 Reward: 0.0\n",
+      "Step: 16 Reward: 1.0\n",
+      "Step: 17 Reward: 0.0\n",
+      "Step: 19 Reward: 1.0\n",
+      "Step: 24 Reward: 4.0\n",
+      "Step: 29 Reward: 14.0\n",
+      "Step: 30 Reward: 0.0\n",
+      "Step: 32 Reward: 1.0\n",
+      "Step: 37 Reward: 14.0\n",
+      "Step: 41 Reward: 3.0\n",
+      "Step: 46 Reward: 4.0\n",
+      "Step: 48 Reward: 1.0\n",
+      "Step: 51 Reward: 2.0\n",
+      "Step: 53 Reward: 1.0\n",
+      "Step: 56 Reward: 2.0\n",
+      "Step: 59 Reward: 2.0\n",
+      "Step: 61 Reward: 1.0\n",
+      "Step: 65 Reward: 3.0\n",
+      "Step: 67 Reward: 1.0\n",
+      "Step: 71 Reward: 3.0\n",
+      "Step: 72 Reward: 0.0\n",
+      "Step: 73 Reward: 0.0\n",
+      "Step: 76 Reward: 2.0\n",
+      "Step: 77 Reward: 0.0\n",
       "Step: 78 Reward: 0.0\n",
       "Step: 79 Reward: 0.0\n",
-      "Step: 84 Reward: 14.0\n",
-      "Step: 89 Reward: 14.0\n",
-      "Step: 92 Reward: 2.0\n",
-      "Step: 93 Reward: 0.0\n",
-      "Step: 96 Reward: 2.0\n",
-      "Step: 98 Reward: 1.0\n",
-      "Step: 99 Reward: 0.0\n",
-      "Step: 102 Reward: 2.0\n",
-      "Step: 103 Reward: 0.0\n",
-      "Step: 104 Reward: 0.0\n",
-      "Step: 105 Reward: 0.0\n",
-      "Step: 106 Reward: 0.0\n",
-      "Step: 111 Reward: 4.0\n",
-      "Step: 114 Reward: 2.0\n",
-      "Step: 115 Reward: 0.0\n",
-      "Step: 118 Reward: 2.0\n",
+      "Step: 80 Reward: 0.0\n",
+      "Step: 82 Reward: 1.0\n",
+      "Step: 84 Reward: 1.0\n",
+      "Step: 89 Reward: 4.0\n",
+      "Step: 90 Reward: 0.0\n",
+      "Step: 93 Reward: 2.0\n",
+      "Step: 98 Reward: 4.0\n",
+      "Step: 102 Reward: 3.0\n",
+      "Step: 104 Reward: 1.0\n",
+      "Step: 106 Reward: 1.0\n",
+      "Step: 107 Reward: 0.0\n",
+      "Step: 108 Reward: 0.0\n",
+      "Step: 113 Reward: 14.0\n",
+      "Step: 116 Reward: 2.0\n",
+      "Step: 117 Reward: 0.0\n",
+      "Step: 118 Reward: 0.0\n",
       "Step: 119 Reward: 0.0\n",
-      "Step: 123 Reward: 3.0\n",
-      "Step: 124 Reward: 0.0\n",
-      "Step: 126 Reward: 1.0\n",
-      "Step: 128 Reward: 1.0\n",
-      "Step: 129 Reward: 0.0\n",
-      "Step: 133 Reward: 3.0\n",
-      "Step: 134 Reward: 0.0\n",
-      "Step: 135 Reward: 0.0\n",
-      "Step: 140 Reward: 14.0\n",
-      "Step: 145 Reward: 4.0\n",
-      "Step: 148 Reward: 2.0\n",
-      "Step: 149 Reward: 0.0\n",
-      "Step: 150 Reward: 0.0\n",
-      "Step: 151 Reward: 0.0\n",
+      "Step: 120 Reward: 0.0\n",
+      "Step: 121 Reward: 0.0\n",
+      "Step: 122 Reward: 0.0\n",
+      "Step: 125 Reward: 2.0\n",
+      "Step: 126 Reward: 0.0\n",
+      "Step: 127 Reward: 0.0\n",
+      "Step: 129 Reward: 1.0\n",
+      "Step: 131 Reward: 1.0\n",
+      "Step: 132 Reward: 0.0\n",
+      "Step: 137 Reward: 14.0\n",
+      "Step: 139 Reward: 1.0\n",
+      "Step: 141 Reward: 1.0\n",
+      "Step: 142 Reward: 0.0\n",
+      "Step: 143 Reward: 0.0\n",
+      "Step: 147 Reward: 3.0\n",
+      "Step: 149 Reward: 1.0\n",
+      "Step: 151 Reward: 1.0\n",
       "Step: 152 Reward: 0.0\n",
-      "Step: 157 Reward: 14.0\n",
-      "Step: 158 Reward: 0.0\n",
-      "Step: 159 Reward: 0.0\n",
-      "Step: 163 Reward: 3.0\n",
-      "Step: 166 Reward: 2.0\n",
-      "Step: 168 Reward: 1.0\n",
-      "Step: 169 Reward: 0.0\n",
-      "Step: 170 Reward: 0.0\n",
-      "Step: 174 Reward: 3.0\n",
-      "Step: 175 Reward: 0.0\n",
-      "Step: 176 Reward: 0.0\n",
-      "Step: 181 Reward: 14.0\n",
-      "Step: 183 Reward: 1.0\n",
-      "Step: 184 Reward: 0.0\n",
-      "Step: 185 Reward: 0.0\n",
-      "Step: 186 Reward: 0.0\n",
-      "Step: 187 Reward: 0.0\n",
-      "Step: 188 Reward: 0.0\n",
-      "Step: 189 Reward: 0.0\n",
-      "Step: 194 Reward: 4.0\n",
-      "Step: 196 Reward: 1.0\n",
-      "Step: 201 Reward: 4.0\n",
-      "Step: 205 Reward: 3.0\n",
-      "Step: 207 Reward: 1.0\n",
-      "Step: 208 Reward: 0.0\n",
-      "Step: 211 Reward: 2.0\n",
-      "Step: 216 Reward: 14.0\n",
-      "Step: 219 Reward: 2.0\n",
-      "Step: 221 Reward: 1.0\n",
-      "Step: 222 Reward: 0.0\n",
-      "Step: 223 Reward: 0.0\n",
-      "Step: 227 Reward: 3.0\n",
-      "Step: 229 Reward: 1.0\n",
-      "Step: 231 Reward: 1.0\n",
-      "Step: 233 Reward: 1.0\n",
-      "Step: 235 Reward: 1.0\n",
-      "Step: 236 Reward: 0.0\n",
-      "Step: 237 Reward: 0.0\n",
-      "Step: 242 Reward: 14.0\n",
-      "Step: 243 Reward: 0.0\n",
-      "Step: 246 Reward: 2.0\n",
-      "Step: 248 Reward: 1.0\n",
-      "Step: 249 Reward: 0.0\n",
-      "Step: 254 Reward: 14.0\n",
-      "Step: 256 Reward: 1.0\n",
-      "Step: 257 Reward: 0.0\n",
-      "Step: 258 Reward: 0.0\n",
-      "Step: 259 Reward: 0.0\n",
-      "Step: 260 Reward: 0.0\n",
-      "Step: 261 Reward: 0.0\n",
-      "Step: 262 Reward: 0.0\n",
-      "Step: 263 Reward: 0.0\n",
+      "Step: 155 Reward: 2.0\n",
+      "Step: 158 Reward: 2.0\n",
+      "Step: 160 Reward: 1.0\n",
+      "Step: 161 Reward: 0.0\n",
+      "Step: 162 Reward: 0.0\n",
+      "Step: 163 Reward: 0.0\n",
+      "Step: 168 Reward: 14.0\n",
+      "Step: 171 Reward: 2.0\n",
+      "Step: 176 Reward: 4.0\n",
+      "Step: 181 Reward: 4.0\n",
+      "Step: 185 Reward: 3.0\n",
+      "Step: 187 Reward: 1.0\n",
+      "Step: 190 Reward: 2.0\n",
+      "Step: 191 Reward: 0.0\n",
+      "Step: 193 Reward: 1.0\n",
+      "Step: 197 Reward: 3.0\n",
+      "Step: 198 Reward: 0.0\n",
+      "Step: 199 Reward: 0.0\n",
+      "Step: 201 Reward: 1.0\n",
+      "Step: 206 Reward: 14.0\n",
+      "Step: 207 Reward: 0.0\n",
+      "Step: 212 Reward: 4.0\n",
+      "Step: 213 Reward: 0.0\n",
+      "Step: 216 Reward: 2.0\n",
+      "Step: 218 Reward: 1.0\n",
+      "Step: 220 Reward: 1.0\n",
+      "Step: 221 Reward: 0.0\n",
+      "Step: 223 Reward: 1.0\n",
+      "Step: 224 Reward: 0.0\n",
+      "Step: 225 Reward: 0.0\n",
+      "Step: 226 Reward: 0.0\n",
+      "Step: 231 Reward: 14.0\n",
+      "Step: 232 Reward: 0.0\n",
+      "Step: 233 Reward: 0.0\n",
+      "Step: 234 Reward: 0.0\n",
+      "Step: 237 Reward: 2.0\n",
+      "Step: 238 Reward: 0.0\n",
+      "Step: 243 Reward: 14.0\n",
+      "Step: 244 Reward: 0.0\n",
+      "Step: 249 Reward: 14.0\n",
+      "Step: 251 Reward: 1.0\n",
+      "Step: 252 Reward: 0.0\n",
+      "Step: 254 Reward: 1.0\n",
+      "Step: 259 Reward: 14.0\n",
+      "Step: 263 Reward: 3.0\n",
       "Step: 266 Reward: 2.0\n",
-      "Step: 271 Reward: 14.0\n",
-      "Step: 276 Reward: 14.0\n",
+      "Step: 270 Reward: 3.0\n",
+      "Step: 271 Reward: 0.0\n",
+      "Step: 273 Reward: 1.0\n",
+      "Step: 276 Reward: 2.0\n",
       "Step: 280 Reward: 3.0\n",
       "Step: 281 Reward: 0.0\n",
-      "Step: 283 Reward: 1.0\n",
-      "Step: 288 Reward: 14.0\n",
-      "Step: 291 Reward: 2.0\n",
-      "Step: 293 Reward: 1.0\n",
-      "Step: 297 Reward: 3.0\n",
-      "Step: 302 Reward: 4.0\n",
-      "Step: 306 Reward: 3.0\n",
-      "Step: 311 Reward: 14.0\n",
-      "Step: 316 Reward: 4.0\n",
-      "Step: 320 Reward: 3.0\n",
-      "Step: 325 Reward: 14.0\n",
+      "Step: 285 Reward: 3.0\n",
+      "Step: 286 Reward: 0.0\n",
+      "Step: 287 Reward: 0.0\n",
+      "Step: 289 Reward: 1.0\n",
+      "Step: 291 Reward: 1.0\n",
+      "Step: 292 Reward: 0.0\n",
+      "Step: 293 Reward: 0.0\n",
+      "Step: 295 Reward: 1.0\n",
+      "Step: 298 Reward: 2.0\n",
+      "Step: 299 Reward: 0.0\n",
+      "Step: 300 Reward: 0.0\n",
+      "Step: 303 Reward: 2.0\n",
+      "Step: 304 Reward: 0.0\n",
+      "Step: 309 Reward: 4.0\n",
+      "Step: 311 Reward: 1.0\n",
+      "Step: 313 Reward: 1.0\n",
+      "Step: 316 Reward: 2.0\n",
+      "Step: 317 Reward: 0.0\n",
+      "Step: 318 Reward: 0.0\n",
+      "Step: 319 Reward: 0.0\n",
+      "Step: 320 Reward: 0.0\n",
+      "Step: 321 Reward: 0.0\n",
+      "Step: 322 Reward: 0.0\n",
+      "Step: 324 Reward: 1.0\n",
+      "Step: 325 Reward: 0.0\n",
       "Step: 329 Reward: 3.0\n",
-      "Step: 331 Reward: 1.0\n",
-      "Step: 336 Reward: 14.0\n",
-      "Step: 341 Reward: 14.0\n",
-      "Step: 344 Reward: 2.0\n",
-      "Step: 346 Reward: 1.0\n",
-      "Step: 349 Reward: 2.0\n",
-      "Step: 350 Reward: 0.0\n",
-      "Step: 355 Reward: 14.0\n",
-      "Step: 358 Reward: 2.0\n",
-      "Step: 360 Reward: 1.0\n",
-      "Step: 363 Reward: 2.0\n",
-      "Step: 368 Reward: 4.0\n",
-      "Step: 373 Reward: 14.0\n",
-      "Step: 378 Reward: 14.0\n",
-      "Step: 383 Reward: 14.0\n",
+      "Step: 334 Reward: 14.0\n",
+      "Step: 339 Reward: 14.0\n",
+      "Step: 341 Reward: 1.0\n",
+      "Step: 346 Reward: 14.0\n",
+      "Step: 348 Reward: 1.0\n",
+      "Step: 352 Reward: 3.0\n",
+      "Step: 357 Reward: 14.0\n",
+      "Step: 359 Reward: 1.0\n",
+      "Step: 361 Reward: 1.0\n",
+      "Step: 362 Reward: 0.0\n",
+      "Step: 364 Reward: 1.0\n",
+      "Step: 368 Reward: 3.0\n",
+      "Step: 369 Reward: 0.0\n",
+      "Step: 372 Reward: 2.0\n",
+      "Step: 373 Reward: 0.0\n",
+      "Step: 377 Reward: 3.0\n",
+      "Step: 379 Reward: 1.0\n",
+      "Step: 381 Reward: 1.0\n",
+      "Step: 382 Reward: 0.0\n",
+      "Step: 383 Reward: 0.0\n",
       "Step: 384 Reward: 0.0\n",
-      "Step: 389 Reward: 14.0\n",
-      "Step: 394 Reward: 14.0\n",
-      "Step: 396 Reward: 1.0\n",
-      "Step: 401 Reward: 14.0\n",
-      "Step: 402 Reward: 0.0\n",
-      "Step: 405 Reward: 2.0\n",
-      "Step: 410 Reward: 14.0\n",
-      "Step: 415 Reward: 14.0\n",
-      "Step: 420 Reward: 4.0\n",
-      "Step: 425 Reward: 14.0\n",
-      "Step: 430 Reward: 14.0\n",
-      "Step: 431 Reward: 0.0\n",
-      "Step: 432 Reward: 0.0\n",
-      "Step: 437 Reward: 4.0\n",
+      "Step: 386 Reward: 1.0\n",
+      "Step: 390 Reward: 3.0\n",
+      "Step: 391 Reward: 0.0\n",
+      "Step: 394 Reward: 2.0\n",
+      "Step: 398 Reward: 3.0\n",
+      "Step: 403 Reward: 14.0\n",
+      "Step: 407 Reward: 3.0\n",
+      "Step: 408 Reward: 0.0\n",
+      "Step: 409 Reward: 0.0\n",
+      "Step: 410 Reward: 0.0\n",
+      "Step: 413 Reward: 2.0\n",
+      "Step: 414 Reward: 0.0\n",
+      "Step: 416 Reward: 1.0\n",
+      "Step: 418 Reward: 1.0\n",
+      "Step: 420 Reward: 1.0\n",
+      "Step: 423 Reward: 2.0\n",
+      "Step: 426 Reward: 2.0\n",
+      "Step: 427 Reward: 0.0\n",
+      "Step: 429 Reward: 1.0\n",
+      "Step: 430 Reward: 0.0\n",
+      "Step: 435 Reward: 4.0\n",
+      "Step: 437 Reward: 1.0\n",
       "Step: 442 Reward: 4.0\n",
-      "Step: 447 Reward: 14.0\n",
-      "Step: 448 Reward: 0.0\n",
-      "Step: 451 Reward: 2.0\n",
-      "Step: 456 Reward: 14.0\n",
-      "Step: 458 Reward: 1.0\n",
-      "Step: 463 Reward: 14.0\n",
-      "Step: 468 Reward: 14.0\n",
-      "Step: 473 Reward: 14.0\n",
-      "Step: 476 Reward: 2.0\n",
-      "Step: 481 Reward: 14.0\n",
-      "Step: 484 Reward: 2.0\n",
-      "Step: 489 Reward: 14.0\n",
-      "Step: 490 Reward: 0.0\n",
-      "Step: 491 Reward: 0.0\n",
-      "Step: 496 Reward: 14.0\n",
-      "Step: 497 Reward: 0.0\n",
-      "Step: 498 Reward: 0.0\n",
-      "Step: 500 Reward: 1.0\n",
-      "Step: 503 Reward: 2.0\n",
-      "Step: 505 Reward: 1.0\n",
-      "Step: 508 Reward: 2.0\n",
-      "Step: 511 Reward: 2.0\n",
-      "Step: 516 Reward: 14.0\n",
-      "Step: 521 Reward: 14.0\n",
-      "Step: 526 Reward: 14.0\n",
-      "Step: 530 Reward: 3.0\n",
-      "Step: 535 Reward: 14.0\n",
+      "Step: 444 Reward: 1.0\n",
+      "Step: 445 Reward: 0.0\n",
+      "Step: 450 Reward: 4.0\n",
+      "Step: 452 Reward: 1.0\n",
+      "Step: 453 Reward: 0.0\n",
+      "Step: 454 Reward: 0.0\n",
+      "Step: 456 Reward: 1.0\n",
+      "Step: 459 Reward: 2.0\n",
+      "Step: 463 Reward: 3.0\n",
+      "Step: 465 Reward: 1.0\n",
+      "Step: 468 Reward: 2.0\n",
+      "Step: 469 Reward: 0.0\n",
+      "Step: 470 Reward: 0.0\n",
+      "Step: 474 Reward: 3.0\n",
+      "Step: 475 Reward: 0.0\n",
+      "Step: 479 Reward: 3.0\n",
+      "Step: 481 Reward: 1.0\n",
+      "Step: 482 Reward: 0.0\n",
+      "Step: 487 Reward: 4.0\n",
+      "Step: 492 Reward: 4.0\n",
+      "Step: 494 Reward: 1.0\n",
+      "Step: 495 Reward: 0.0\n",
+      "Step: 497 Reward: 1.0\n",
+      "Step: 499 Reward: 1.0\n",
+      "Step: 500 Reward: 0.0\n",
+      "Step: 501 Reward: 0.0\n",
+      "Step: 502 Reward: 0.0\n",
+      "Step: 503 Reward: 0.0\n",
+      "Step: 504 Reward: 0.0\n",
+      "Step: 505 Reward: 0.0\n",
+      "Step: 506 Reward: 0.0\n",
+      "Step: 507 Reward: 0.0\n",
+      "Step: 508 Reward: 0.0\n",
+      "Step: 509 Reward: 0.0\n",
+      "Step: 510 Reward: 0.0\n",
+      "Step: 511 Reward: 0.0\n",
+      "Step: 512 Reward: 0.0\n",
+      "Step: 513 Reward: 0.0\n",
+      "Step: 514 Reward: 0.0\n",
+      "Step: 515 Reward: 0.0\n",
+      "Step: 516 Reward: 0.0\n",
+      "Step: 517 Reward: 0.0\n",
+      "Step: 518 Reward: 0.0\n",
+      "Step: 519 Reward: 0.0\n",
+      "Step: 520 Reward: 0.0\n",
+      "Step: 521 Reward: 0.0\n",
+      "Step: 522 Reward: 0.0\n",
+      "Step: 523 Reward: 0.0\n",
+      "Step: 524 Reward: 0.0\n",
+      "Step: 525 Reward: 0.0\n",
+      "Step: 526 Reward: 0.0\n",
+      "Step: 527 Reward: 0.0\n",
+      "Step: 528 Reward: 0.0\n",
+      "Step: 529 Reward: 0.0\n",
+      "Step: 530 Reward: 0.0\n",
+      "Step: 531 Reward: 0.0\n",
+      "Step: 532 Reward: 0.0\n",
+      "Step: 533 Reward: 0.0\n",
+      "Step: 534 Reward: 0.0\n",
+      "Step: 535 Reward: 0.0\n",
       "Step: 536 Reward: 0.0\n",
-      "Step: 541 Reward: 14.0\n",
-      "Step: 546 Reward: 14.0\n",
-      "Step: 551 Reward: 14.0\n",
+      "Step: 537 Reward: 0.0\n",
+      "Step: 538 Reward: 0.0\n",
+      "Step: 539 Reward: 0.0\n",
+      "Step: 540 Reward: 0.0\n",
+      "Step: 541 Reward: 0.0\n",
+      "Step: 542 Reward: 0.0\n",
+      "Step: 543 Reward: 0.0\n",
+      "Step: 544 Reward: 0.0\n",
+      "Step: 545 Reward: 0.0\n",
+      "Step: 546 Reward: 0.0\n",
+      "Step: 547 Reward: 0.0\n",
+      "Step: 548 Reward: 0.0\n",
+      "Step: 549 Reward: 0.0\n",
+      "Step: 550 Reward: 0.0\n",
+      "Step: 551 Reward: 0.0\n",
       "Step: 552 Reward: 0.0\n",
-      "Step: 555 Reward: 2.0\n",
-      "Step: 558 Reward: 2.0\n",
-      "Step: 562 Reward: 3.0\n",
-      "Step: 564 Reward: 1.0\n",
-      "Step: 567 Reward: 2.0\n",
-      "Step: 570 Reward: 2.0\n",
-      "Step: 575 Reward: 14.0\n",
-      "Step: 580 Reward: 14.0\n",
-      "Step: 585 Reward: 14.0\n",
-      "Step: 590 Reward: 14.0\n",
+      "Step: 553 Reward: 0.0\n",
+      "Step: 554 Reward: 0.0\n",
+      "Step: 555 Reward: 0.0\n",
+      "Step: 556 Reward: 0.0\n",
+      "Step: 557 Reward: 0.0\n",
+      "Step: 558 Reward: 0.0\n",
+      "Step: 559 Reward: 0.0\n",
+      "Step: 560 Reward: 0.0\n",
+      "Step: 561 Reward: 0.0\n",
+      "Step: 562 Reward: 0.0\n",
+      "Step: 563 Reward: 0.0\n",
+      "Step: 564 Reward: 0.0\n",
+      "Step: 565 Reward: 0.0\n",
+      "Step: 566 Reward: 0.0\n",
+      "Step: 567 Reward: 0.0\n",
+      "Step: 568 Reward: 0.0\n",
+      "Step: 569 Reward: 0.0\n",
+      "Step: 570 Reward: 0.0\n",
+      "Step: 571 Reward: 0.0\n",
+      "Step: 572 Reward: 0.0\n",
+      "Step: 573 Reward: 0.0\n",
+      "Step: 574 Reward: 0.0\n",
+      "Step: 575 Reward: 0.0\n",
+      "Step: 576 Reward: 0.0\n",
+      "Step: 577 Reward: 0.0\n",
+      "Step: 578 Reward: 0.0\n",
+      "Step: 579 Reward: 0.0\n",
+      "Step: 580 Reward: 0.0\n",
+      "Step: 581 Reward: 0.0\n",
+      "Step: 582 Reward: 0.0\n",
+      "Step: 583 Reward: 0.0\n",
+      "Step: 584 Reward: 0.0\n",
+      "Step: 585 Reward: 0.0\n",
+      "Step: 586 Reward: 0.0\n",
+      "Step: 587 Reward: 0.0\n",
+      "Step: 588 Reward: 0.0\n",
+      "Step: 589 Reward: 0.0\n",
+      "Step: 590 Reward: 0.0\n",
       "Step: 591 Reward: 0.0\n",
-      "Step: 596 Reward: 4.0\n",
-      "Step: 601 Reward: 14.0\n",
-      "Step: 606 Reward: 14.0\n",
-      "Step: 611 Reward: 14.0\n",
-      "Step: 616 Reward: 14.0\n",
-      "Step: 618 Reward: 1.0\n",
-      "Step: 623 Reward: 14.0\n",
-      "Step: 625 Reward: 1.0\n",
-      "Step: 630 Reward: 14.0\n",
+      "Step: 592 Reward: 0.0\n",
+      "Step: 593 Reward: 0.0\n",
+      "Step: 594 Reward: 0.0\n",
+      "Step: 595 Reward: 0.0\n",
+      "Step: 596 Reward: 0.0\n",
+      "Step: 597 Reward: 0.0\n",
+      "Step: 598 Reward: 0.0\n",
+      "Step: 599 Reward: 0.0\n",
+      "Step: 600 Reward: 0.0\n",
+      "Step: 601 Reward: 0.0\n",
+      "Step: 602 Reward: 0.0\n",
+      "Step: 603 Reward: 0.0\n",
+      "Step: 604 Reward: 0.0\n",
+      "Step: 605 Reward: 0.0\n",
+      "Step: 606 Reward: 0.0\n",
+      "Step: 607 Reward: 0.0\n",
+      "Step: 608 Reward: 0.0\n",
+      "Step: 609 Reward: 0.0\n",
+      "Step: 610 Reward: 0.0\n",
+      "Step: 611 Reward: 0.0\n",
+      "Step: 612 Reward: 0.0\n",
+      "Step: 613 Reward: 0.0\n",
+      "Step: 614 Reward: 0.0\n",
+      "Step: 615 Reward: 0.0\n",
+      "Step: 616 Reward: 0.0\n",
+      "Step: 617 Reward: 0.0\n",
+      "Step: 618 Reward: 0.0\n",
+      "Step: 619 Reward: 0.0\n",
+      "Step: 620 Reward: 0.0\n",
+      "Step: 621 Reward: 0.0\n",
+      "Step: 622 Reward: 0.0\n",
+      "Step: 623 Reward: 0.0\n",
+      "Step: 624 Reward: 0.0\n",
+      "Step: 625 Reward: 0.0\n",
+      "Step: 626 Reward: 0.0\n",
+      "Step: 627 Reward: 0.0\n",
+      "Step: 628 Reward: 0.0\n",
+      "Step: 629 Reward: 0.0\n",
+      "Step: 630 Reward: 0.0\n",
       "Step: 631 Reward: 0.0\n",
-      "Step: 636 Reward: 14.0\n",
-      "Step: 641 Reward: 14.0\n",
-      "Step: 644 Reward: 2.0\n",
-      "Step: 649 Reward: 14.0\n",
+      "Step: 632 Reward: 0.0\n",
+      "Step: 633 Reward: 0.0\n",
+      "Step: 634 Reward: 0.0\n",
+      "Step: 635 Reward: 0.0\n",
+      "Step: 636 Reward: 0.0\n",
+      "Step: 637 Reward: 0.0\n",
+      "Step: 638 Reward: 0.0\n",
+      "Step: 639 Reward: 0.0\n",
+      "Step: 640 Reward: 0.0\n",
+      "Step: 641 Reward: 0.0\n",
+      "Step: 642 Reward: 0.0\n",
+      "Step: 643 Reward: 0.0\n",
+      "Step: 644 Reward: 0.0\n",
+      "Step: 645 Reward: 0.0\n",
+      "Step: 646 Reward: 0.0\n",
+      "Step: 647 Reward: 0.0\n",
+      "Step: 648 Reward: 0.0\n",
+      "Step: 649 Reward: 0.0\n",
       "Step: 650 Reward: 0.0\n",
       "Step: 651 Reward: 0.0\n",
-      "Step: 656 Reward: 14.0\n",
-      "Step: 661 Reward: 14.0\n",
+      "Step: 652 Reward: 0.0\n",
+      "Step: 653 Reward: 0.0\n",
+      "Step: 654 Reward: 0.0\n",
+      "Step: 655 Reward: 0.0\n",
+      "Step: 656 Reward: 0.0\n",
+      "Step: 657 Reward: 0.0\n",
+      "Step: 658 Reward: 0.0\n",
+      "Step: 659 Reward: 0.0\n",
+      "Step: 660 Reward: 0.0\n",
+      "Step: 661 Reward: 0.0\n",
       "Step: 662 Reward: 0.0\n",
-      "Step: 667 Reward: 14.0\n",
-      "Step: 670 Reward: 2.0\n",
-      "Step: 675 Reward: 14.0\n",
-      "Step: 680 Reward: 14.0\n",
-      "Step: 685 Reward: 14.0\n",
-      "Step: 688 Reward: 2.0\n",
-      "Step: 690 Reward: 1.0\n",
-      "Step: 691 Reward: 0.0\n",
-      "Step: 694 Reward: 2.0\n",
-      "Step: 698 Reward: 3.0\n",
-      "Step: 700 Reward: 1.0\n",
+      "Step: 663 Reward: 0.0\n",
+      "Step: 664 Reward: 0.0\n",
+      "Step: 665 Reward: 0.0\n",
+      "Step: 666 Reward: 0.0\n",
+      "Step: 667 Reward: 0.0\n",
+      "Step: 668 Reward: 0.0\n",
+      "Step: 669 Reward: 0.0\n",
+      "Step: 670 Reward: 0.0\n",
+      "Step: 671 Reward: 0.0\n",
+      "Step: 672 Reward: 0.0\n",
+      "Step: 677 Reward: 14.0\n",
+      "Step: 680 Reward: 2.0\n",
+      "Step: 683 Reward: 2.0\n",
+      "Step: 686 Reward: 2.0\n",
+      "Step: 690 Reward: 3.0\n",
+      "Step: 694 Reward: 3.0\n",
+      "Step: 695 Reward: 0.0\n",
+      "Step: 700 Reward: 14.0\n",
       "Step: 703 Reward: 2.0\n",
-      "Step: 706 Reward: 2.0\n",
-      "Step: 710 Reward: 3.0\n",
-      "Step: 711 Reward: 0.0\n",
-      "Step: 716 Reward: 14.0\n",
-      "Step: 721 Reward: 14.0\n",
-      "Step: 726 Reward: 14.0\n",
-      "Step: 731 Reward: 14.0\n",
-      "Step: 736 Reward: 14.0\n",
+      "Step: 707 Reward: 3.0\n",
+      "Step: 710 Reward: 2.0\n",
+      "Step: 713 Reward: 2.0\n",
+      "Step: 717 Reward: 3.0\n",
+      "Step: 721 Reward: 3.0\n",
+      "Step: 724 Reward: 2.0\n",
+      "Step: 725 Reward: 0.0\n",
+      "Step: 726 Reward: 0.0\n",
+      "Step: 730 Reward: 3.0\n",
+      "Step: 734 Reward: 3.0\n",
+      "Step: 735 Reward: 0.0\n",
+      "Step: 736 Reward: 0.0\n",
       "Step: 737 Reward: 0.0\n",
-      "Step: 742 Reward: 14.0\n",
-      "Step: 747 Reward: 4.0\n",
-      "Step: 748 Reward: 0.0\n",
-      "Step: 753 Reward: 14.0\n",
-      "Step: 757 Reward: 3.0\n",
-      "Step: 761 Reward: 3.0\n",
-      "Step: 766 Reward: 14.0\n",
-      "Step: 770 Reward: 3.0\n",
-      "Step: 774 Reward: 3.0\n",
-      "Step: 775 Reward: 0.0\n",
-      "Step: 776 Reward: 0.0\n",
-      "Step: 781 Reward: 4.0\n",
-      "Step: 782 Reward: 0.0\n",
-      "Step: 787 Reward: 14.0\n",
+      "Step: 738 Reward: 0.0\n",
+      "Step: 741 Reward: 2.0\n",
+      "Step: 742 Reward: 0.0\n",
+      "Step: 743 Reward: 0.0\n",
+      "Step: 744 Reward: 0.0\n",
+      "Step: 748 Reward: 3.0\n",
+      "Step: 751 Reward: 2.0\n",
+      "Step: 755 Reward: 3.0\n",
+      "Step: 756 Reward: 0.0\n",
+      "Step: 757 Reward: 0.0\n",
+      "Step: 758 Reward: 0.0\n",
+      "Step: 763 Reward: 14.0\n",
+      "Step: 768 Reward: 14.0\n",
+      "Step: 771 Reward: 2.0\n",
+      "Step: 774 Reward: 2.0\n",
+      "Step: 777 Reward: 2.0\n",
+      "Step: 778 Reward: 0.0\n",
+      "Step: 782 Reward: 3.0\n",
+      "Step: 783 Reward: 0.0\n",
+      "Step: 784 Reward: 0.0\n",
+      "Step: 785 Reward: 0.0\n",
+      "Step: 787 Reward: 1.0\n",
       "Step: 791 Reward: 3.0\n",
       "Step: 794 Reward: 2.0\n",
-      "Step: 799 Reward: 14.0\n",
-      "Step: 803 Reward: 3.0\n",
-      "Step: 808 Reward: 14.0\n",
-      "Step: 813 Reward: 14.0\n",
-      "Step: 818 Reward: 14.0\n",
-      "Step: 823 Reward: 4.0\n",
-      "Step: 828 Reward: 14.0\n",
-      "Step: 833 Reward: 14.0\n",
-      "Step: 834 Reward: 0.0\n",
-      "Step: 837 Reward: 2.0\n",
-      "Step: 841 Reward: 3.0\n",
-      "Step: 846 Reward: 14.0\n",
-      "Step: 847 Reward: 0.0\n",
-      "Step: 850 Reward: 2.0\n",
+      "Step: 798 Reward: 3.0\n",
+      "Step: 799 Reward: 0.0\n",
+      "Step: 800 Reward: 0.0\n",
+      "Step: 801 Reward: 0.0\n",
+      "Step: 804 Reward: 2.0\n",
+      "Step: 809 Reward: 14.0\n",
+      "Step: 813 Reward: 3.0\n",
+      "Step: 817 Reward: 3.0\n",
+      "Step: 822 Reward: 14.0\n",
+      "Step: 826 Reward: 3.0\n",
+      "Step: 829 Reward: 2.0\n",
+      "Step: 833 Reward: 3.0\n",
+      "Step: 836 Reward: 2.0\n",
+      "Step: 840 Reward: 3.0\n",
+      "Step: 841 Reward: 0.0\n",
+      "Step: 845 Reward: 3.0\n",
+      "Step: 850 Reward: 14.0\n",
       "Step: 853 Reward: 2.0\n",
-      "Step: 857 Reward: 3.0\n",
-      "Step: 859 Reward: 1.0\n",
-      "Step: 862 Reward: 2.0\n",
-      "Step: 867 Reward: 14.0\n",
-      "Step: 869 Reward: 1.0\n",
-      "Step: 874 Reward: 14.0\n",
-      "Step: 878 Reward: 3.0\n",
-      "Step: 883 Reward: 14.0\n",
-      "Step: 888 Reward: 14.0\n",
+      "Step: 856 Reward: 2.0\n",
+      "Step: 857 Reward: 0.0\n",
+      "Step: 858 Reward: 0.0\n",
+      "Step: 859 Reward: 0.0\n",
+      "Step: 863 Reward: 3.0\n",
+      "Step: 866 Reward: 2.0\n",
+      "Step: 870 Reward: 3.0\n",
+      "Step: 871 Reward: 0.0\n",
+      "Step: 872 Reward: 0.0\n",
+      "Step: 873 Reward: 0.0\n",
+      "Step: 876 Reward: 2.0\n",
+      "Step: 879 Reward: 2.0\n",
+      "Step: 880 Reward: 0.0\n",
+      "Step: 884 Reward: 3.0\n",
+      "Step: 885 Reward: 0.0\n",
+      "Step: 888 Reward: 2.0\n",
       "Step: 893 Reward: 14.0\n",
-      "Step: 895 Reward: 1.0\n",
-      "Step: 900 Reward: 14.0\n",
-      "Step: 905 Reward: 14.0\n",
-      "Step: 910 Reward: 14.0\n",
-      "Step: 915 Reward: 14.0\n",
-      "Step: 920 Reward: 4.0\n",
-      "Step: 924 Reward: 3.0\n",
-      "Step: 929 Reward: 14.0\n",
+      "Step: 896 Reward: 2.0\n",
+      "Step: 897 Reward: 0.0\n",
+      "Step: 898 Reward: 0.0\n",
+      "Step: 899 Reward: 0.0\n",
+      "Step: 902 Reward: 2.0\n",
+      "Step: 903 Reward: 0.0\n",
+      "Step: 904 Reward: 0.0\n",
+      "Step: 905 Reward: 0.0\n",
+      "Step: 906 Reward: 0.0\n",
+      "Step: 909 Reward: 2.0\n",
+      "Step: 910 Reward: 0.0\n",
+      "Step: 911 Reward: 0.0\n",
+      "Step: 912 Reward: 0.0\n",
+      "Step: 913 Reward: 0.0\n",
+      "Step: 914 Reward: 0.0\n",
+      "Step: 918 Reward: 3.0\n",
+      "Step: 921 Reward: 2.0\n",
+      "Step: 922 Reward: 0.0\n",
+      "Step: 923 Reward: 0.0\n",
+      "Step: 924 Reward: 0.0\n",
+      "Step: 925 Reward: 0.0\n",
+      "Step: 926 Reward: 0.0\n",
+      "Step: 929 Reward: 2.0\n",
       "Step: 932 Reward: 2.0\n",
-      "Step: 933 Reward: 0.0\n",
-      "Step: 938 Reward: 14.0\n",
-      "Step: 939 Reward: 0.0\n",
-      "Step: 944 Reward: 14.0\n",
-      "Step: 949 Reward: 14.0\n",
-      "Step: 952 Reward: 2.0\n",
-      "Step: 953 Reward: 0.0\n",
-      "Step: 958 Reward: 14.0\n",
-      "Step: 960 Reward: 1.0\n",
-      "Step: 961 Reward: 0.0\n",
-      "Step: 962 Reward: 0.0\n",
-      "Step: 967 Reward: 14.0\n",
-      "Step: 968 Reward: 0.0\n",
-      "Step: 971 Reward: 2.0\n",
-      "Step: 976 Reward: 14.0\n",
-      "Step: 981 Reward: 14.0\n",
-      "Step: 986 Reward: 14.0\n",
-      "Step: 991 Reward: 14.0\n",
-      "Step: 996 Reward: 14.0\n",
-      "Step: 1001 Reward: 14.0\n",
-      "Step: 1002 Reward: 0.0\n",
+      "Step: 936 Reward: 3.0\n",
+      "Step: 939 Reward: 2.0\n",
+      "Step: 943 Reward: 3.0\n",
+      "Step: 948 Reward: 14.0\n",
+      "Step: 951 Reward: 2.0\n",
+      "Step: 952 Reward: 0.0\n",
+      "Step: 956 Reward: 3.0\n",
+      "Step: 959 Reward: 2.0\n",
+      "Step: 963 Reward: 3.0\n",
+      "Step: 967 Reward: 3.0\n",
+      "Step: 971 Reward: 3.0\n",
+      "Step: 975 Reward: 3.0\n",
+      "Step: 979 Reward: 3.0\n",
+      "Step: 980 Reward: 0.0\n",
+      "Step: 984 Reward: 3.0\n",
+      "Step: 989 Reward: 14.0\n",
+      "Step: 994 Reward: 14.0\n",
+      "Step: 998 Reward: 3.0\n",
+      "Step: 1002 Reward: 3.0\n",
       "Step: 1007 Reward: 14.0\n",
-      "Step: 1012 Reward: 14.0\n",
+      "Step: 1010 Reward: 2.0\n",
+      "Step: 1011 Reward: 0.0\n",
+      "Step: 1012 Reward: 0.0\n",
       "Step: 1013 Reward: 0.0\n",
-      "Step: 1018 Reward: 14.0\n",
-      "Step: 1023 Reward: 14.0\n",
-      "Step: 1028 Reward: 14.0\n",
-      "Step: 1033 Reward: 14.0\n",
-      "Step: 1038 Reward: 14.0\n",
-      "Step: 1043 Reward: 14.0\n",
-      "Step: 1048 Reward: 14.0\n",
+      "Step: 1017 Reward: 3.0\n",
+      "Step: 1020 Reward: 2.0\n",
+      "Step: 1021 Reward: 0.0\n",
+      "Step: 1026 Reward: 14.0\n",
+      "Step: 1031 Reward: 14.0\n",
+      "Step: 1034 Reward: 2.0\n",
+      "Step: 1038 Reward: 3.0\n",
+      "Step: 1041 Reward: 2.0\n",
+      "Step: 1042 Reward: 0.0\n",
+      "Step: 1047 Reward: 14.0\n",
+      "Step: 1048 Reward: 0.0\n",
       "Step: 1051 Reward: 2.0\n",
-      "Step: 1056 Reward: 14.0\n",
-      "Step: 1059 Reward: 2.0\n",
-      "Step: 1060 Reward: 0.0\n",
-      "Step: 1062 Reward: 1.0\n",
-      "Step: 1067 Reward: 14.0\n",
-      "Step: 1070 Reward: 2.0\n",
+      "Step: 1052 Reward: 0.0\n",
+      "Step: 1056 Reward: 3.0\n",
+      "Step: 1057 Reward: 0.0\n",
+      "Step: 1062 Reward: 14.0\n",
+      "Step: 1063 Reward: 0.0\n",
+      "Step: 1066 Reward: 2.0\n",
+      "Step: 1069 Reward: 2.0\n",
+      "Step: 1070 Reward: 0.0\n",
       "Step: 1071 Reward: 0.0\n",
-      "Step: 1076 Reward: 14.0\n",
-      "Step: 1081 Reward: 14.0\n",
-      "Step: 1086 Reward: 14.0\n",
-      "Step: 1089 Reward: 2.0\n",
+      "Step: 1072 Reward: 0.0\n",
+      "Step: 1073 Reward: 0.0\n",
+      "Step: 1078 Reward: 14.0\n",
+      "Step: 1079 Reward: 0.0\n",
+      "Step: 1080 Reward: 0.0\n",
+      "Step: 1084 Reward: 3.0\n",
+      "Step: 1089 Reward: 14.0\n",
       "Step: 1090 Reward: 0.0\n",
-      "Step: 1095 Reward: 14.0\n",
-      "Step: 1100 Reward: 4.0\n",
-      "Step: 1105 Reward: 14.0\n",
-      "Step: 1108 Reward: 2.0\n",
-      "Step: 1112 Reward: 3.0\n",
+      "Step: 1091 Reward: 0.0\n",
+      "Step: 1092 Reward: 0.0\n",
+      "Step: 1095 Reward: 2.0\n",
+      "Step: 1096 Reward: 0.0\n",
+      "Step: 1097 Reward: 0.0\n",
+      "Step: 1100 Reward: 2.0\n",
+      "Step: 1104 Reward: 3.0\n",
+      "Step: 1105 Reward: 0.0\n",
+      "Step: 1106 Reward: 0.0\n",
+      "Step: 1111 Reward: 14.0\n",
+      "Step: 1112 Reward: 0.0\n",
       "Step: 1117 Reward: 14.0\n",
-      "Step: 1122 Reward: 14.0\n",
-      "Step: 1124 Reward: 1.0\n",
-      "Step: 1127 Reward: 2.0\n",
-      "Step: 1131 Reward: 3.0\n",
-      "Step: 1136 Reward: 14.0\n",
-      "Step: 1141 Reward: 14.0\n",
-      "Step: 1142 Reward: 0.0\n",
-      "Step: 1147 Reward: 14.0\n",
-      "Step: 1149 Reward: 1.0\n",
-      "Step: 1154 Reward: 14.0\n",
-      "Step: 1159 Reward: 14.0\n",
-      "Step: 1164 Reward: 14.0\n",
-      "Step: 1169 Reward: 14.0\n",
-      "Step: 1170 Reward: 0.0\n",
-      "Step: 1171 Reward: 0.0\n",
-      "Step: 1176 Reward: 14.0\n",
-      "Step: 1181 Reward: 14.0\n",
-      "Step: 1186 Reward: 14.0\n",
-      "Step: 1191 Reward: 14.0\n",
-      "Step: 1193 Reward: 1.0\n",
-      "Step: 1198 Reward: 14.0\n",
-      "Step: 1203 Reward: 14.0\n",
-      "Step: 1204 Reward: 0.0\n",
-      "Step: 1209 Reward: 14.0\n",
-      "Step: 1212 Reward: 2.0\n",
-      "Step: 1215 Reward: 2.0\n",
-      "Step: 1220 Reward: 14.0\n",
+      "Step: 1120 Reward: 2.0\n",
+      "Step: 1124 Reward: 3.0\n",
+      "Step: 1125 Reward: 0.0\n",
+      "Step: 1126 Reward: 0.0\n",
+      "Step: 1127 Reward: 0.0\n",
+      "Step: 1128 Reward: 0.0\n",
+      "Step: 1132 Reward: 3.0\n",
+      "Step: 1133 Reward: 0.0\n",
+      "Step: 1137 Reward: 3.0\n",
+      "Step: 1138 Reward: 0.0\n",
+      "Step: 1139 Reward: 0.0\n",
+      "Step: 1144 Reward: 14.0\n",
+      "Step: 1148 Reward: 3.0\n",
+      "Step: 1149 Reward: 0.0\n",
+      "Step: 1152 Reward: 2.0\n",
+      "Step: 1156 Reward: 3.0\n",
+      "Step: 1157 Reward: 0.0\n",
+      "Step: 1162 Reward: 14.0\n",
+      "Step: 1163 Reward: 0.0\n",
+      "Step: 1164 Reward: 0.0\n",
+      "Step: 1167 Reward: 2.0\n",
+      "Step: 1172 Reward: 14.0\n",
+      "Step: 1176 Reward: 3.0\n",
+      "Step: 1180 Reward: 3.0\n",
+      "Step: 1184 Reward: 3.0\n",
+      "Step: 1189 Reward: 14.0\n",
+      "Step: 1194 Reward: 14.0\n",
+      "Step: 1198 Reward: 3.0\n",
+      "Step: 1203 Reward: 4.0\n",
+      "Step: 1206 Reward: 2.0\n",
+      "Step: 1207 Reward: 0.0\n",
+      "Step: 1208 Reward: 0.0\n",
+      "Step: 1209 Reward: 0.0\n",
+      "Step: 1210 Reward: 0.0\n",
+      "Step: 1213 Reward: 2.0\n",
+      "Step: 1214 Reward: 0.0\n",
+      "Step: 1215 Reward: 0.0\n",
+      "Step: 1216 Reward: 0.0\n",
+      "Step: 1220 Reward: 3.0\n",
       "Step: 1221 Reward: 0.0\n",
       "Step: 1226 Reward: 14.0\n",
-      "Step: 1231 Reward: 14.0\n",
-      "Step: 1236 Reward: 14.0\n",
-      "Step: 1241 Reward: 4.0\n",
-      "Step: 1246 Reward: 14.0\n",
-      "Step: 1249 Reward: 2.0\n",
-      "Step: 1250 Reward: 0.0\n",
-      "Step: 1255 Reward: 4.0\n",
-      "Step: 1257 Reward: 1.0\n",
-      "Step: 1258 Reward: 0.0\n",
-      "Step: 1261 Reward: 2.0\n",
-      "Step: 1266 Reward: 4.0\n",
-      "Step: 1269 Reward: 2.0\n",
-      "Step: 1270 Reward: 0.0\n",
-      "Step: 1275 Reward: 14.0\n",
-      "Step: 1278 Reward: 2.0\n",
-      "Step: 1283 Reward: 14.0\n",
-      "Step: 1286 Reward: 2.0\n",
-      "Step: 1291 Reward: 14.0\n",
-      "Step: 1296 Reward: 14.0\n",
-      "Step: 1301 Reward: 4.0\n",
-      "Step: 1306 Reward: 14.0\n",
-      "Step: 1311 Reward: 14.0\n",
+      "Step: 1227 Reward: 0.0\n",
+      "Step: 1232 Reward: 14.0\n",
+      "Step: 1233 Reward: 0.0\n",
+      "Step: 1238 Reward: 14.0\n",
+      "Step: 1242 Reward: 3.0\n",
+      "Step: 1243 Reward: 0.0\n",
+      "Step: 1244 Reward: 0.0\n",
+      "Step: 1247 Reward: 2.0\n",
+      "Step: 1250 Reward: 2.0\n",
+      "Step: 1253 Reward: 2.0\n",
+      "Step: 1258 Reward: 14.0\n",
+      "Step: 1263 Reward: 14.0\n",
+      "Step: 1268 Reward: 14.0\n",
+      "Step: 1272 Reward: 3.0\n",
+      "Step: 1273 Reward: 0.0\n",
+      "Step: 1274 Reward: 0.0\n",
+      "Step: 1275 Reward: 0.0\n",
+      "Step: 1276 Reward: 0.0\n",
+      "Step: 1277 Reward: 0.0\n",
+      "Step: 1278 Reward: 0.0\n",
+      "Step: 1279 Reward: 0.0\n",
+      "Step: 1282 Reward: 2.0\n",
+      "Step: 1285 Reward: 2.0\n",
+      "Step: 1290 Reward: 14.0\n",
+      "Step: 1291 Reward: 0.0\n",
+      "Step: 1292 Reward: 0.0\n",
+      "Step: 1293 Reward: 0.0\n",
+      "Step: 1296 Reward: 2.0\n",
+      "Step: 1297 Reward: 0.0\n",
+      "Step: 1298 Reward: 0.0\n",
+      "Step: 1299 Reward: 0.0\n",
+      "Step: 1300 Reward: 0.0\n",
+      "Step: 1301 Reward: 0.0\n",
+      "Step: 1304 Reward: 2.0\n",
+      "Step: 1307 Reward: 2.0\n",
+      "Step: 1311 Reward: 3.0\n",
       "Step: 1312 Reward: 0.0\n",
-      "Step: 1315 Reward: 2.0\n",
-      "Step: 1320 Reward: 14.0\n",
-      "Step: 1325 Reward: 4.0\n",
-      "Step: 1326 Reward: 0.0\n",
-      "Step: 1331 Reward: 14.0\n",
-      "Step: 1336 Reward: 14.0\n",
-      "Step: 1339 Reward: 2.0\n",
-      "Step: 1340 Reward: 0.0\n",
-      "Step: 1343 Reward: 2.0\n",
-      "Step: 1344 Reward: 0.0\n",
-      "Step: 1349 Reward: 14.0\n",
-      "Step: 1354 Reward: 14.0\n",
-      "Step: 1359 Reward: 14.0\n",
-      "Step: 1364 Reward: 14.0\n",
-      "Step: 1369 Reward: 14.0\n",
-      "Step: 1374 Reward: 14.0\n",
-      "Step: 1379 Reward: 14.0\n",
-      "Step: 1380 Reward: 0.0\n",
-      "Step: 1381 Reward: 0.0\n",
+      "Step: 1316 Reward: 3.0\n",
+      "Step: 1317 Reward: 0.0\n",
+      "Step: 1322 Reward: 14.0\n",
+      "Step: 1323 Reward: 0.0\n",
+      "Step: 1328 Reward: 14.0\n",
+      "Step: 1333 Reward: 14.0\n",
+      "Step: 1338 Reward: 14.0\n",
+      "Step: 1343 Reward: 14.0\n",
+      "Step: 1348 Reward: 14.0\n",
+      "Step: 1351 Reward: 2.0\n",
+      "Step: 1356 Reward: 14.0\n",
+      "Step: 1361 Reward: 14.0\n",
+      "Step: 1362 Reward: 0.0\n",
+      "Step: 1363 Reward: 0.0\n",
+      "Step: 1368 Reward: 14.0\n",
+      "Step: 1373 Reward: 14.0\n",
+      "Step: 1378 Reward: 14.0\n",
+      "Step: 1381 Reward: 2.0\n",
       "Step: 1386 Reward: 14.0\n",
       "Step: 1391 Reward: 14.0\n",
-      "Step: 1396 Reward: 14.0\n",
-      "Step: 1401 Reward: 14.0\n",
-      "Step: 1406 Reward: 14.0\n",
-      "Step: 1410 Reward: 3.0\n",
-      "Step: 1411 Reward: 0.0\n",
-      "Step: 1416 Reward: 14.0\n",
-      "Step: 1419 Reward: 2.0\n",
-      "Step: 1422 Reward: 2.0\n",
-      "Step: 1427 Reward: 14.0\n",
-      "Step: 1432 Reward: 14.0\n",
-      "Step: 1437 Reward: 14.0\n",
-      "Step: 1442 Reward: 14.0\n",
-      "Step: 1447 Reward: 14.0\n",
-      "Step: 1452 Reward: 14.0\n",
-      "Step: 1456 Reward: 3.0\n",
-      "Step: 1461 Reward: 14.0\n",
-      "Step: 1466 Reward: 14.0\n",
+      "Step: 1392 Reward: 0.0\n",
+      "Step: 1397 Reward: 14.0\n",
+      "Step: 1398 Reward: 0.0\n",
+      "Step: 1403 Reward: 4.0\n",
+      "Step: 1404 Reward: 0.0\n",
+      "Step: 1408 Reward: 3.0\n",
+      "Step: 1413 Reward: 14.0\n",
+      "Step: 1416 Reward: 2.0\n",
+      "Step: 1421 Reward: 14.0\n",
+      "Step: 1425 Reward: 3.0\n",
+      "Step: 1428 Reward: 2.0\n",
+      "Step: 1429 Reward: 0.0\n",
+      "Step: 1434 Reward: 14.0\n",
+      "Step: 1437 Reward: 2.0\n",
+      "Step: 1438 Reward: 0.0\n",
+      "Step: 1441 Reward: 2.0\n",
+      "Step: 1442 Reward: 0.0\n",
+      "Step: 1443 Reward: 0.0\n",
+      "Step: 1446 Reward: 2.0\n",
+      "Step: 1447 Reward: 0.0\n",
+      "Step: 1450 Reward: 2.0\n",
+      "Step: 1451 Reward: 0.0\n",
+      "Step: 1452 Reward: 0.0\n",
+      "Step: 1453 Reward: 0.0\n",
+      "Step: 1458 Reward: 14.0\n",
+      "Step: 1463 Reward: 14.0\n",
+      "Step: 1466 Reward: 2.0\n",
       "Step: 1467 Reward: 0.0\n",
       "Step: 1472 Reward: 14.0\n",
       "Step: 1473 Reward: 0.0\n",
-      "Step: 1478 Reward: 14.0\n",
-      "Step: 1480 Reward: 1.0\n",
-      "Step: 1481 Reward: 0.0\n",
-      "Step: 1484 Reward: 2.0\n",
-      "Step: 1489 Reward: 14.0\n",
-      "Step: 1494 Reward: 14.0\n",
-      "Step: 1499 Reward: 14.0\n",
-      "Step: 1504 Reward: 14.0\n",
+      "Step: 1476 Reward: 2.0\n",
+      "Step: 1477 Reward: 0.0\n",
+      "Step: 1478 Reward: 0.0\n",
+      "Step: 1479 Reward: 0.0\n",
+      "Step: 1482 Reward: 2.0\n",
+      "Step: 1487 Reward: 14.0\n",
+      "Step: 1492 Reward: 14.0\n",
+      "Step: 1495 Reward: 2.0\n",
+      "Step: 1500 Reward: 14.0\n",
+      "Step: 1503 Reward: 2.0\n",
+      "Step: 1504 Reward: 0.0\n",
       "Step: 1505 Reward: 0.0\n",
-      "Step: 1510 Reward: 14.0\n",
-      "Step: 1515 Reward: 14.0\n",
-      "Step: 1520 Reward: 14.0\n",
-      "Step: 1523 Reward: 2.0\n",
-      "Step: 1528 Reward: 14.0\n",
-      "Step: 1533 Reward: 14.0\n",
-      "Step: 1538 Reward: 14.0\n",
+      "Step: 1508 Reward: 2.0\n",
+      "Step: 1513 Reward: 14.0\n",
+      "Step: 1516 Reward: 2.0\n",
+      "Step: 1518 Reward: 1.0\n",
+      "Step: 1519 Reward: 0.0\n",
+      "Step: 1520 Reward: 0.0\n",
+      "Step: 1522 Reward: 1.0\n",
+      "Step: 1523 Reward: 0.0\n",
+      "Step: 1524 Reward: 0.0\n",
+      "Step: 1526 Reward: 1.0\n",
+      "Step: 1531 Reward: 14.0\n",
+      "Step: 1532 Reward: 0.0\n",
+      "Step: 1533 Reward: 0.0\n",
+      "Step: 1534 Reward: 0.0\n",
+      "Step: 1537 Reward: 2.0\n",
+      "Step: 1538 Reward: 0.0\n",
       "Step: 1539 Reward: 0.0\n",
-      "Step: 1542 Reward: 2.0\n",
-      "Step: 1547 Reward: 14.0\n",
-      "Step: 1552 Reward: 14.0\n",
-      "Step: 1557 Reward: 14.0\n",
-      "Step: 1562 Reward: 14.0\n",
-      "Step: 1567 Reward: 14.0\n",
-      "Step: 1570 Reward: 2.0\n",
-      "Step: 1575 Reward: 14.0\n",
-      "Step: 1580 Reward: 14.0\n",
-      "Step: 1585 Reward: 14.0\n",
+      "Step: 1541 Reward: 1.0\n",
+      "Step: 1543 Reward: 1.0\n",
+      "Step: 1546 Reward: 2.0\n",
+      "Step: 1547 Reward: 0.0\n",
+      "Step: 1551 Reward: 3.0\n",
+      "Step: 1552 Reward: 0.0\n",
+      "Step: 1553 Reward: 0.0\n",
+      "Step: 1558 Reward: 14.0\n",
+      "Step: 1563 Reward: 14.0\n",
+      "Step: 1564 Reward: 0.0\n",
+      "Step: 1567 Reward: 2.0\n",
+      "Step: 1568 Reward: 0.0\n",
+      "Step: 1571 Reward: 2.0\n",
+      "Step: 1572 Reward: 0.0\n",
+      "Step: 1573 Reward: 0.0\n",
+      "Step: 1574 Reward: 0.0\n",
+      "Step: 1579 Reward: 14.0\n",
+      "Step: 1580 Reward: 0.0\n",
+      "Step: 1583 Reward: 2.0\n",
+      "Step: 1584 Reward: 0.0\n",
+      "Step: 1585 Reward: 0.0\n",
       "Step: 1590 Reward: 14.0\n",
-      "Step: 1591 Reward: 0.0\n",
-      "Step: 1593 Reward: 1.0\n",
-      "Step: 1598 Reward: 14.0\n",
-      "Step: 1602 Reward: 3.0\n",
+      "Step: 1595 Reward: 14.0\n",
+      "Step: 1598 Reward: 2.0\n",
+      "Step: 1599 Reward: 0.0\n",
+      "Step: 1602 Reward: 2.0\n",
       "Step: 1607 Reward: 14.0\n",
-      "Step: 1612 Reward: 14.0\n",
-      "Step: 1617 Reward: 14.0\n",
-      "Step: 1621 Reward: 3.0\n",
-      "Step: 1624 Reward: 2.0\n",
-      "Step: 1627 Reward: 2.0\n",
+      "Step: 1610 Reward: 2.0\n",
+      "Step: 1613 Reward: 2.0\n",
+      "Step: 1614 Reward: 0.0\n",
+      "Step: 1616 Reward: 1.0\n",
+      "Step: 1619 Reward: 2.0\n",
+      "Step: 1620 Reward: 0.0\n",
+      "Step: 1625 Reward: 14.0\n",
+      "Step: 1626 Reward: 0.0\n",
+      "Step: 1627 Reward: 0.0\n",
       "Step: 1632 Reward: 14.0\n",
       "Step: 1637 Reward: 14.0\n",
-      "Step: 1640 Reward: 2.0\n",
-      "Step: 1641 Reward: 0.0\n",
+      "Step: 1638 Reward: 0.0\n",
+      "Step: 1641 Reward: 2.0\n",
       "Step: 1646 Reward: 14.0\n",
       "Step: 1647 Reward: 0.0\n",
-      "Step: 1652 Reward: 4.0\n",
-      "Step: 1657 Reward: 14.0\n",
-      "Step: 1660 Reward: 2.0\n",
-      "Step: 1665 Reward: 14.0\n",
-      "Step: 1670 Reward: 14.0\n",
-      "Step: 1675 Reward: 14.0\n",
-      "Step: 1680 Reward: 14.0\n",
-      "Step: 1683 Reward: 2.0\n",
-      "Step: 1688 Reward: 14.0\n",
-      "Step: 1693 Reward: 14.0\n",
-      "Step: 1698 Reward: 14.0\n",
-      "Step: 1703 Reward: 14.0\n",
+      "Step: 1652 Reward: 14.0\n",
+      "Step: 1654 Reward: 1.0\n",
+      "Step: 1657 Reward: 2.0\n",
+      "Step: 1662 Reward: 14.0\n",
+      "Step: 1667 Reward: 4.0\n",
+      "Step: 1670 Reward: 2.0\n",
+      "Step: 1671 Reward: 0.0\n",
+      "Step: 1674 Reward: 2.0\n",
+      "Step: 1676 Reward: 1.0\n",
+      "Step: 1679 Reward: 2.0\n",
+      "Step: 1682 Reward: 2.0\n",
+      "Step: 1686 Reward: 3.0\n",
+      "Step: 1687 Reward: 0.0\n",
+      "Step: 1692 Reward: 14.0\n",
+      "Step: 1693 Reward: 0.0\n",
+      "Step: 1696 Reward: 2.0\n",
+      "Step: 1699 Reward: 2.0\n",
+      "Step: 1700 Reward: 0.0\n",
+      "Step: 1703 Reward: 2.0\n",
       "Step: 1708 Reward: 14.0\n",
-      "Step: 1713 Reward: 14.0\n",
-      "Step: 1717 Reward: 3.0\n",
-      "Step: 1720 Reward: 2.0\n",
-      "Step: 1725 Reward: 14.0\n",
-      "Step: 1729 Reward: 3.0\n",
-      "Step: 1733 Reward: 3.0\n",
-      "Step: 1736 Reward: 2.0\n",
-      "Step: 1741 Reward: 14.0\n",
-      "Step: 1746 Reward: 14.0\n",
-      "Step: 1751 Reward: 14.0\n",
-      "Step: 1756 Reward: 14.0\n",
+      "Step: 1711 Reward: 2.0\n",
+      "Step: 1716 Reward: 14.0\n",
+      "Step: 1721 Reward: 14.0\n",
+      "Step: 1725 Reward: 3.0\n",
+      "Step: 1730 Reward: 14.0\n",
+      "Step: 1735 Reward: 14.0\n",
+      "Step: 1738 Reward: 2.0\n",
+      "Step: 1743 Reward: 14.0\n",
+      "Step: 1747 Reward: 3.0\n",
+      "Step: 1748 Reward: 0.0\n",
+      "Step: 1749 Reward: 0.0\n",
+      "Step: 1750 Reward: 0.0\n",
+      "Step: 1751 Reward: 0.0\n",
+      "Step: 1756 Reward: 4.0\n",
       "Step: 1761 Reward: 14.0\n",
-      "Step: 1762 Reward: 0.0\n",
-      "Step: 1763 Reward: 0.0\n",
-      "Step: 1766 Reward: 2.0\n",
-      "Step: 1767 Reward: 0.0\n",
-      "Step: 1768 Reward: 0.0\n",
-      "Step: 1773 Reward: 14.0\n",
-      "Step: 1776 Reward: 2.0\n",
-      "Step: 1777 Reward: 0.0\n",
-      "Step: 1782 Reward: 14.0\n",
-      "Step: 1783 Reward: 0.0\n",
-      "Step: 1788 Reward: 14.0\n",
-      "Step: 1789 Reward: 0.0\n",
+      "Step: 1765 Reward: 3.0\n",
+      "Step: 1769 Reward: 3.0\n",
+      "Step: 1774 Reward: 4.0\n",
+      "Step: 1779 Reward: 14.0\n",
+      "Step: 1784 Reward: 14.0\n",
+      "Step: 1789 Reward: 14.0\n",
       "Step: 1794 Reward: 14.0\n",
       "Step: 1799 Reward: 14.0\n",
-      "Step: 1800 Reward: 0.0\n",
-      "Step: 1801 Reward: 0.0\n",
-      "Step: 1806 Reward: 14.0\n",
-      "Step: 1811 Reward: 14.0\n",
-      "Step: 1814 Reward: 2.0\n",
-      "Step: 1819 Reward: 14.0\n",
-      "Step: 1822 Reward: 2.0\n",
-      "Step: 1823 Reward: 0.0\n",
+      "Step: 1802 Reward: 2.0\n",
+      "Step: 1807 Reward: 14.0\n",
+      "Step: 1812 Reward: 14.0\n",
+      "Step: 1814 Reward: 1.0\n",
+      "Step: 1815 Reward: 0.0\n",
+      "Step: 1816 Reward: 0.0\n",
+      "Step: 1819 Reward: 2.0\n",
+      "Step: 1820 Reward: 0.0\n",
+      "Step: 1823 Reward: 2.0\n",
       "Step: 1828 Reward: 14.0\n",
       "Step: 1829 Reward: 0.0\n",
       "Step: 1834 Reward: 14.0\n",
       "Step: 1839 Reward: 14.0\n",
-      "Step: 1844 Reward: 14.0\n",
-      "Step: 1849 Reward: 4.0\n",
-      "Step: 1854 Reward: 14.0\n",
-      "Step: 1859 Reward: 4.0\n",
-      "Step: 1864 Reward: 14.0\n",
-      "Step: 1869 Reward: 14.0\n",
-      "Step: 1874 Reward: 14.0\n",
-      "Step: 1879 Reward: 14.0\n",
-      "Step: 1884 Reward: 14.0\n",
-      "Step: 1885 Reward: 0.0\n",
-      "Step: 1888 Reward: 2.0\n",
+      "Step: 1840 Reward: 0.0\n",
+      "Step: 1845 Reward: 14.0\n",
+      "Step: 1850 Reward: 14.0\n",
+      "Step: 1852 Reward: 1.0\n",
+      "Step: 1854 Reward: 1.0\n",
+      "Step: 1859 Reward: 14.0\n",
+      "Step: 1860 Reward: 0.0\n",
+      "Step: 1865 Reward: 14.0\n",
+      "Step: 1868 Reward: 2.0\n",
+      "Step: 1873 Reward: 14.0\n",
+      "Step: 1876 Reward: 2.0\n",
+      "Step: 1878 Reward: 1.0\n",
+      "Step: 1883 Reward: 14.0\n",
+      "Step: 1888 Reward: 14.0\n",
       "Step: 1893 Reward: 14.0\n",
       "Step: 1898 Reward: 14.0\n",
       "Step: 1903 Reward: 14.0\n",
       "Step: 1908 Reward: 14.0\n",
-      "Step: 1913 Reward: 14.0\n",
-      "Step: 1915 Reward: 1.0\n",
-      "Step: 1919 Reward: 3.0\n",
-      "Step: 1924 Reward: 14.0\n",
-      "Step: 1929 Reward: 14.0\n",
-      "Step: 1934 Reward: 14.0\n",
-      "Step: 1935 Reward: 0.0\n",
+      "Step: 1910 Reward: 1.0\n",
+      "Step: 1915 Reward: 14.0\n",
+      "Step: 1920 Reward: 14.0\n",
+      "Step: 1925 Reward: 14.0\n",
+      "Step: 1930 Reward: 14.0\n",
+      "Step: 1935 Reward: 14.0\n",
       "Step: 1940 Reward: 14.0\n",
-      "Step: 1945 Reward: 14.0\n",
-      "Step: 1946 Reward: 0.0\n",
+      "Step: 1941 Reward: 0.0\n",
+      "Step: 1946 Reward: 14.0\n",
       "Step: 1951 Reward: 14.0\n",
-      "Step: 1952 Reward: 0.0\n",
-      "Step: 1957 Reward: 14.0\n",
-      "Step: 1958 Reward: 0.0\n",
-      "Step: 1959 Reward: 0.0\n",
-      "Step: 1962 Reward: 2.0\n",
-      "Step: 1963 Reward: 0.0\n",
+      "Step: 1953 Reward: 1.0\n",
+      "Step: 1958 Reward: 14.0\n",
+      "Step: 1963 Reward: 14.0\n",
       "Step: 1968 Reward: 14.0\n",
-      "Step: 1972 Reward: 3.0\n",
-      "Step: 1977 Reward: 14.0\n",
-      "Step: 1982 Reward: 4.0\n",
-      "Step: 1986 Reward: 3.0\n",
-      "Step: 1988 Reward: 1.0\n",
-      "Step: 1989 Reward: 0.0\n",
-      "Step: 1990 Reward: 0.0\n",
-      "Step: 1995 Reward: 14.0\n",
-      "Step: 2000 Reward: 14.0\n",
-      "Step: 2003 Reward: 2.0\n",
-      "Step: 2008 Reward: 14.0\n",
-      "Step: 2011 Reward: 2.0\n",
-      "Step: 2016 Reward: 14.0\n",
-      "Step: 2021 Reward: 14.0\n",
-      "Step: 2024 Reward: 2.0\n",
-      "Step: 2029 Reward: 14.0\n",
-      "Step: 2032 Reward: 2.0\n",
-      "Step: 2037 Reward: 14.0\n",
-      "Step: 2042 Reward: 14.0\n",
-      "Step: 2045 Reward: 2.0\n",
-      "Step: 2050 Reward: 14.0\n",
-      "Step: 2055 Reward: 14.0\n",
-      "Step: 2060 Reward: 14.0\n",
+      "Step: 1973 Reward: 14.0\n",
+      "Step: 1974 Reward: 0.0\n",
+      "Step: 1979 Reward: 14.0\n",
+      "Step: 1984 Reward: 14.0\n",
+      "Step: 1989 Reward: 14.0\n",
+      "Step: 1994 Reward: 14.0\n",
+      "Step: 1998 Reward: 3.0\n",
+      "Step: 1999 Reward: 0.0\n",
+      "Step: 2004 Reward: 14.0\n",
+      "Step: 2009 Reward: 14.0\n",
+      "Step: 2012 Reward: 2.0\n",
+      "Step: 2013 Reward: 0.0\n",
+      "Step: 2014 Reward: 0.0\n",
+      "Step: 2019 Reward: 14.0\n",
+      "Step: 2020 Reward: 0.0\n",
+      "Step: 2025 Reward: 14.0\n",
+      "Step: 2028 Reward: 2.0\n",
+      "Step: 2033 Reward: 14.0\n",
+      "Step: 2036 Reward: 2.0\n",
+      "Step: 2040 Reward: 3.0\n",
+      "Step: 2041 Reward: 0.0\n",
+      "Step: 2043 Reward: 1.0\n",
+      "Step: 2048 Reward: 14.0\n",
+      "Step: 2053 Reward: 14.0\n",
+      "Step: 2058 Reward: 4.0\n",
+      "Step: 2059 Reward: 0.0\n",
+      "Step: 2060 Reward: 0.0\n",
       "Step: 2065 Reward: 14.0\n",
-      "Step: 2068 Reward: 2.0\n",
-      "Step: 2070 Reward: 1.0\n",
+      "Step: 2070 Reward: 14.0\n",
       "Step: 2075 Reward: 14.0\n",
       "Step: 2080 Reward: 14.0\n",
-      "Step: 2085 Reward: 14.0\n",
-      "Step: 2086 Reward: 0.0\n",
-      "Step: 2091 Reward: 14.0\n",
-      "Step: 2094 Reward: 2.0\n",
-      "Step: 2099 Reward: 4.0\n",
-      "Step: 2102 Reward: 2.0\n",
+      "Step: 2082 Reward: 1.0\n",
+      "Step: 2087 Reward: 14.0\n",
+      "Step: 2092 Reward: 14.0\n",
+      "Step: 2097 Reward: 14.0\n",
+      "Step: 2102 Reward: 14.0\n",
       "Step: 2105 Reward: 2.0\n",
       "Step: 2110 Reward: 14.0\n",
       "Step: 2113 Reward: 2.0\n",
-      "Step: 2118 Reward: 4.0\n",
-      "Step: 2123 Reward: 14.0\n",
-      "Step: 2128 Reward: 14.0\n",
-      "Step: 2131 Reward: 2.0\n",
-      "Step: 2135 Reward: 3.0\n",
-      "Step: 2140 Reward: 4.0\n",
-      "Step: 2143 Reward: 2.0\n",
-      "Step: 2148 Reward: 14.0\n",
-      "Step: 2151 Reward: 2.0\n",
+      "Step: 2115 Reward: 1.0\n",
+      "Step: 2120 Reward: 14.0\n",
+      "Step: 2125 Reward: 14.0\n",
+      "Step: 2126 Reward: 0.0\n",
+      "Step: 2128 Reward: 1.0\n",
+      "Step: 2129 Reward: 0.0\n",
+      "Step: 2134 Reward: 14.0\n",
+      "Step: 2139 Reward: 14.0\n",
+      "Step: 2142 Reward: 2.0\n",
+      "Step: 2145 Reward: 2.0\n",
+      "Step: 2150 Reward: 14.0\n",
+      "Step: 2151 Reward: 0.0\n",
       "Step: 2154 Reward: 2.0\n",
-      "Step: 2155 Reward: 0.0\n",
-      "Step: 2160 Reward: 14.0\n",
-      "Step: 2165 Reward: 14.0\n",
-      "Step: 2170 Reward: 14.0\n",
-      "Step: 2175 Reward: 14.0\n",
-      "Step: 2178 Reward: 2.0\n",
-      "Step: 2183 Reward: 14.0\n",
-      "Step: 2188 Reward: 14.0\n",
-      "Step: 2193 Reward: 14.0\n",
-      "Step: 2198 Reward: 14.0\n",
-      "Step: 2203 Reward: 14.0\n",
-      "Step: 2204 Reward: 0.0\n",
-      "Step: 2205 Reward: 0.0\n",
-      "Step: 2208 Reward: 2.0\n",
-      "Step: 2213 Reward: 14.0\n",
-      "Step: 2218 Reward: 14.0\n",
-      "Step: 2221 Reward: 2.0\n",
-      "Step: 2226 Reward: 14.0\n",
-      "Step: 2227 Reward: 0.0\n",
-      "Step: 2230 Reward: 2.0\n",
-      "Step: 2235 Reward: 14.0\n",
-      "Step: 2238 Reward: 2.0\n",
-      "Step: 2243 Reward: 14.0\n",
-      "Step: 2248 Reward: 14.0\n",
-      "Step: 2253 Reward: 14.0\n",
-      "Step: 2256 Reward: 2.0\n",
-      "Step: 2261 Reward: 4.0\n",
-      "Step: 2264 Reward: 2.0\n",
-      "Step: 2269 Reward: 4.0\n",
-      "Step: 2274 Reward: 14.0\n",
-      "Step: 2279 Reward: 14.0\n",
-      "Step: 2283 Reward: 3.0\n",
-      "Step: 2284 Reward: 0.0\n",
-      "Step: 2289 Reward: 14.0\n",
-      "Step: 2293 Reward: 3.0\n",
-      "Step: 2298 Reward: 14.0\n",
+      "Step: 2159 Reward: 14.0\n",
+      "Step: 2162 Reward: 2.0\n",
+      "Step: 2167 Reward: 14.0\n",
+      "Step: 2172 Reward: 14.0\n",
+      "Step: 2177 Reward: 14.0\n",
+      "Step: 2182 Reward: 14.0\n",
+      "Step: 2187 Reward: 14.0\n",
+      "Step: 2192 Reward: 14.0\n",
+      "Step: 2197 Reward: 14.0\n",
+      "Step: 2202 Reward: 14.0\n",
+      "Step: 2207 Reward: 14.0\n",
+      "Step: 2212 Reward: 14.0\n",
+      "Step: 2217 Reward: 14.0\n",
+      "Step: 2222 Reward: 14.0\n",
+      "Step: 2227 Reward: 14.0\n",
+      "Step: 2232 Reward: 14.0\n",
+      "Step: 2233 Reward: 0.0\n",
+      "Step: 2234 Reward: 0.0\n",
+      "Step: 2239 Reward: 14.0\n",
+      "Step: 2244 Reward: 14.0\n",
+      "Step: 2245 Reward: 0.0\n",
+      "Step: 2250 Reward: 14.0\n",
+      "Step: 2253 Reward: 2.0\n",
+      "Step: 2258 Reward: 14.0\n",
+      "Step: 2263 Reward: 14.0\n",
+      "Step: 2266 Reward: 2.0\n",
+      "Step: 2271 Reward: 14.0\n",
+      "Step: 2276 Reward: 14.0\n",
+      "Step: 2281 Reward: 14.0\n",
+      "Step: 2286 Reward: 14.0\n",
+      "Step: 2289 Reward: 2.0\n",
+      "Step: 2294 Reward: 14.0\n",
+      "Step: 2297 Reward: 2.0\n",
+      "Step: 2298 Reward: 0.0\n",
       "Step: 2303 Reward: 14.0\n",
-      "Step: 2308 Reward: 14.0\n",
-      "Step: 2313 Reward: 14.0\n",
-      "Step: 2318 Reward: 4.0\n",
-      "Step: 2323 Reward: 14.0\n",
-      "Step: 2328 Reward: 14.0\n",
-      "Step: 2329 Reward: 0.0\n",
-      "Step: 2332 Reward: 2.0\n",
-      "Step: 2333 Reward: 0.0\n",
-      "Step: 2338 Reward: 14.0\n",
-      "Step: 2339 Reward: 0.0\n",
+      "Step: 2304 Reward: 0.0\n",
+      "Step: 2305 Reward: 0.0\n",
+      "Step: 2310 Reward: 14.0\n",
+      "Step: 2315 Reward: 14.0\n",
+      "Step: 2316 Reward: 0.0\n",
+      "Step: 2321 Reward: 14.0\n",
+      "Step: 2324 Reward: 2.0\n",
+      "Step: 2329 Reward: 14.0\n",
+      "Step: 2334 Reward: 14.0\n",
+      "Step: 2339 Reward: 14.0\n",
       "Step: 2344 Reward: 14.0\n",
-      "Step: 2345 Reward: 0.0\n",
-      "Step: 2350 Reward: 14.0\n",
-      "Step: 2355 Reward: 14.0\n",
-      "Step: 2357 Reward: 1.0\n",
-      "Step: 2362 Reward: 14.0\n",
-      "Step: 2367 Reward: 14.0\n",
-      "Step: 2368 Reward: 0.0\n",
-      "Step: 2371 Reward: 2.0\n",
-      "Step: 2376 Reward: 14.0\n",
-      "Step: 2377 Reward: 0.0\n",
-      "Step: 2378 Reward: 0.0\n",
-      "Step: 2380 Reward: 1.0\n",
-      "Step: 2385 Reward: 14.0\n",
-      "Step: 2388 Reward: 2.0\n",
-      "Step: 2393 Reward: 14.0\n",
-      "Step: 2397 Reward: 3.0\n",
-      "Step: 2402 Reward: 14.0\n",
-      "Step: 2407 Reward: 14.0\n",
-      "Step: 2412 Reward: 14.0\n",
-      "Step: 2417 Reward: 14.0\n",
-      "Step: 2422 Reward: 14.0\n",
-      "Step: 2427 Reward: 14.0\n",
-      "Step: 2432 Reward: 14.0\n",
-      "Step: 2433 Reward: 0.0\n"
+      "Step: 2349 Reward: 14.0\n",
+      "Step: 2354 Reward: 14.0\n",
+      "Step: 2359 Reward: 14.0\n",
+      "Step: 2364 Reward: 14.0\n",
+      "Step: 2369 Reward: 14.0\n",
+      "Step: 2374 Reward: 14.0\n",
+      "Step: 2379 Reward: 14.0\n",
+      "Step: 2384 Reward: 14.0\n",
+      "Step: 2389 Reward: 14.0\n",
+      "Step: 2394 Reward: 14.0\n",
+      "Step: 2399 Reward: 14.0\n",
+      "Step: 2404 Reward: 14.0\n",
+      "Step: 2409 Reward: 14.0\n",
+      "Step: 2414 Reward: 14.0\n",
+      "Step: 2419 Reward: 14.0\n",
+      "Step: 2424 Reward: 14.0\n",
+      "Step: 2429 Reward: 14.0\n",
+      "Step: 2434 Reward: 14.0\n",
+      "Step: 2439 Reward: 14.0\n",
+      "Step: 2444 Reward: 14.0\n",
+      "Step: 2449 Reward: 14.0\n",
+      "Step: 2454 Reward: 14.0\n",
+      "Step: 2459 Reward: 14.0\n",
+      "Step: 2464 Reward: 14.0\n",
+      "Step: 2469 Reward: 14.0\n",
+      "Step: 2474 Reward: 14.0\n",
+      "Step: 2479 Reward: 14.0\n",
+      "Step: 2484 Reward: 14.0\n",
+      "Step: 2489 Reward: 14.0\n",
+      "Step: 2494 Reward: 14.0\n",
+      "Step: 2499 Reward: 14.0\n",
+      "Step: 2504 Reward: 14.0\n",
+      "Step: 2509 Reward: 14.0\n",
+      "Step: 2514 Reward: 14.0\n",
+      "Step: 2519 Reward: 14.0\n",
+      "Step: 2524 Reward: 14.0\n",
+      "Step: 2529 Reward: 14.0\n",
+      "Step: 2534 Reward: 14.0\n",
+      "Step: 2539 Reward: 14.0\n",
+      "Step: 2544 Reward: 14.0\n",
+      "Step: 2549 Reward: 14.0\n",
+      "Step: 2554 Reward: 14.0\n",
+      "Step: 2559 Reward: 14.0\n",
+      "Step: 2564 Reward: 14.0\n",
+      "Step: 2569 Reward: 14.0\n",
+      "Step: 2574 Reward: 14.0\n",
+      "Step: 2579 Reward: 14.0\n",
+      "Step: 2584 Reward: 14.0\n",
+      "Step: 2589 Reward: 14.0\n",
+      "Step: 2594 Reward: 14.0\n",
+      "Step: 2599 Reward: 14.0\n",
+      "Step: 2604 Reward: 14.0\n",
+      "Step: 2609 Reward: 14.0\n",
+      "Step: 2614 Reward: 14.0\n",
+      "Step: 2619 Reward: 14.0\n",
+      "Step: 2624 Reward: 14.0\n",
+      "Step: 2629 Reward: 14.0\n",
+      "Step: 2634 Reward: 14.0\n",
+      "Step: 2639 Reward: 14.0\n",
+      "Step: 2644 Reward: 14.0\n",
+      "Step: 2649 Reward: 14.0\n",
+      "Step: 2654 Reward: 14.0\n",
+      "Step: 2659 Reward: 14.0\n",
+      "Step: 2664 Reward: 14.0\n",
+      "Step: 2669 Reward: 14.0\n",
+      "Step: 2674 Reward: 14.0\n",
+      "Step: 2679 Reward: 14.0\n",
+      "Step: 2684 Reward: 14.0\n",
+      "Step: 2689 Reward: 14.0\n",
+      "Step: 2694 Reward: 14.0\n",
+      "Step: 2699 Reward: 14.0\n",
+      "Step: 2704 Reward: 14.0\n",
+      "Step: 2709 Reward: 14.0\n",
+      "Step: 2714 Reward: 14.0\n",
+      "Step: 2719 Reward: 14.0\n",
+      "Step: 2724 Reward: 14.0\n",
+      "Step: 2729 Reward: 14.0\n",
+      "Step: 2734 Reward: 14.0\n",
+      "Step: 2739 Reward: 14.0\n",
+      "Step: 2744 Reward: 14.0\n",
+      "Step: 2749 Reward: 14.0\n",
+      "Step: 2754 Reward: 14.0\n",
+      "Step: 2759 Reward: 14.0\n",
+      "Step: 2764 Reward: 14.0\n",
+      "Step: 2769 Reward: 14.0\n",
+      "Step: 2774 Reward: 14.0\n",
+      "Step: 2779 Reward: 14.0\n",
+      "Step: 2784 Reward: 14.0\n",
+      "Step: 2789 Reward: 14.0\n",
+      "Step: 2794 Reward: 14.0\n",
+      "Step: 2799 Reward: 14.0\n",
+      "Step: 2804 Reward: 14.0\n",
+      "Step: 2809 Reward: 14.0\n",
+      "Step: 2814 Reward: 14.0\n",
+      "Step: 2819 Reward: 14.0\n",
+      "Step: 2824 Reward: 14.0\n",
+      "Step: 2829 Reward: 14.0\n",
+      "Step: 2834 Reward: 14.0\n",
+      "Step: 2839 Reward: 14.0\n",
+      "Step: 2844 Reward: 14.0\n",
+      "Step: 2849 Reward: 14.0\n",
+      "Step: 2854 Reward: 14.0\n",
+      "Step: 2859 Reward: 14.0\n",
+      "Step: 2864 Reward: 14.0\n",
+      "Step: 2869 Reward: 14.0\n",
+      "Step: 2874 Reward: 14.0\n",
+      "Step: 2879 Reward: 14.0\n",
+      "Step: 2884 Reward: 14.0\n",
+      "Step: 2889 Reward: 14.0\n",
+      "Step: 2894 Reward: 14.0\n",
+      "Step: 2899 Reward: 14.0\n",
+      "Step: 2904 Reward: 14.0\n",
+      "Step: 2909 Reward: 14.0\n",
+      "Step: 2914 Reward: 14.0\n",
+      "Step: 2919 Reward: 14.0\n",
+      "Step: 2924 Reward: 14.0\n",
+      "Step: 2929 Reward: 14.0\n",
+      "Step: 2934 Reward: 14.0\n",
+      "Step: 2939 Reward: 14.0\n",
+      "Step: 2944 Reward: 14.0\n",
+      "Step: 2949 Reward: 14.0\n",
+      "Step: 2954 Reward: 14.0\n",
+      "Step: 2959 Reward: 14.0\n",
+      "Step: 2964 Reward: 14.0\n",
+      "Step: 2969 Reward: 14.0\n",
+      "Step: 2974 Reward: 14.0\n",
+      "Step: 2979 Reward: 14.0\n",
+      "Step: 2984 Reward: 14.0\n",
+      "Step: 2989 Reward: 14.0\n",
+      "Step: 2994 Reward: 14.0\n",
+      "Step: 2999 Reward: 14.0\n",
+      "Step: 3004 Reward: 14.0\n",
+      "Step: 3009 Reward: 14.0\n",
+      "Step: 3014 Reward: 14.0\n",
+      "Step: 3019 Reward: 14.0\n",
+      "Step: 3024 Reward: 14.0\n",
+      "Step: 3029 Reward: 14.0\n",
+      "Step: 3034 Reward: 14.0\n",
+      "Step: 3039 Reward: 14.0\n",
+      "Step: 3044 Reward: 14.0\n",
+      "Step: 3049 Reward: 14.0\n",
+      "Step: 3054 Reward: 14.0\n",
+      "Step: 3059 Reward: 14.0\n",
+      "Step: 3064 Reward: 14.0\n",
+      "Step: 3069 Reward: 14.0\n",
+      "Step: 3074 Reward: 14.0\n",
+      "Step: 3079 Reward: 14.0\n",
+      "Step: 3084 Reward: 14.0\n",
+      "Step: 3089 Reward: 14.0\n",
+      "Step: 3094 Reward: 14.0\n",
+      "Step: 3099 Reward: 14.0\n",
+      "Step: 3104 Reward: 14.0\n",
+      "Step: 3109 Reward: 14.0\n",
+      "Step: 3114 Reward: 14.0\n",
+      "Step: 3119 Reward: 14.0\n",
+      "Step: 3124 Reward: 14.0\n",
+      "Step: 3129 Reward: 14.0\n",
+      "Step: 3134 Reward: 14.0\n",
+      "Step: 3139 Reward: 14.0\n",
+      "Step: 3144 Reward: 14.0\n",
+      "Step: 3149 Reward: 14.0\n",
+      "Step: 3154 Reward: 14.0\n",
+      "Step: 3159 Reward: 14.0\n",
+      "Step: 3164 Reward: 14.0\n",
+      "Step: 3169 Reward: 14.0\n",
+      "Step: 3174 Reward: 14.0\n",
+      "Step: 3179 Reward: 14.0\n",
+      "Step: 3184 Reward: 14.0\n",
+      "Step: 3189 Reward: 14.0\n",
+      "Step: 3194 Reward: 14.0\n",
+      "Step: 3199 Reward: 14.0\n",
+      "Step: 3204 Reward: 14.0\n",
+      "Step: 3209 Reward: 14.0\n",
+      "Step: 3214 Reward: 14.0\n",
+      "Step: 3219 Reward: 14.0\n",
+      "Step: 3224 Reward: 14.0\n",
+      "Step: 3229 Reward: 14.0\n",
+      "Step: 3234 Reward: 14.0\n",
+      "Step: 3239 Reward: 14.0\n",
+      "Step: 3244 Reward: 14.0\n",
+      "Step: 3249 Reward: 14.0\n",
+      "Step: 3254 Reward: 14.0\n",
+      "Step: 3259 Reward: 14.0\n",
+      "Step: 3264 Reward: 14.0\n",
+      "Step: 3269 Reward: 14.0\n",
+      "Step: 3274 Reward: 14.0\n",
+      "Step: 3279 Reward: 14.0\n",
+      "Step: 3284 Reward: 14.0\n",
+      "Step: 3289 Reward: 14.0\n",
+      "Step: 3294 Reward: 14.0\n",
+      "Step: 3299 Reward: 14.0\n",
+      "Step: 3304 Reward: 14.0\n",
+      "Step: 3309 Reward: 14.0\n",
+      "Step: 3314 Reward: 14.0\n",
+      "Step: 3319 Reward: 14.0\n",
+      "Step: 3324 Reward: 14.0\n",
+      "Step: 3329 Reward: 14.0\n",
+      "Step: 3334 Reward: 14.0\n",
+      "Step: 3339 Reward: 14.0\n",
+      "Step: 3344 Reward: 14.0\n",
+      "Step: 3349 Reward: 14.0\n",
+      "Step: 3354 Reward: 14.0\n",
+      "Step: 3359 Reward: 14.0\n",
+      "Step: 3364 Reward: 14.0\n",
+      "Step: 3369 Reward: 14.0\n",
+      "Step: 3374 Reward: 14.0\n",
+      "Step: 3379 Reward: 14.0\n",
+      "Step: 3384 Reward: 14.0\n",
+      "Step: 3389 Reward: 14.0\n",
+      "Step: 3394 Reward: 14.0\n",
+      "Step: 3399 Reward: 14.0\n",
+      "Step: 3404 Reward: 14.0\n",
+      "Step: 3409 Reward: 14.0\n",
+      "Step: 3414 Reward: 14.0\n",
+      "Step: 3419 Reward: 14.0\n",
+      "Step: 3424 Reward: 14.0\n",
+      "Step: 3429 Reward: 14.0\n",
+      "Step: 3434 Reward: 14.0\n",
+      "Step: 3439 Reward: 14.0\n",
+      "Step: 3444 Reward: 14.0\n",
+      "Step: 3449 Reward: 14.0\n",
+      "Step: 3454 Reward: 14.0\n",
+      "Step: 3459 Reward: 14.0\n",
+      "Step: 3464 Reward: 14.0\n",
+      "Step: 3469 Reward: 14.0\n",
+      "Step: 3474 Reward: 14.0\n",
+      "Step: 3479 Reward: 14.0\n",
+      "Step: 3484 Reward: 14.0\n",
+      "Step: 3489 Reward: 14.0\n",
+      "Step: 3494 Reward: 14.0\n",
+      "Step: 3499 Reward: 14.0\n",
+      "Step: 3504 Reward: 14.0\n",
+      "Step: 3509 Reward: 14.0\n",
+      "Step: 3514 Reward: 14.0\n",
+      "Step: 3519 Reward: 14.0\n",
+      "Step: 3524 Reward: 14.0\n",
+      "Step: 3529 Reward: 14.0\n",
+      "Step: 3534 Reward: 14.0\n",
+      "Step: 3539 Reward: 14.0\n",
+      "Step: 3544 Reward: 14.0\n",
+      "Step: 3549 Reward: 14.0\n",
+      "Step: 3554 Reward: 14.0\n",
+      "Step: 3559 Reward: 14.0\n",
+      "Step: 3564 Reward: 14.0\n",
+      "Step: 3569 Reward: 14.0\n",
+      "Step: 3574 Reward: 14.0\n",
+      "Step: 3579 Reward: 14.0\n",
+      "Step: 3584 Reward: 14.0\n",
+      "Step: 3589 Reward: 14.0\n",
+      "Step: 3594 Reward: 14.0\n",
+      "Step: 3599 Reward: 14.0\n",
+      "Step: 3604 Reward: 14.0\n",
+      "Step: 3609 Reward: 14.0\n",
+      "Step: 3614 Reward: 14.0\n",
+      "Step: 3619 Reward: 14.0\n",
+      "Step: 3624 Reward: 14.0\n",
+      "Step: 3629 Reward: 14.0\n",
+      "Step: 3634 Reward: 14.0\n",
+      "Step: 3639 Reward: 14.0\n",
+      "Step: 3644 Reward: 14.0\n",
+      "Step: 3649 Reward: 14.0\n",
+      "Step: 3654 Reward: 14.0\n",
+      "Step: 3659 Reward: 14.0\n",
+      "Step: 3664 Reward: 14.0\n",
+      "Step: 3669 Reward: 14.0\n",
+      "Step: 3674 Reward: 14.0\n",
+      "Step: 3679 Reward: 14.0\n",
+      "Step: 3684 Reward: 14.0\n",
+      "Step: 3689 Reward: 14.0\n",
+      "Step: 3694 Reward: 14.0\n",
+      "Step: 3699 Reward: 14.0\n",
+      "Step: 3704 Reward: 14.0\n",
+      "Step: 3709 Reward: 14.0\n",
+      "Step: 3714 Reward: 14.0\n",
+      "Step: 3719 Reward: 14.0\n",
+      "Step: 3724 Reward: 14.0\n",
+      "Step: 3729 Reward: 14.0\n",
+      "Step: 3734 Reward: 14.0\n",
+      "Step: 3739 Reward: 14.0\n",
+      "Step: 3744 Reward: 14.0\n",
+      "Step: 3749 Reward: 14.0\n",
+      "Step: 3754 Reward: 14.0\n",
+      "Step: 3759 Reward: 14.0\n",
+      "Step: 3764 Reward: 14.0\n",
+      "Step: 3769 Reward: 14.0\n",
+      "Step: 3774 Reward: 14.0\n",
+      "Step: 3779 Reward: 14.0\n",
+      "Step: 3784 Reward: 14.0\n",
+      "Step: 3789 Reward: 14.0\n",
+      "Step: 3794 Reward: 14.0\n",
+      "Step: 3799 Reward: 14.0\n",
+      "Step: 3804 Reward: 14.0\n",
+      "Step: 3809 Reward: 14.0\n",
+      "Step: 3814 Reward: 14.0\n",
+      "Step: 3819 Reward: 14.0\n",
+      "Step: 3824 Reward: 14.0\n",
+      "Step: 3829 Reward: 14.0\n",
+      "Step: 3834 Reward: 14.0\n",
+      "Step: 3839 Reward: 14.0\n",
+      "Step: 3844 Reward: 14.0\n",
+      "Step: 3849 Reward: 14.0\n",
+      "Step: 3854 Reward: 14.0\n",
+      "Step: 3859 Reward: 14.0\n",
+      "Step: 3864 Reward: 14.0\n",
+      "Step: 3869 Reward: 14.0\n",
+      "Step: 3874 Reward: 14.0\n",
+      "Step: 3879 Reward: 14.0\n",
+      "Step: 3884 Reward: 14.0\n",
+      "Step: 3889 Reward: 14.0\n",
+      "Step: 3894 Reward: 14.0\n",
+      "Step: 3899 Reward: 14.0\n",
+      "Step: 3904 Reward: 14.0\n",
+      "Step: 3909 Reward: 14.0\n",
+      "Step: 3914 Reward: 14.0\n",
+      "Step: 3919 Reward: 14.0\n",
+      "Step: 3924 Reward: 14.0\n",
+      "Step: 3929 Reward: 14.0\n",
+      "Step: 3934 Reward: 14.0\n",
+      "Step: 3939 Reward: 14.0\n",
+      "Step: 3944 Reward: 14.0\n",
+      "Step: 3949 Reward: 14.0\n",
+      "Step: 3954 Reward: 14.0\n",
+      "Step: 3959 Reward: 14.0\n",
+      "Step: 3964 Reward: 14.0\n",
+      "Step: 3969 Reward: 14.0\n",
+      "Step: 3974 Reward: 14.0\n",
+      "Step: 3979 Reward: 14.0\n",
+      "Step: 3984 Reward: 14.0\n",
+      "Step: 3989 Reward: 14.0\n",
+      "Step: 3994 Reward: 14.0\n",
+      "Step: 3999 Reward: 14.0\n",
+      "Step: 4004 Reward: 14.0\n",
+      "Step: 4009 Reward: 14.0\n",
+      "Step: 4014 Reward: 14.0\n",
+      "Step: 4019 Reward: 14.0\n",
+      "Step: 4024 Reward: 14.0\n",
+      "Step: 4029 Reward: 14.0\n",
+      "Step: 4034 Reward: 14.0\n",
+      "Step: 4039 Reward: 14.0\n",
+      "Step: 4044 Reward: 14.0\n",
+      "Step: 4049 Reward: 14.0\n",
+      "Step: 4054 Reward: 14.0\n",
+      "Step: 4059 Reward: 14.0\n",
+      "Step: 4064 Reward: 14.0\n",
+      "Step: 4069 Reward: 14.0\n",
+      "Step: 4074 Reward: 14.0\n",
+      "Step: 4079 Reward: 14.0\n",
+      "Step: 4084 Reward: 14.0\n",
+      "Step: 4089 Reward: 14.0\n",
+      "Step: 4094 Reward: 14.0\n",
+      "Step: 4099 Reward: 14.0\n",
+      "Step: 4104 Reward: 14.0\n",
+      "Step: 4109 Reward: 14.0\n",
+      "Step: 4114 Reward: 14.0\n",
+      "Step: 4119 Reward: 14.0\n",
+      "Step: 4124 Reward: 14.0\n",
+      "Step: 4129 Reward: 14.0\n",
+      "Step: 4134 Reward: 14.0\n",
+      "Step: 4139 Reward: 14.0\n",
+      "Step: 4144 Reward: 14.0\n",
+      "Step: 4149 Reward: 14.0\n",
+      "Step: 4154 Reward: 14.0\n",
+      "Step: 4159 Reward: 14.0\n",
+      "Step: 4164 Reward: 14.0\n",
+      "Step: 4169 Reward: 14.0\n",
+      "Step: 4174 Reward: 14.0\n",
+      "Step: 4179 Reward: 14.0\n",
+      "Step: 4184 Reward: 14.0\n",
+      "Step: 4189 Reward: 14.0\n",
+      "Step: 4194 Reward: 14.0\n",
+      "Step: 4199 Reward: 14.0\n",
+      "Step: 4204 Reward: 14.0\n",
+      "Step: 4209 Reward: 14.0\n",
+      "Step: 4214 Reward: 14.0\n",
+      "Step: 4219 Reward: 14.0\n",
+      "Step: 4224 Reward: 14.0\n",
+      "Step: 4229 Reward: 14.0\n",
+      "Step: 4234 Reward: 14.0\n",
+      "Step: 4239 Reward: 14.0\n",
+      "Step: 4244 Reward: 14.0\n",
+      "Step: 4249 Reward: 14.0\n",
+      "Step: 4254 Reward: 14.0\n",
+      "Step: 4259 Reward: 14.0\n",
+      "Step: 4264 Reward: 14.0\n",
+      "Step: 4269 Reward: 14.0\n",
+      "Step: 4274 Reward: 14.0\n",
+      "Step: 4279 Reward: 14.0\n",
+      "Step: 4284 Reward: 14.0\n",
+      "Step: 4289 Reward: 14.0\n",
+      "Step: 4294 Reward: 14.0\n",
+      "Step: 4299 Reward: 14.0\n",
+      "Step: 4304 Reward: 14.0\n",
+      "Step: 4309 Reward: 14.0\n",
+      "Step: 4314 Reward: 14.0\n",
+      "Step: 4319 Reward: 14.0\n",
+      "Step: 4324 Reward: 14.0\n",
+      "Step: 4329 Reward: 14.0\n",
+      "Step: 4334 Reward: 14.0\n",
+      "Step: 4339 Reward: 14.0\n",
+      "Step: 4344 Reward: 14.0\n",
+      "Step: 4349 Reward: 14.0\n",
+      "Step: 4354 Reward: 14.0\n",
+      "Step: 4359 Reward: 14.0\n",
+      "Step: 4364 Reward: 14.0\n",
+      "Step: 4369 Reward: 14.0\n",
+      "Step: 4374 Reward: 14.0\n",
+      "Step: 4379 Reward: 14.0\n",
+      "Step: 4384 Reward: 14.0\n",
+      "Step: 4389 Reward: 14.0\n",
+      "Step: 4394 Reward: 14.0\n",
+      "Step: 4399 Reward: 14.0\n",
+      "Step: 4404 Reward: 14.0\n",
+      "Step: 4409 Reward: 14.0\n",
+      "Step: 4414 Reward: 14.0\n",
+      "Step: 4419 Reward: 14.0\n",
+      "Step: 4424 Reward: 14.0\n",
+      "Step: 4429 Reward: 14.0\n",
+      "Step: 4434 Reward: 14.0\n",
+      "Step: 4439 Reward: 14.0\n",
+      "Step: 4444 Reward: 14.0\n",
+      "Step: 4449 Reward: 14.0\n",
+      "Step: 4454 Reward: 14.0\n",
+      "Step: 4459 Reward: 14.0\n",
+      "Step: 4464 Reward: 14.0\n",
+      "Step: 4469 Reward: 14.0\n",
+      "Step: 4474 Reward: 14.0\n",
+      "Step: 4479 Reward: 14.0\n",
+      "Step: 4484 Reward: 14.0\n",
+      "Step: 4489 Reward: 14.0\n",
+      "Step: 4494 Reward: 14.0\n",
+      "Step: 4499 Reward: 14.0\n",
+      "Step: 4504 Reward: 14.0\n",
+      "Step: 4509 Reward: 14.0\n",
+      "Step: 4514 Reward: 14.0\n",
+      "Step: 4519 Reward: 14.0\n",
+      "Step: 4524 Reward: 14.0\n",
+      "Step: 4529 Reward: 14.0\n",
+      "Step: 4534 Reward: 14.0\n",
+      "Step: 4539 Reward: 14.0\n",
+      "Step: 4544 Reward: 14.0\n",
+      "Step: 4549 Reward: 14.0\n",
+      "Step: 4554 Reward: 14.0\n",
+      "Step: 4559 Reward: 14.0\n",
+      "Step: 4564 Reward: 14.0\n",
+      "Step: 4569 Reward: 14.0\n",
+      "Step: 4574 Reward: 14.0\n",
+      "Step: 4579 Reward: 14.0\n",
+      "Step: 4584 Reward: 14.0\n",
+      "Step: 4589 Reward: 14.0\n",
+      "Step: 4594 Reward: 14.0\n",
+      "Step: 4599 Reward: 14.0\n",
+      "Step: 4604 Reward: 14.0\n",
+      "Step: 4609 Reward: 14.0\n",
+      "Step: 4614 Reward: 14.0\n",
+      "Step: 4619 Reward: 14.0\n",
+      "Step: 4624 Reward: 14.0\n",
+      "Step: 4629 Reward: 14.0\n",
+      "Step: 4634 Reward: 14.0\n",
+      "Step: 4639 Reward: 14.0\n",
+      "Step: 4644 Reward: 14.0\n",
+      "Step: 4649 Reward: 14.0\n",
+      "Step: 4654 Reward: 14.0\n",
+      "Step: 4659 Reward: 14.0\n",
+      "Step: 4664 Reward: 14.0\n",
+      "Step: 4669 Reward: 14.0\n",
+      "Step: 4674 Reward: 14.0\n",
+      "Step: 4679 Reward: 14.0\n",
+      "Step: 4684 Reward: 14.0\n",
+      "Step: 4689 Reward: 14.0\n",
+      "Step: 4694 Reward: 14.0\n",
+      "Step: 4699 Reward: 14.0\n",
+      "Step: 4704 Reward: 14.0\n",
+      "Step: 4709 Reward: 14.0\n",
+      "Step: 4714 Reward: 14.0\n",
+      "Step: 4719 Reward: 14.0\n",
+      "Step: 4724 Reward: 14.0\n",
+      "Step: 4729 Reward: 14.0\n",
+      "Step: 4734 Reward: 14.0\n",
+      "Step: 4739 Reward: 14.0\n",
+      "Step: 4744 Reward: 14.0\n",
+      "Step: 4749 Reward: 14.0\n",
+      "Step: 4754 Reward: 14.0\n",
+      "Step: 4759 Reward: 14.0\n",
+      "Step: 4764 Reward: 14.0\n",
+      "Step: 4769 Reward: 14.0\n",
+      "Step: 4774 Reward: 14.0\n",
+      "Step: 4779 Reward: 14.0\n",
+      "Step: 4784 Reward: 14.0\n",
+      "Step: 4789 Reward: 14.0\n",
+      "Step: 4794 Reward: 14.0\n",
+      "Step: 4799 Reward: 14.0\n",
+      "Step: 4804 Reward: 14.0\n",
+      "Step: 4809 Reward: 14.0\n",
+      "Step: 4814 Reward: 14.0\n",
+      "Step: 4819 Reward: 14.0\n",
+      "Step: 4824 Reward: 14.0\n",
+      "Step: 4829 Reward: 14.0\n",
+      "Step: 4834 Reward: 14.0\n",
+      "Step: 4839 Reward: 14.0\n",
+      "Step: 4844 Reward: 14.0\n",
+      "Step: 4849 Reward: 14.0\n",
+      "Step: 4854 Reward: 14.0\n",
+      "Step: 4859 Reward: 14.0\n",
+      "Step: 4864 Reward: 14.0\n",
+      "Step: 4869 Reward: 14.0\n",
+      "Step: 4874 Reward: 14.0\n",
+      "Step: 4879 Reward: 14.0\n",
+      "Step: 4884 Reward: 14.0\n",
+      "Step: 4889 Reward: 14.0\n",
+      "Step: 4894 Reward: 14.0\n",
+      "Step: 4899 Reward: 14.0\n",
+      "Step: 4904 Reward: 14.0\n",
+      "Step: 4909 Reward: 14.0\n",
+      "Step: 4914 Reward: 14.0\n",
+      "Step: 4919 Reward: 14.0\n",
+      "Step: 4924 Reward: 14.0\n",
+      "Step: 4929 Reward: 14.0\n",
+      "Step: 4934 Reward: 14.0\n",
+      "Step: 4939 Reward: 14.0\n",
+      "Step: 4944 Reward: 14.0\n",
+      "Step: 4949 Reward: 14.0\n",
+      "Step: 4954 Reward: 14.0\n",
+      "Step: 4959 Reward: 14.0\n",
+      "Step: 4964 Reward: 14.0\n",
+      "Step: 4969 Reward: 14.0\n",
+      "Step: 4974 Reward: 14.0\n",
+      "Step: 4979 Reward: 14.0\n",
+      "Step: 4984 Reward: 14.0\n",
+      "Step: 4989 Reward: 14.0\n",
+      "Step: 4994 Reward: 14.0\n",
+      "Step: 4999 Reward: 14.0\n",
+      "Step: 5004 Reward: 14.0\n",
+      "Step: 5009 Reward: 14.0\n",
+      "Step: 5014 Reward: 14.0\n",
+      "Step: 5019 Reward: 14.0\n",
+      "Step: 5024 Reward: 14.0\n",
+      "Step: 5029 Reward: 14.0\n",
+      "Step: 5034 Reward: 14.0\n",
+      "Step: 5039 Reward: 14.0\n",
+      "Step: 5044 Reward: 14.0\n",
+      "Step: 5049 Reward: 14.0\n",
+      "Step: 5054 Reward: 14.0\n",
+      "Step: 5059 Reward: 14.0\n",
+      "Step: 5064 Reward: 14.0\n",
+      "Step: 5069 Reward: 14.0\n",
+      "Step: 5074 Reward: 14.0\n",
+      "Step: 5079 Reward: 14.0\n",
+      "Step: 5084 Reward: 14.0\n",
+      "Step: 5089 Reward: 14.0\n",
+      "Step: 5094 Reward: 14.0\n",
+      "Step: 5099 Reward: 14.0\n",
+      "Step: 5104 Reward: 14.0\n",
+      "Step: 5109 Reward: 14.0\n",
+      "Step: 5114 Reward: 14.0\n",
+      "Step: 5119 Reward: 14.0\n",
+      "Step: 5124 Reward: 14.0\n",
+      "Step: 5129 Reward: 14.0\n",
+      "Step: 5134 Reward: 14.0\n",
+      "Step: 5139 Reward: 14.0\n",
+      "Step: 5144 Reward: 14.0\n",
+      "Step: 5149 Reward: 14.0\n",
+      "Step: 5154 Reward: 14.0\n",
+      "Step: 5159 Reward: 14.0\n",
+      "Step: 5164 Reward: 14.0\n",
+      "Step: 5169 Reward: 14.0\n",
+      "Step: 5174 Reward: 14.0\n",
+      "Step: 5179 Reward: 14.0\n",
+      "Step: 5184 Reward: 14.0\n",
+      "Step: 5189 Reward: 14.0\n",
+      "Step: 5194 Reward: 14.0\n",
+      "Step: 5199 Reward: 14.0\n",
+      "Step: 5204 Reward: 14.0\n",
+      "Step: 5209 Reward: 14.0\n",
+      "Step: 5214 Reward: 14.0\n",
+      "Step: 5219 Reward: 14.0\n",
+      "Step: 5224 Reward: 14.0\n",
+      "Step: 5229 Reward: 14.0\n",
+      "Step: 5234 Reward: 14.0\n",
+      "Step: 5239 Reward: 14.0\n",
+      "Step: 5244 Reward: 14.0\n",
+      "Step: 5249 Reward: 14.0\n",
+      "Step: 5254 Reward: 14.0\n",
+      "Step: 5259 Reward: 14.0\n",
+      "Step: 5264 Reward: 14.0\n",
+      "Step: 5269 Reward: 14.0\n",
+      "Step: 5274 Reward: 14.0\n",
+      "Step: 5279 Reward: 14.0\n",
+      "Step: 5284 Reward: 14.0\n",
+      "Step: 5289 Reward: 14.0\n",
+      "Step: 5294 Reward: 14.0\n",
+      "Step: 5299 Reward: 14.0\n",
+      "Step: 5304 Reward: 14.0\n",
+      "Step: 5309 Reward: 14.0\n",
+      "Step: 5314 Reward: 14.0\n",
+      "Step: 5319 Reward: 14.0\n",
+      "Step: 5324 Reward: 14.0\n",
+      "Step: 5329 Reward: 14.0\n",
+      "Step: 5334 Reward: 14.0\n",
+      "Step: 5339 Reward: 14.0\n",
+      "Step: 5344 Reward: 14.0\n",
+      "Step: 5349 Reward: 14.0\n",
+      "Step: 5354 Reward: 14.0\n",
+      "Step: 5359 Reward: 14.0\n",
+      "Step: 5364 Reward: 14.0\n",
+      "Step: 5369 Reward: 14.0\n",
+      "Step: 5374 Reward: 14.0\n",
+      "Step: 5379 Reward: 14.0\n",
+      "Step: 5384 Reward: 14.0\n",
+      "Step: 5389 Reward: 14.0\n",
+      "Step: 5394 Reward: 14.0\n",
+      "Step: 5399 Reward: 14.0\n",
+      "Step: 5404 Reward: 14.0\n",
+      "Step: 5409 Reward: 14.0\n",
+      "Step: 5414 Reward: 14.0\n",
+      "Step: 5419 Reward: 14.0\n",
+      "Step: 5424 Reward: 14.0\n",
+      "Step: 5429 Reward: 14.0\n",
+      "Step: 5434 Reward: 14.0\n",
+      "Step: 5439 Reward: 14.0\n",
+      "Step: 5444 Reward: 14.0\n",
+      "Step: 5449 Reward: 14.0\n",
+      "Step: 5454 Reward: 14.0\n",
+      "Step: 5459 Reward: 14.0\n",
+      "Step: 5464 Reward: 14.0\n",
+      "Step: 5469 Reward: 14.0\n",
+      "Step: 5474 Reward: 14.0\n",
+      "Step: 5479 Reward: 14.0\n",
+      "Step: 5484 Reward: 14.0\n",
+      "Step: 5489 Reward: 14.0\n",
+      "Step: 5494 Reward: 14.0\n",
+      "Step: 5499 Reward: 14.0\n",
+      "Step: 5504 Reward: 14.0\n",
+      "Step: 5509 Reward: 14.0\n",
+      "Step: 5514 Reward: 14.0\n",
+      "Step: 5519 Reward: 14.0\n",
+      "Step: 5524 Reward: 14.0\n",
+      "Step: 5529 Reward: 14.0\n",
+      "Step: 5534 Reward: 14.0\n",
+      "Step: 5539 Reward: 14.0\n",
+      "Step: 5544 Reward: 14.0\n",
+      "Step: 5549 Reward: 14.0\n",
+      "Step: 5554 Reward: 14.0\n",
+      "Step: 5559 Reward: 14.0\n",
+      "Step: 5564 Reward: 14.0\n",
+      "Step: 5569 Reward: 14.0\n",
+      "Step: 5574 Reward: 14.0\n",
+      "Step: 5579 Reward: 14.0\n",
+      "Step: 5584 Reward: 14.0\n",
+      "Step: 5589 Reward: 14.0\n",
+      "Step: 5594 Reward: 14.0\n",
+      "Step: 5599 Reward: 14.0\n",
+      "Step: 5604 Reward: 14.0\n",
+      "Step: 5609 Reward: 14.0\n",
+      "Step: 5614 Reward: 14.0\n",
+      "Step: 5619 Reward: 14.0\n",
+      "Step: 5624 Reward: 14.0\n",
+      "Step: 5629 Reward: 14.0\n",
+      "Step: 5634 Reward: 14.0\n",
+      "Step: 5639 Reward: 14.0\n",
+      "Step: 5644 Reward: 14.0\n",
+      "Step: 5649 Reward: 14.0\n",
+      "Step: 5654 Reward: 14.0\n",
+      "Step: 5659 Reward: 14.0\n",
+      "Step: 5664 Reward: 14.0\n",
+      "Step: 5669 Reward: 14.0\n",
+      "Step: 5674 Reward: 14.0\n",
+      "Step: 5679 Reward: 14.0\n",
+      "Step: 5684 Reward: 14.0\n",
+      "Step: 5689 Reward: 14.0\n",
+      "Step: 5694 Reward: 14.0\n",
+      "Step: 5699 Reward: 14.0\n",
+      "Step: 5704 Reward: 14.0\n",
+      "Step: 5709 Reward: 14.0\n",
+      "Step: 5714 Reward: 14.0\n",
+      "Step: 5719 Reward: 14.0\n",
+      "Step: 5724 Reward: 14.0\n",
+      "Step: 5729 Reward: 14.0\n",
+      "Step: 5734 Reward: 14.0\n",
+      "Step: 5739 Reward: 14.0\n",
+      "Step: 5744 Reward: 14.0\n",
+      "Step: 5749 Reward: 14.0\n",
+      "Step: 5754 Reward: 14.0\n",
+      "Step: 5759 Reward: 14.0\n",
+      "Step: 5764 Reward: 14.0\n",
+      "Step: 5769 Reward: 14.0\n",
+      "Step: 5774 Reward: 14.0\n",
+      "Step: 5779 Reward: 14.0\n",
+      "Step: 5784 Reward: 14.0\n",
+      "Step: 5789 Reward: 14.0\n",
+      "Step: 5794 Reward: 14.0\n",
+      "Step: 5799 Reward: 14.0\n",
+      "Step: 5804 Reward: 14.0\n",
+      "Step: 5809 Reward: 14.0\n",
+      "Step: 5814 Reward: 14.0\n",
+      "Step: 5819 Reward: 14.0\n",
+      "Step: 5824 Reward: 14.0\n",
+      "Step: 5829 Reward: 14.0\n",
+      "Step: 5834 Reward: 14.0\n",
+      "Step: 5839 Reward: 14.0\n",
+      "Step: 5844 Reward: 14.0\n",
+      "Step: 5849 Reward: 14.0\n",
+      "Step: 5854 Reward: 14.0\n",
+      "Step: 5859 Reward: 14.0\n",
+      "Step: 5864 Reward: 14.0\n",
+      "Step: 5869 Reward: 14.0\n",
+      "Step: 5874 Reward: 14.0\n",
+      "Step: 5879 Reward: 14.0\n",
+      "Step: 5884 Reward: 14.0\n",
+      "Step: 5889 Reward: 14.0\n",
+      "Step: 5894 Reward: 14.0\n",
+      "Step: 5899 Reward: 14.0\n",
+      "Step: 5904 Reward: 14.0\n",
+      "Step: 5909 Reward: 14.0\n",
+      "Step: 5914 Reward: 14.0\n",
+      "Step: 5919 Reward: 14.0\n",
+      "Step: 5924 Reward: 14.0\n",
+      "Step: 5929 Reward: 14.0\n",
+      "Step: 5934 Reward: 14.0\n",
+      "Step: 5939 Reward: 14.0\n",
+      "Step: 5944 Reward: 14.0\n",
+      "Step: 5949 Reward: 14.0\n",
+      "Step: 5954 Reward: 14.0\n",
+      "Step: 5959 Reward: 14.0\n",
+      "Step: 5964 Reward: 14.0\n",
+      "Step: 5969 Reward: 14.0\n",
+      "Step: 5974 Reward: 14.0\n",
+      "Step: 5979 Reward: 14.0\n",
+      "Step: 5984 Reward: 14.0\n",
+      "Step: 5989 Reward: 14.0\n",
+      "Step: 5994 Reward: 14.0\n",
+      "Step: 5999 Reward: 14.0\n",
+      "Step: 6004 Reward: 14.0\n",
+      "Step: 6009 Reward: 14.0\n",
+      "Step: 6014 Reward: 14.0\n",
+      "Step: 6019 Reward: 14.0\n",
+      "Step: 6024 Reward: 14.0\n",
+      "Step: 6029 Reward: 14.0\n",
+      "Step: 6034 Reward: 14.0\n",
+      "Step: 6039 Reward: 14.0\n",
+      "Step: 6044 Reward: 14.0\n",
+      "Step: 6049 Reward: 14.0\n",
+      "Step: 6054 Reward: 14.0\n",
+      "Step: 6059 Reward: 14.0\n",
+      "Step: 6064 Reward: 14.0\n",
+      "Step: 6069 Reward: 14.0\n",
+      "Step: 6074 Reward: 14.0\n",
+      "Step: 6079 Reward: 14.0\n",
+      "Step: 6084 Reward: 14.0\n",
+      "Step: 6089 Reward: 14.0\n",
+      "Step: 6094 Reward: 14.0\n",
+      "Step: 6099 Reward: 14.0\n",
+      "Step: 6104 Reward: 14.0\n",
+      "Step: 6109 Reward: 14.0\n",
+      "Step: 6114 Reward: 14.0\n",
+      "Step: 6119 Reward: 14.0\n",
+      "Step: 6124 Reward: 14.0\n",
+      "Step: 6129 Reward: 14.0\n",
+      "Step: 6134 Reward: 14.0\n",
+      "Step: 6139 Reward: 14.0\n",
+      "Step: 6144 Reward: 14.0\n",
+      "Step: 6149 Reward: 14.0\n",
+      "Step: 6154 Reward: 14.0\n",
+      "Step: 6159 Reward: 14.0\n",
+      "Step: 6164 Reward: 14.0\n",
+      "Step: 6169 Reward: 14.0\n",
+      "Step: 6174 Reward: 14.0\n",
+      "Step: 6179 Reward: 14.0\n",
+      "Step: 6184 Reward: 14.0\n",
+      "Step: 6189 Reward: 14.0\n",
+      "Step: 6194 Reward: 14.0\n",
+      "Step: 6199 Reward: 14.0\n",
+      "Step: 6204 Reward: 14.0\n",
+      "Step: 6209 Reward: 14.0\n",
+      "Step: 6214 Reward: 14.0\n",
+      "Step: 6219 Reward: 14.0\n",
+      "Step: 6224 Reward: 14.0\n",
+      "Step: 6229 Reward: 14.0\n",
+      "Step: 6234 Reward: 14.0\n",
+      "Step: 6239 Reward: 14.0\n",
+      "Step: 6244 Reward: 14.0\n",
+      "Step: 6249 Reward: 14.0\n",
+      "Step: 6254 Reward: 14.0\n",
+      "Step: 6259 Reward: 14.0\n",
+      "Step: 6264 Reward: 14.0\n",
+      "Step: 6269 Reward: 14.0\n",
+      "Step: 6274 Reward: 14.0\n",
+      "Step: 6279 Reward: 14.0\n",
+      "Step: 6284 Reward: 14.0\n",
+      "Step: 6289 Reward: 14.0\n",
+      "Step: 6294 Reward: 14.0\n",
+      "Step: 6299 Reward: 14.0\n",
+      "Step: 6304 Reward: 14.0\n",
+      "Step: 6309 Reward: 14.0\n",
+      "Step: 6314 Reward: 14.0\n",
+      "Step: 6319 Reward: 14.0\n",
+      "Step: 6324 Reward: 14.0\n",
+      "Step: 6329 Reward: 14.0\n",
+      "Step: 6334 Reward: 14.0\n",
+      "Step: 6339 Reward: 14.0\n",
+      "Step: 6344 Reward: 14.0\n",
+      "Step: 6349 Reward: 14.0\n",
+      "Step: 6354 Reward: 14.0\n",
+      "Step: 6359 Reward: 14.0\n",
+      "Step: 6364 Reward: 14.0\n",
+      "Step: 6369 Reward: 14.0\n",
+      "Step: 6374 Reward: 14.0\n",
+      "Step: 6379 Reward: 14.0\n",
+      "Step: 6384 Reward: 14.0\n",
+      "Step: 6389 Reward: 14.0\n",
+      "Step: 6394 Reward: 14.0\n",
+      "Step: 6399 Reward: 14.0\n",
+      "Step: 6404 Reward: 14.0\n",
+      "Step: 6409 Reward: 14.0\n",
+      "Step: 6414 Reward: 14.0\n",
+      "Step: 6419 Reward: 14.0\n",
+      "Step: 6424 Reward: 14.0\n",
+      "Step: 6429 Reward: 14.0\n",
+      "Step: 6434 Reward: 14.0\n",
+      "Step: 6439 Reward: 14.0\n",
+      "Step: 6444 Reward: 14.0\n",
+      "Step: 6449 Reward: 14.0\n",
+      "Step: 6454 Reward: 14.0\n",
+      "Step: 6459 Reward: 14.0\n",
+      "Step: 6464 Reward: 14.0\n",
+      "Step: 6469 Reward: 14.0\n",
+      "Step: 6474 Reward: 14.0\n",
+      "Step: 6479 Reward: 14.0\n",
+      "Step: 6484 Reward: 14.0\n",
+      "Step: 6489 Reward: 14.0\n",
+      "Step: 6494 Reward: 14.0\n",
+      "Step: 6499 Reward: 14.0\n",
+      "Step: 6504 Reward: 14.0\n",
+      "Step: 6509 Reward: 14.0\n",
+      "Step: 6514 Reward: 14.0\n",
+      "Step: 6519 Reward: 14.0\n",
+      "Step: 6524 Reward: 14.0\n",
+      "Step: 6529 Reward: 14.0\n",
+      "Step: 6534 Reward: 14.0\n",
+      "Step: 6539 Reward: 14.0\n",
+      "Step: 6544 Reward: 14.0\n",
+      "Step: 6549 Reward: 14.0\n",
+      "Step: 6554 Reward: 14.0\n",
+      "Step: 6559 Reward: 14.0\n",
+      "Step: 6564 Reward: 14.0\n",
+      "Step: 6569 Reward: 14.0\n",
+      "Step: 6574 Reward: 14.0\n",
+      "Step: 6579 Reward: 14.0\n",
+      "Step: 6584 Reward: 14.0\n",
+      "Step: 6589 Reward: 14.0\n",
+      "Step: 6594 Reward: 14.0\n",
+      "Step: 6599 Reward: 14.0\n",
+      "Step: 6604 Reward: 14.0\n",
+      "Step: 6609 Reward: 14.0\n",
+      "Step: 6614 Reward: 14.0\n",
+      "Step: 6619 Reward: 14.0\n",
+      "Step: 6624 Reward: 14.0\n",
+      "Step: 6629 Reward: 14.0\n",
+      "Step: 6634 Reward: 14.0\n",
+      "Step: 6639 Reward: 14.0\n",
+      "Step: 6644 Reward: 14.0\n",
+      "Step: 6649 Reward: 14.0\n",
+      "Step: 6654 Reward: 14.0\n",
+      "Step: 6659 Reward: 14.0\n",
+      "Step: 6664 Reward: 14.0\n",
+      "Step: 6669 Reward: 14.0\n",
+      "Step: 6674 Reward: 14.0\n",
+      "Step: 6679 Reward: 14.0\n",
+      "Step: 6684 Reward: 14.0\n",
+      "Step: 6689 Reward: 14.0\n",
+      "Step: 6694 Reward: 14.0\n",
+      "Step: 6699 Reward: 14.0\n",
+      "Step: 6704 Reward: 14.0\n",
+      "Step: 6709 Reward: 14.0\n",
+      "Step: 6714 Reward: 14.0\n",
+      "Step: 6719 Reward: 14.0\n",
+      "Step: 6724 Reward: 14.0\n",
+      "Step: 6729 Reward: 14.0\n",
+      "Step: 6734 Reward: 14.0\n",
+      "Step: 6739 Reward: 14.0\n",
+      "Step: 6744 Reward: 14.0\n",
+      "Step: 6749 Reward: 14.0\n",
+      "Step: 6754 Reward: 14.0\n",
+      "Step: 6759 Reward: 14.0\n",
+      "Step: 6764 Reward: 14.0\n",
+      "Step: 6769 Reward: 14.0\n",
+      "Step: 6774 Reward: 14.0\n",
+      "Step: 6779 Reward: 14.0\n",
+      "Step: 6784 Reward: 14.0\n",
+      "Step: 6789 Reward: 14.0\n",
+      "Step: 6794 Reward: 14.0\n",
+      "Step: 6799 Reward: 14.0\n",
+      "Step: 6804 Reward: 14.0\n",
+      "Step: 6809 Reward: 14.0\n",
+      "Step: 6814 Reward: 14.0\n",
+      "Step: 6819 Reward: 14.0\n",
+      "Step: 6824 Reward: 14.0\n",
+      "Step: 6829 Reward: 14.0\n",
+      "Step: 6834 Reward: 14.0\n",
+      "Step: 6839 Reward: 14.0\n",
+      "Step: 6844 Reward: 14.0\n",
+      "Step: 6849 Reward: 14.0\n",
+      "Step: 6854 Reward: 14.0\n",
+      "Step: 6859 Reward: 14.0\n",
+      "Step: 6864 Reward: 14.0\n",
+      "Step: 6869 Reward: 14.0\n",
+      "Step: 6874 Reward: 14.0\n",
+      "Step: 6879 Reward: 14.0\n",
+      "Step: 6884 Reward: 14.0\n",
+      "Step: 6889 Reward: 14.0\n",
+      "Step: 6894 Reward: 14.0\n",
+      "Step: 6899 Reward: 14.0\n",
+      "Step: 6904 Reward: 14.0\n",
+      "Step: 6909 Reward: 14.0\n",
+      "Step: 6914 Reward: 14.0\n",
+      "Step: 6919 Reward: 14.0\n",
+      "Step: 6924 Reward: 14.0\n",
+      "Step: 6929 Reward: 14.0\n",
+      "Step: 6934 Reward: 14.0\n",
+      "Step: 6939 Reward: 14.0\n",
+      "Step: 6944 Reward: 14.0\n",
+      "Step: 6949 Reward: 14.0\n",
+      "Step: 6954 Reward: 14.0\n",
+      "Step: 6959 Reward: 14.0\n",
+      "Step: 6964 Reward: 14.0\n",
+      "Step: 6969 Reward: 14.0\n",
+      "Step: 6974 Reward: 14.0\n",
+      "Step: 6979 Reward: 14.0\n",
+      "Step: 6984 Reward: 14.0\n",
+      "Step: 6989 Reward: 14.0\n",
+      "Step: 6994 Reward: 14.0\n",
+      "Step: 6999 Reward: 14.0\n",
+      "Step: 7004 Reward: 14.0\n",
+      "Step: 7009 Reward: 14.0\n",
+      "Step: 7014 Reward: 14.0\n",
+      "Step: 7019 Reward: 14.0\n",
+      "Step: 7024 Reward: 14.0\n",
+      "Step: 7029 Reward: 14.0\n",
+      "Step: 7034 Reward: 14.0\n",
+      "Step: 7039 Reward: 14.0\n",
+      "Step: 7044 Reward: 14.0\n",
+      "Step: 7049 Reward: 14.0\n",
+      "Step: 7054 Reward: 14.0\n",
+      "Step: 7059 Reward: 14.0\n",
+      "Step: 7064 Reward: 14.0\n",
+      "Step: 7069 Reward: 14.0\n",
+      "Step: 7074 Reward: 14.0\n",
+      "Step: 7079 Reward: 14.0\n",
+      "Step: 7084 Reward: 14.0\n",
+      "Step: 7089 Reward: 14.0\n",
+      "Step: 7094 Reward: 14.0\n",
+      "Step: 7099 Reward: 14.0\n",
+      "Step: 7104 Reward: 14.0\n",
+      "Step: 7109 Reward: 14.0\n",
+      "Step: 7114 Reward: 14.0\n",
+      "Step: 7119 Reward: 14.0\n",
+      "Step: 7124 Reward: 14.0\n",
+      "Step: 7129 Reward: 14.0\n",
+      "Step: 7134 Reward: 14.0\n",
+      "Step: 7139 Reward: 14.0\n",
+      "Step: 7144 Reward: 14.0\n",
+      "Step: 7149 Reward: 14.0\n",
+      "Step: 7154 Reward: 14.0\n",
+      "Step: 7159 Reward: 14.0\n",
+      "Step: 7164 Reward: 14.0\n",
+      "Step: 7169 Reward: 14.0\n",
+      "Step: 7174 Reward: 14.0\n",
+      "Step: 7179 Reward: 14.0\n",
+      "Step: 7184 Reward: 14.0\n",
+      "Step: 7189 Reward: 14.0\n",
+      "Step: 7194 Reward: 14.0\n",
+      "Step: 7199 Reward: 14.0\n",
+      "Step: 7204 Reward: 14.0\n",
+      "Step: 7209 Reward: 14.0\n",
+      "Step: 7214 Reward: 14.0\n",
+      "Step: 7219 Reward: 14.0\n",
+      "Step: 7224 Reward: 14.0\n",
+      "Step: 7229 Reward: 14.0\n",
+      "Step: 7234 Reward: 14.0\n",
+      "Step: 7239 Reward: 14.0\n",
+      "Step: 7244 Reward: 14.0\n",
+      "Step: 7249 Reward: 14.0\n",
+      "Step: 7254 Reward: 14.0\n",
+      "Step: 7259 Reward: 14.0\n",
+      "Step: 7264 Reward: 14.0\n",
+      "Step: 7269 Reward: 14.0\n",
+      "Step: 7274 Reward: 14.0\n",
+      "Step: 7279 Reward: 14.0\n",
+      "Step: 7284 Reward: 14.0\n",
+      "Step: 7289 Reward: 14.0\n",
+      "Step: 7294 Reward: 14.0\n",
+      "Step: 7299 Reward: 14.0\n",
+      "Step: 7304 Reward: 14.0\n",
+      "Step: 7309 Reward: 14.0\n",
+      "Step: 7314 Reward: 14.0\n",
+      "Step: 7319 Reward: 14.0\n",
+      "Step: 7324 Reward: 14.0\n",
+      "Step: 7329 Reward: 14.0\n",
+      "Step: 7334 Reward: 14.0\n",
+      "Step: 7339 Reward: 14.0\n",
+      "Step: 7344 Reward: 14.0\n",
+      "Step: 7349 Reward: 14.0\n",
+      "Step: 7354 Reward: 14.0\n",
+      "Step: 7359 Reward: 14.0\n",
+      "Step: 7364 Reward: 14.0\n",
+      "Step: 7369 Reward: 14.0\n",
+      "Step: 7374 Reward: 14.0\n",
+      "Step: 7379 Reward: 14.0\n",
+      "Step: 7383 Reward: 3.0\n",
+      "Step: 7388 Reward: 14.0\n",
+      "Step: 7393 Reward: 14.0\n",
+      "Step: 7398 Reward: 14.0\n",
+      "Step: 7403 Reward: 14.0\n",
+      "Step: 7408 Reward: 14.0\n",
+      "Step: 7413 Reward: 14.0\n",
+      "Step: 7418 Reward: 14.0\n",
+      "Step: 7423 Reward: 14.0\n",
+      "Step: 7428 Reward: 14.0\n",
+      "Step: 7433 Reward: 14.0\n",
+      "Step: 7438 Reward: 14.0\n",
+      "Step: 7443 Reward: 14.0\n",
+      "Step: 7448 Reward: 14.0\n",
+      "Step: 7453 Reward: 14.0\n",
+      "Step: 7458 Reward: 14.0\n",
+      "Step: 7463 Reward: 14.0\n",
+      "Step: 7468 Reward: 14.0\n",
+      "Step: 7473 Reward: 14.0\n",
+      "Step: 7478 Reward: 14.0\n",
+      "Step: 7483 Reward: 14.0\n",
+      "Step: 7488 Reward: 14.0\n",
+      "Step: 7493 Reward: 14.0\n",
+      "Step: 7498 Reward: 14.0\n",
+      "Step: 7503 Reward: 14.0\n",
+      "Step: 7508 Reward: 14.0\n",
+      "Step: 7513 Reward: 14.0\n",
+      "Step: 7518 Reward: 14.0\n",
+      "Step: 7523 Reward: 14.0\n",
+      "Step: 7528 Reward: 14.0\n",
+      "Step: 7533 Reward: 14.0\n",
+      "Step: 7538 Reward: 14.0\n",
+      "Step: 7543 Reward: 14.0\n",
+      "Step: 7548 Reward: 14.0\n",
+      "Step: 7553 Reward: 14.0\n",
+      "Step: 7558 Reward: 14.0\n",
+      "Step: 7563 Reward: 14.0\n",
+      "Step: 7568 Reward: 14.0\n",
+      "Step: 7573 Reward: 14.0\n",
+      "Step: 7578 Reward: 14.0\n",
+      "Step: 7583 Reward: 14.0\n",
+      "Step: 7588 Reward: 14.0\n",
+      "Step: 7593 Reward: 14.0\n",
+      "Step: 7598 Reward: 14.0\n",
+      "Step: 7603 Reward: 14.0\n",
+      "Step: 7608 Reward: 14.0\n",
+      "Step: 7613 Reward: 14.0\n",
+      "Step: 7618 Reward: 14.0\n",
+      "Step: 7623 Reward: 14.0\n",
+      "Step: 7628 Reward: 14.0\n",
+      "Step: 7633 Reward: 14.0\n",
+      "Step: 7638 Reward: 14.0\n",
+      "Step: 7643 Reward: 14.0\n",
+      "Step: 7648 Reward: 14.0\n",
+      "Step: 7653 Reward: 14.0\n",
+      "Step: 7658 Reward: 14.0\n",
+      "Step: 7663 Reward: 14.0\n",
+      "Step: 7668 Reward: 14.0\n",
+      "Step: 7673 Reward: 14.0\n",
+      "Step: 7678 Reward: 14.0\n",
+      "Step: 7683 Reward: 14.0\n",
+      "Step: 7688 Reward: 14.0\n",
+      "Step: 7693 Reward: 14.0\n",
+      "Step: 7698 Reward: 14.0\n",
+      "Step: 7703 Reward: 14.0\n",
+      "Step: 7708 Reward: 14.0\n",
+      "Step: 7713 Reward: 14.0\n",
+      "Step: 7718 Reward: 14.0\n",
+      "Step: 7723 Reward: 14.0\n",
+      "Step: 7728 Reward: 14.0\n",
+      "Step: 7733 Reward: 14.0\n",
+      "Step: 7738 Reward: 14.0\n",
+      "Step: 7743 Reward: 14.0\n",
+      "Step: 7748 Reward: 14.0\n",
+      "Step: 7753 Reward: 14.0\n",
+      "Step: 7758 Reward: 14.0\n",
+      "Step: 7763 Reward: 14.0\n",
+      "Step: 7768 Reward: 14.0\n",
+      "Step: 7773 Reward: 14.0\n",
+      "Step: 7778 Reward: 14.0\n",
+      "Step: 7783 Reward: 14.0\n",
+      "Step: 7788 Reward: 14.0\n",
+      "Step: 7793 Reward: 14.0\n",
+      "Step: 7798 Reward: 14.0\n",
+      "Step: 7803 Reward: 14.0\n",
+      "Step: 7808 Reward: 14.0\n",
+      "Step: 7813 Reward: 14.0\n",
+      "Step: 7818 Reward: 14.0\n",
+      "Step: 7823 Reward: 14.0\n",
+      "Step: 7828 Reward: 14.0\n",
+      "Step: 7833 Reward: 14.0\n",
+      "Step: 7838 Reward: 14.0\n",
+      "Step: 7843 Reward: 14.0\n",
+      "Step: 7848 Reward: 14.0\n",
+      "Step: 7853 Reward: 14.0\n",
+      "Step: 7858 Reward: 14.0\n",
+      "Step: 7863 Reward: 14.0\n",
+      "Step: 7868 Reward: 14.0\n",
+      "Step: 7873 Reward: 14.0\n",
+      "Step: 7878 Reward: 14.0\n",
+      "Step: 7883 Reward: 14.0\n",
+      "Step: 7888 Reward: 14.0\n",
+      "Step: 7893 Reward: 14.0\n",
+      "Step: 7898 Reward: 14.0\n",
+      "Step: 7903 Reward: 14.0\n",
+      "Step: 7908 Reward: 14.0\n",
+      "Step: 7913 Reward: 14.0\n",
+      "Step: 7918 Reward: 14.0\n",
+      "Step: 7923 Reward: 14.0\n",
+      "Step: 7928 Reward: 14.0\n",
+      "Step: 7933 Reward: 14.0\n",
+      "Step: 7938 Reward: 14.0\n",
+      "Step: 7943 Reward: 14.0\n",
+      "Step: 7948 Reward: 14.0\n",
+      "Step: 7953 Reward: 14.0\n",
+      "Step: 7958 Reward: 14.0\n",
+      "Step: 7963 Reward: 14.0\n",
+      "Step: 7968 Reward: 14.0\n",
+      "Step: 7973 Reward: 14.0\n",
+      "Step: 7978 Reward: 14.0\n",
+      "Step: 7983 Reward: 14.0\n",
+      "Step: 7988 Reward: 14.0\n",
+      "Step: 7993 Reward: 14.0\n",
+      "Step: 7998 Reward: 14.0\n",
+      "Step: 8003 Reward: 14.0\n",
+      "Step: 8008 Reward: 14.0\n",
+      "Step: 8013 Reward: 14.0\n",
+      "Step: 8018 Reward: 14.0\n",
+      "Step: 8023 Reward: 14.0\n",
+      "Step: 8028 Reward: 14.0\n",
+      "Step: 8033 Reward: 14.0\n",
+      "Step: 8038 Reward: 14.0\n",
+      "Step: 8043 Reward: 14.0\n",
+      "Step: 8048 Reward: 14.0\n",
+      "Step: 8053 Reward: 14.0\n",
+      "Step: 8058 Reward: 14.0\n",
+      "Step: 8063 Reward: 14.0\n",
+      "Step: 8068 Reward: 14.0\n",
+      "Step: 8073 Reward: 14.0\n",
+      "Step: 8078 Reward: 14.0\n",
+      "Step: 8083 Reward: 14.0\n",
+      "Step: 8088 Reward: 14.0\n",
+      "Step: 8093 Reward: 14.0\n",
+      "Step: 8098 Reward: 14.0\n",
+      "Step: 8103 Reward: 14.0\n",
+      "Step: 8108 Reward: 14.0\n",
+      "Step: 8113 Reward: 14.0\n",
+      "Step: 8118 Reward: 14.0\n",
+      "Step: 8123 Reward: 14.0\n",
+      "Step: 8128 Reward: 14.0\n",
+      "Step: 8133 Reward: 14.0\n",
+      "Step: 8138 Reward: 14.0\n",
+      "Step: 8143 Reward: 14.0\n",
+      "Step: 8148 Reward: 14.0\n",
+      "Step: 8153 Reward: 14.0\n",
+      "Step: 8158 Reward: 14.0\n",
+      "Step: 8163 Reward: 14.0\n",
+      "Step: 8168 Reward: 14.0\n",
+      "Step: 8173 Reward: 14.0\n",
+      "Step: 8178 Reward: 14.0\n",
+      "Step: 8183 Reward: 14.0\n",
+      "Step: 8188 Reward: 14.0\n",
+      "Step: 8193 Reward: 14.0\n",
+      "Step: 8198 Reward: 14.0\n",
+      "Step: 8203 Reward: 14.0\n",
+      "Step: 8208 Reward: 14.0\n",
+      "Step: 8213 Reward: 14.0\n",
+      "Step: 8218 Reward: 14.0\n",
+      "Step: 8223 Reward: 14.0\n",
+      "Step: 8228 Reward: 14.0\n",
+      "Step: 8233 Reward: 14.0\n",
+      "Step: 8238 Reward: 14.0\n",
+      "Step: 8243 Reward: 14.0\n",
+      "Step: 8248 Reward: 14.0\n",
+      "Step: 8253 Reward: 14.0\n",
+      "Step: 8258 Reward: 14.0\n",
+      "Step: 8263 Reward: 14.0\n",
+      "Step: 8268 Reward: 14.0\n",
+      "Step: 8273 Reward: 14.0\n",
+      "Step: 8278 Reward: 14.0\n",
+      "Step: 8283 Reward: 14.0\n",
+      "Step: 8288 Reward: 14.0\n",
+      "Step: 8293 Reward: 14.0\n",
+      "Step: 8298 Reward: 14.0\n",
+      "Step: 8303 Reward: 14.0\n",
+      "Step: 8308 Reward: 14.0\n",
+      "Step: 8313 Reward: 14.0\n",
+      "Step: 8318 Reward: 14.0\n",
+      "Step: 8323 Reward: 14.0\n",
+      "Step: 8328 Reward: 14.0\n",
+      "Step: 8333 Reward: 14.0\n",
+      "Step: 8338 Reward: 14.0\n",
+      "Step: 8343 Reward: 14.0\n",
+      "Step: 8348 Reward: 14.0\n",
+      "Step: 8353 Reward: 14.0\n",
+      "Step: 8358 Reward: 14.0\n",
+      "Step: 8363 Reward: 14.0\n",
+      "Step: 8368 Reward: 14.0\n",
+      "Step: 8373 Reward: 14.0\n",
+      "Step: 8378 Reward: 14.0\n",
+      "Step: 8383 Reward: 14.0\n",
+      "Step: 8388 Reward: 14.0\n",
+      "Step: 8393 Reward: 14.0\n",
+      "Step: 8398 Reward: 14.0\n",
+      "Step: 8403 Reward: 14.0\n",
+      "Step: 8408 Reward: 14.0\n",
+      "Step: 8413 Reward: 14.0\n",
+      "Step: 8418 Reward: 14.0\n",
+      "Step: 8423 Reward: 14.0\n",
+      "Step: 8428 Reward: 14.0\n",
+      "Step: 8433 Reward: 14.0\n",
+      "Step: 8438 Reward: 14.0\n",
+      "Step: 8443 Reward: 14.0\n",
+      "Step: 8448 Reward: 14.0\n",
+      "Step: 8453 Reward: 14.0\n",
+      "Step: 8458 Reward: 14.0\n",
+      "Step: 8463 Reward: 14.0\n",
+      "Step: 8468 Reward: 14.0\n",
+      "Step: 8473 Reward: 14.0\n",
+      "Step: 8478 Reward: 14.0\n",
+      "Step: 8483 Reward: 14.0\n",
+      "Step: 8488 Reward: 14.0\n",
+      "Step: 8493 Reward: 14.0\n",
+      "Step: 8498 Reward: 14.0\n",
+      "Step: 8503 Reward: 14.0\n",
+      "Step: 8508 Reward: 14.0\n",
+      "Step: 8513 Reward: 14.0\n",
+      "Step: 8518 Reward: 14.0\n",
+      "Step: 8523 Reward: 14.0\n",
+      "Step: 8528 Reward: 14.0\n",
+      "Step: 8533 Reward: 14.0\n",
+      "Step: 8538 Reward: 14.0\n",
+      "Step: 8543 Reward: 14.0\n",
+      "Step: 8548 Reward: 14.0\n",
+      "Step: 8553 Reward: 14.0\n",
+      "Step: 8558 Reward: 14.0\n",
+      "Step: 8563 Reward: 14.0\n",
+      "Step: 8568 Reward: 14.0\n",
+      "Step: 8573 Reward: 14.0\n",
+      "Step: 8578 Reward: 14.0\n",
+      "Step: 8583 Reward: 14.0\n",
+      "Step: 8588 Reward: 14.0\n",
+      "Step: 8593 Reward: 14.0\n",
+      "Step: 8598 Reward: 14.0\n",
+      "Step: 8603 Reward: 14.0\n",
+      "Step: 8608 Reward: 14.0\n",
+      "Step: 8613 Reward: 14.0\n",
+      "Step: 8618 Reward: 14.0\n",
+      "Step: 8623 Reward: 14.0\n",
+      "Step: 8628 Reward: 14.0\n",
+      "Step: 8633 Reward: 14.0\n",
+      "Step: 8638 Reward: 14.0\n",
+      "Step: 8643 Reward: 14.0\n",
+      "Step: 8648 Reward: 14.0\n",
+      "Step: 8653 Reward: 14.0\n",
+      "Step: 8658 Reward: 14.0\n",
+      "Step: 8663 Reward: 14.0\n",
+      "Step: 8668 Reward: 14.0\n",
+      "Step: 8673 Reward: 14.0\n",
+      "Step: 8678 Reward: 14.0\n",
+      "Step: 8683 Reward: 14.0\n",
+      "Step: 8688 Reward: 14.0\n",
+      "Step: 8693 Reward: 14.0\n",
+      "Step: 8698 Reward: 14.0\n",
+      "Step: 8703 Reward: 14.0\n",
+      "Step: 8708 Reward: 14.0\n",
+      "Step: 8713 Reward: 14.0\n",
+      "Step: 8718 Reward: 14.0\n",
+      "Step: 8723 Reward: 14.0\n",
+      "Step: 8728 Reward: 14.0\n",
+      "Step: 8733 Reward: 14.0\n",
+      "Step: 8738 Reward: 14.0\n",
+      "Step: 8743 Reward: 14.0\n",
+      "Step: 8748 Reward: 14.0\n",
+      "Step: 8753 Reward: 14.0\n",
+      "Step: 8758 Reward: 14.0\n",
+      "Step: 8763 Reward: 14.0\n",
+      "Step: 8768 Reward: 14.0\n",
+      "Step: 8773 Reward: 14.0\n",
+      "Step: 8778 Reward: 14.0\n",
+      "Step: 8783 Reward: 14.0\n",
+      "Step: 8788 Reward: 14.0\n",
+      "Step: 8793 Reward: 14.0\n",
+      "Step: 8798 Reward: 14.0\n",
+      "Step: 8803 Reward: 14.0\n",
+      "Step: 8808 Reward: 14.0\n",
+      "Step: 8813 Reward: 14.0\n",
+      "Step: 8818 Reward: 14.0\n",
+      "Step: 8823 Reward: 14.0\n",
+      "Step: 8828 Reward: 14.0\n",
+      "Step: 8833 Reward: 14.0\n",
+      "Step: 8838 Reward: 14.0\n",
+      "Step: 8843 Reward: 14.0\n",
+      "Step: 8848 Reward: 14.0\n",
+      "Step: 8853 Reward: 14.0\n",
+      "Step: 8858 Reward: 14.0\n",
+      "Step: 8863 Reward: 14.0\n",
+      "Step: 8868 Reward: 14.0\n",
+      "Step: 8873 Reward: 14.0\n",
+      "Step: 8878 Reward: 14.0\n",
+      "Step: 8883 Reward: 14.0\n",
+      "Step: 8888 Reward: 14.0\n",
+      "Step: 8893 Reward: 14.0\n",
+      "Step: 8898 Reward: 14.0\n",
+      "Step: 8903 Reward: 14.0\n",
+      "Step: 8908 Reward: 14.0\n",
+      "Step: 8913 Reward: 14.0\n",
+      "Step: 8918 Reward: 14.0\n",
+      "Step: 8923 Reward: 14.0\n",
+      "Step: 8928 Reward: 14.0\n",
+      "Step: 8933 Reward: 14.0\n",
+      "Step: 8938 Reward: 14.0\n",
+      "Step: 8943 Reward: 14.0\n",
+      "Step: 8948 Reward: 14.0\n",
+      "Step: 8953 Reward: 14.0\n",
+      "Step: 8958 Reward: 14.0\n",
+      "Step: 8963 Reward: 14.0\n",
+      "Step: 8968 Reward: 14.0\n",
+      "Step: 8973 Reward: 14.0\n",
+      "Step: 8978 Reward: 14.0\n",
+      "Step: 8983 Reward: 14.0\n",
+      "Step: 8988 Reward: 14.0\n",
+      "Step: 8993 Reward: 14.0\n",
+      "Step: 8998 Reward: 14.0\n",
+      "Step: 9003 Reward: 14.0\n",
+      "Step: 9008 Reward: 14.0\n",
+      "Step: 9013 Reward: 14.0\n",
+      "Step: 9018 Reward: 14.0\n",
+      "Step: 9023 Reward: 14.0\n",
+      "Step: 9028 Reward: 14.0\n",
+      "Step: 9033 Reward: 14.0\n",
+      "Step: 9038 Reward: 14.0\n",
+      "Step: 9043 Reward: 14.0\n",
+      "Step: 9048 Reward: 14.0\n",
+      "Step: 9053 Reward: 14.0\n",
+      "Step: 9058 Reward: 14.0\n",
+      "Step: 9063 Reward: 14.0\n"
      ]
     },
     {
@@ -1338,14 +5755,36 @@
      "traceback": [
       "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
       "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn[14], line 61\u001b[0m\n\u001b[1;32m     58\u001b[0m next_states \u001b[38;5;241m=\u001b[39m torch\u001b[38;5;241m.\u001b[39mtensor([i[\u001b[38;5;241m3\u001b[39m] \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m minibatch])\u001b[38;5;241m.\u001b[39mfloat()\u001b[38;5;241m.\u001b[39mcuda()\n\u001b[1;32m     59\u001b[0m dones \u001b[38;5;241m=\u001b[39m torch\u001b[38;5;241m.\u001b[39mtensor([i[\u001b[38;5;241m4\u001b[39m] \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m minibatch])\u001b[38;5;241m.\u001b[39mfloat()\u001b[38;5;241m.\u001b[39mcuda()\n\u001b[0;32m---> 61\u001b[0m next_traj_batch, info \u001b[38;5;241m=\u001b[39m \u001b[43msample_traj\u001b[49m\u001b[43m(\u001b[49m\u001b[43mgflownet\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnext_states\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mq1_target\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlogr_fn_detach\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbatch_size\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43margs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgfn_batch_size\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msigma\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msigma_interactive\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     62\u001b[0m next_V \u001b[38;5;241m=\u001b[39m gflownet\u001b[38;5;241m.\u001b[39mcompute_V(next_traj_batch, info)\n\u001b[1;32m     63\u001b[0m td_target \u001b[38;5;241m=\u001b[39m rewards \u001b[38;5;241m+\u001b[39m args\u001b[38;5;241m.\u001b[39malpha \u001b[38;5;241m*\u001b[39m (\u001b[38;5;241m1\u001b[39m \u001b[38;5;241m-\u001b[39m dones) \u001b[38;5;241m*\u001b[39m next_V\u001b[38;5;241m.\u001b[39mview(\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m)\n",
-      "File \u001b[0;32m~/Advantage-Diffusion/qflow_dgfs_gflownet.py:73\u001b[0m, in \u001b[0;36msample_traj\u001b[0;34m(gfn, states, config, logreward_fn, batch_size, sigma)\u001b[0m\n\u001b[1;32m     71\u001b[0m x, uw_term, u2_term \u001b[38;5;241m=\u001b[39m gfn\u001b[38;5;241m.\u001b[39mstep_forward(cur_t, states, x, config\u001b[38;5;241m.\u001b[39mdt, sigma\u001b[38;5;241m=\u001b[39msigma, state_batch_size\u001b[38;5;241m=\u001b[39mbatch_size)\n\u001b[1;32m     72\u001b[0m x \u001b[38;5;241m=\u001b[39m x\u001b[38;5;241m.\u001b[39mdetach()\n\u001b[0;32m---> 73\u001b[0m fl_logr \u001b[38;5;241m=\u001b[39m \u001b[43mfl_inter_logr\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstates\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlogreward_fn\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconfig\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m     74\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcur_t\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcur_t\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43m \u001b[49m\u001b[43mconfig\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdt\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msigma\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msigma\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39mdetach()\u001b[38;5;241m.\u001b[39mcpu()\n\u001b[1;32m     75\u001b[0m traj\u001b[38;5;241m.\u001b[39mappend((cur_t\u001b[38;5;241m.\u001b[39mcpu() \u001b[38;5;241m+\u001b[39m config\u001b[38;5;241m.\u001b[39mdt, x\u001b[38;5;241m.\u001b[39mdetach()\u001b[38;5;241m.\u001b[39mcpu(), fl_logr, states\u001b[38;5;241m.\u001b[39mcpu()))\n\u001b[1;32m     76\u001b[0m inter_loss \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m (u2_term \u001b[38;5;241m+\u001b[39m uw_term)\u001b[38;5;241m.\u001b[39mdetach()\n",
-      "File \u001b[0;32m~/Advantage-Diffusion/qflow_dgfs_gflownet.py:29\u001b[0m, in \u001b[0;36mfl_inter_logr\u001b[0;34m(states, actions, logreward_fn, config, cur_t, sigma)\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(cur_t, torch\u001b[38;5;241m.\u001b[39mTensor):\n\u001b[1;32m     27\u001b[0m     \u001b[38;5;66;03m# print(cur_t.shape) # (bs, 1) or (,)\u001b[39;00m\n\u001b[1;32m     28\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m cur_t\u001b[38;5;241m.\u001b[39mndim \u001b[38;5;241m<\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m---> 29\u001b[0m         cur_t \u001b[38;5;241m=\u001b[39m \u001b[43mcur_t\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mitem\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     30\u001b[0m ratio \u001b[38;5;241m=\u001b[39m cur_t \u001b[38;5;241m/\u001b[39m config\u001b[38;5;241m.\u001b[39mt_end\n\u001b[1;32m     31\u001b[0m \u001b[38;5;66;03m# assert 0 <= ratio <= 1\u001b[39;00m\n",
+      "Cell \u001b[0;32mIn[21], line 96\u001b[0m\n\u001b[1;32m     93\u001b[0m q_optimizer\u001b[38;5;241m.\u001b[39mstep()\n\u001b[1;32m     95\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m torch\u001b[38;5;241m.\u001b[39mno_grad():\n\u001b[0;32m---> 96\u001b[0m     pi \u001b[38;5;241m=\u001b[39m \u001b[43mactor\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msample\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobservations\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     97\u001b[0m log_pi \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m-\u001b[39mactor\u001b[38;5;241m.\u001b[39mloss_on_batch(observations, pi\u001b[38;5;241m.\u001b[39mdetach(), reduce_mean\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\u001b[38;5;241m.\u001b[39munsqueeze(\u001b[38;5;241m1\u001b[39m)\n\u001b[1;32m     98\u001b[0m t \u001b[38;5;241m=\u001b[39m torch\u001b[38;5;241m.\u001b[39mrandint(\u001b[38;5;241m1\u001b[39m, args\u001b[38;5;241m.\u001b[39mdiffusion_steps\u001b[38;5;241m+\u001b[39m\u001b[38;5;241m1\u001b[39m, size\u001b[38;5;241m=\u001b[39m(actions\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m0\u001b[39m],))\u001b[38;5;241m.\u001b[39munsqueeze(\u001b[38;5;241m1\u001b[39m)\u001b[38;5;241m.\u001b[39mto(device)\n",
+      "File \u001b[0;32m~/Advantage-Diffusion/diffusion_model.py:545\u001b[0m, in \u001b[0;36mModel_Cond_Diffusion.sample\u001b[0;34m(self, x_batch, return_y_trace, extract_embedding, predict_noise, T_to_sample)\u001b[0m\n\u001b[1;32m    543\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    544\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnn_model\u001b[38;5;241m.\u001b[39mnet_type \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124munet\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[0;32m--> 545\u001b[0m         eps \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnn_model\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_i\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx_batch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mt_is\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mn_T\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcontext_mask\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    546\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    547\u001b[0m         eps \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnn_model(y_i, x_batch, t_is, context_mask)\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1518\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1516\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1517\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1518\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1527\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1522\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1523\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1524\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1525\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1526\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1527\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1529\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m   1530\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
+      "File \u001b[0;32m~/Advantage-Diffusion/diffusion_model.py:819\u001b[0m, in \u001b[0;36mModel_mlp.forward\u001b[0;34m(self, y, x, t, context_mask, x_embed)\u001b[0m\n\u001b[1;32m    818\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mforward\u001b[39m(\u001b[38;5;28mself\u001b[39m, y, x, t, context_mask\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, x_embed\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[0;32m--> 819\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnn\u001b[49m\u001b[43m(\u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mt\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcontext_mask\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1518\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1516\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1517\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1518\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1527\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1522\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1523\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1524\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1525\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1526\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1527\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1529\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m   1530\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
+      "File \u001b[0;32m~/Advantage-Diffusion/diffusion_model.py:312\u001b[0m, in \u001b[0;36mModel_mlp_diff_embed.forward\u001b[0;34m(self, y, x, t, context_mask)\u001b[0m\n\u001b[1;32m    309\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mforward\u001b[39m(\u001b[38;5;28mself\u001b[39m, y, x, t, context_mask\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[1;32m    310\u001b[0m     \u001b[38;5;66;03m# embed y, x, t\u001b[39;00m\n\u001b[1;32m    311\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnet_type \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124munet\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[0;32m--> 312\u001b[0m         net_output \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43munet\u001b[49m\u001b[43m(\u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mt\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    313\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    314\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39muse_prev:\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1518\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1516\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1517\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1518\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1527\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1522\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1523\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1524\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1525\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1526\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1527\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1529\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m   1530\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
+      "File \u001b[0;32m~/Advantage-Diffusion/diffusion_model.py:148\u001b[0m, in \u001b[0;36mUNet.forward\u001b[0;34m(self, x, t, s)\u001b[0m\n\u001b[1;32m    146\u001b[0m h \u001b[38;5;241m=\u001b[39m nn\u001b[38;5;241m.\u001b[39mGELU()(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlayer_norm3(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mup1(h4)))\n\u001b[1;32m    147\u001b[0m h \u001b[38;5;241m=\u001b[39m h\u001b[38;5;241m+\u001b[39mh3\n\u001b[0;32m--> 148\u001b[0m h \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mres_block5\u001b[49m\u001b[43m(\u001b[49m\u001b[43mh\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mt_embed\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43ms_embed\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    149\u001b[0m h \u001b[38;5;241m=\u001b[39m nn\u001b[38;5;241m.\u001b[39mGELU()(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlayer_norm2(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mup2(h)))\n\u001b[1;32m    150\u001b[0m h \u001b[38;5;241m=\u001b[39m h\u001b[38;5;241m+\u001b[39mh2\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1518\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1516\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1517\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1518\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1527\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1522\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1523\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1524\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1525\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1526\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1527\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1529\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m   1530\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
+      "File \u001b[0;32m~/Advantage-Diffusion/diffusion_model.py:63\u001b[0m, in \u001b[0;36mResBlock.forward\u001b[0;34m(self, x, t, s)\u001b[0m\n\u001b[1;32m     61\u001b[0m s_embed \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlayer_norm(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstate_layer(s))\n\u001b[1;32m     62\u001b[0m h \u001b[38;5;241m=\u001b[39m torch\u001b[38;5;241m.\u001b[39mcat([x,s_embed], dim\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[0;32m---> 63\u001b[0m h \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlayer1\u001b[49m\u001b[43m(\u001b[49m\u001b[43mh\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     64\u001b[0m h \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlayer_norm(h)\n\u001b[1;32m     65\u001b[0m scale_shift \u001b[38;5;241m=\u001b[39m t_embed\u001b[38;5;241m.\u001b[39mchunk(\u001b[38;5;241m2\u001b[39m, dim\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1518\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1516\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1517\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1518\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/module.py:1527\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1522\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1523\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1524\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1525\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1526\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1527\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1529\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m   1530\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
+      "File \u001b[0;32m~/anaconda3/envs/decision-transformer-gym/lib/python3.8/site-packages/torch/nn/modules/linear.py:114\u001b[0m, in \u001b[0;36mLinear.forward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    113\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mforward\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;28minput\u001b[39m: Tensor) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m Tensor:\n\u001b[0;32m--> 114\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mF\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mlinear\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43minput\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mweight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbias\u001b[49m\u001b[43m)\u001b[49m\n",
       "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
      ]
     }
    ],
    "source": [
+    "from collections import deque\n",
+    "import random\n",
+    "\n",
+    "memory = deque(maxlen=100000)\n",
+    "\n",
+    "run_name = \"DSAC_lava_crossing\"\n",
+    "import wandb\n",
+    "\n",
     "wandb.init(\n",
     "    project=\"empowerment\",\n",
     "    entity='swish',\n",
@@ -1357,102 +5796,124 @@
     "writer = SummaryWriter(f\"runs/{run_name}\")\n",
     "device = torch.device(\"cuda\")\n",
     "\n",
-    "q1 = SoftQNetworkMLP(envs, alpha=args.alpha).to(device)\n",
-    "q1_target = SoftQNetworkMLP(envs, alpha=args.alpha).to(device)\n",
-    "q1_target.load_state_dict(q1.state_dict())\n",
-    "args.action_dim = envs.action_space.shape[0]\n",
-    "args.t_end = args.dt * args.N\n",
-    "args.state_dim = envs.observation_space.shape[0]\n",
-    "args.action_dim = envs.action_space.shape[0]\n",
-    "gflownet = get_alg(args, q1_target)\n",
-    "gflownet.to(device)\n",
-    "gflownet.train()\n",
-    "\n",
-    "param_ls = [\n",
-    "            {\"params\": gflownet.f_func.parameters(), \"lr\": args.gfn_policy_lr},\n",
-    "            {\"params\": gflownet.flow.parameters(), \"lr\": args.gfn_flow_lr},\n",
-    "            {\"params\": gflownet.lgv_coef.parameters(), \"lr\": args.gfn_policy_lr}\n",
-    "        ]\n",
-    "q_optimizer = optim.Adam(q1.parameters(), lr=args.q_lr)\n",
-    "gflow_optimizer = optim.Adam(param_ls, weight_decay=args.weight_decay)\n",
+    "nn_model = Model_mlp(\n",
+    "            envs.observation_space.shape[0], 512, envs.action_space.shape[0], embed_dim=128, net_type='unet').to(device)\n",
+    "actor = Model_Cond_Diffusion(\n",
+    "        nn_model,\n",
+    "        betas=(1e-4, 0.02),\n",
+    "        n_T=args.diffusion_steps,\n",
+    "        device=device,\n",
+    "        x_dim=envs.observation_space.shape[0],\n",
+    "        y_dim=envs.action_space.shape[0],\n",
+    "        drop_prob=0.0,\n",
+    "        guide_w=0.0,\n",
+    "        normalize_latent=0,\n",
+    "        schedule='linear',\n",
+    "    ).to(device)\n",
+    "qf1 = SoftQNetwork(envs, args.diffusion_steps+1).to(device)\n",
+    "qf2 = SoftQNetwork(envs, args.diffusion_steps+1).to(device)\n",
+    "qf1_target = SoftQNetwork(envs, args.diffusion_steps+1).to(device)\n",
+    "qf2_target = SoftQNetwork(envs, args.diffusion_steps+1).to(device)\n",
+    "qf1_target.load_state_dict(qf1.state_dict())\n",
+    "qf2_target.load_state_dict(qf2.state_dict())\n",
+    "q_optimizer = optim.Adam(list(qf1.parameters()) + list(qf2.parameters()), lr=args.q_lr)\n",
+    "actor_optimizer = optim.Adam(list(actor.parameters()), lr=args.policy_lr)\n",
+    "t_0 = torch.zeros((args.batch_size, args.diffusion_steps+1)).to(device)\n",
+    "t_0[:,0] = 1\n",
+    "alpha = args.alpha\n",
     "\n",
     "TOTAL_STEPS = 10000\n",
-    "memory = deque(maxlen=100000)\n",
-    "state = envs.reset().copy()\n",
-    "reward_cur = 0.0\n",
     "ep_reward = 0.0\n",
+    "state = envs.reset().copy()\n",
     "for global_step in range(TOTAL_STEPS):\n",
-    "    if global_step < 100:\n",
+    "    if global_step < 500:\n",
     "        actions = np.array(envs.action_space.sample())\n",
     "    else:\n",
-    "        actions = sample_policy(gflownet, torch.Tensor(state).unsqueeze(0).to(device), args, sigma=args.sigma_interactive)\n",
+    "        actions = actor.sample(torch.Tensor(state).unsqueeze(0).to(device))\n",
     "        actions = actions.detach().cpu().numpy()[0]\n",
     "    next_state, reward_cur, done, _ = envs.step(actions)\n",
     "    ep_reward += reward_cur\n",
     "    memory.append((state.copy(), actions, reward_cur, next_state.copy(), done))\n",
     "    state = next_state.copy()\n",
-    "    \n",
     "    if done:\n",
     "        writer.add_scalar(\"charts/episodic_return\", ep_reward, global_step)\n",
     "        print('Step:', global_step, 'Reward:', ep_reward)\n",
     "        state = envs.reset().copy()\n",
     "        ep_reward = 0.0\n",
-    "        \n",
-    "    if global_step > 130:\n",
-    "        minibatch = random.sample(memory, 64)\n",
-    "        states = torch.tensor([i[0] for i in minibatch]).float().cuda()\n",
+    "    \n",
+    "    if global_step > 500:\n",
+    "        minibatch = random.sample(memory, 128)\n",
+    "        observations = torch.tensor([i[0] for i in minibatch]).float().cuda()\n",
     "        actions = torch.tensor([i[1] for i in minibatch]).float().cuda()\n",
     "        rewards = torch.tensor([i[2] for i in minibatch]).float().cuda()\n",
-    "        next_states = torch.tensor([i[3] for i in minibatch]).float().cuda()\n",
+    "        next_observations = torch.tensor([i[3] for i in minibatch]).float().cuda()\n",
     "        dones = torch.tensor([i[4] for i in minibatch]).float().cuda()\n",
+    "        with torch.no_grad():\n",
+    "            next_state_actions = actor.sample(next_observations)\n",
+    "            next_state_log_pi = -actor.loss_on_batch(next_observations, next_state_actions, reduce_mean=False).unsqueeze(1)\n",
+    "            #next_state_actions, next_state_log_pi, _ = actor.sample(data.next_observations)\n",
+    "            qf1_next_target = qf1_target(next_observations, next_state_actions, t_0)\n",
+    "            qf2_next_target = qf2_target(next_observations, next_state_actions, t_0)\n",
+    "            min_qf_next_target = torch.min(qf1_next_target, qf2_next_target) - alpha * next_state_log_pi\n",
+    "            next_q_value = rewards + (1 - dones) * args.gamma * (min_qf_next_target).view(-1)\n",
     "        \n",
-    "        next_traj_batch, info = sample_traj(gflownet, next_states, args, q1_target.logr_fn_detach, batch_size=args.gfn_batch_size, sigma = args.sigma_interactive)\n",
-    "        next_V = gflownet.compute_V(next_traj_batch, info)\n",
-    "        td_target = rewards + args.alpha * (1 - dones) * next_V.view(-1)\n",
-    "        \n",
-    "        q1_a_values = q1(states, actions).view(-1)\n",
-    "        qf1_loss = F.mse_loss(q1_a_values, td_target.detach())\n",
+    "        t = torch.randint(0, args.diffusion_steps+1, size=(actions.shape[0],)).unsqueeze(1).to(device)#random_t(data.observations.shape[0], args.diffusion_steps+1).to(device)\n",
+    "        noise = torch.randn_like(actions).to(device)\n",
+    "        noised_actions = actor.sqrtab[t] * actions + actor.sqrtmab[t] * noise\n",
+    "        t = torch.nn.functional.one_hot(t.squeeze(), num_classes=args.diffusion_steps+1).float()\n",
+    "\n",
+    "        qf1_a_values = qf1(observations, noised_actions, t).view(-1)\n",
+    "        qf2_a_values = qf2(observations, noised_actions, t).view(-1)\n",
+    "        qf1_loss = F.mse_loss(qf1_a_values, next_q_value)\n",
+    "        qf2_loss = F.mse_loss(qf2_a_values, next_q_value)\n",
+    "        qf_loss = qf1_loss + qf2_loss\n",
     "        q_optimizer.zero_grad()\n",
-    "        qf1_loss.backward()\n",
+    "        qf_loss.backward()\n",
     "        q_optimizer.step()\n",
     "        \n",
-    "        minibatch = random.sample(memory, args.gfn_num_states)\n",
-    "        states = torch.tensor([i[0] for i in minibatch]).float().cuda()\n",
-    "        actions = torch.tensor([i[1] for i in minibatch]).float().cuda()\n",
-    "        rewards = torch.tensor([i[2] for i in minibatch]).float().cuda()\n",
-    "        next_states = torch.tensor([i[3] for i in minibatch]).float().cuda()\n",
-    "        dones = torch.tensor([i[4] for i in minibatch]).float().cuda()\n",
+    "        with torch.no_grad():\n",
+    "            pi = actor.sample(observations)\n",
+    "        log_pi = -actor.loss_on_batch(observations, pi.detach(), reduce_mean=False).unsqueeze(1)\n",
+    "        t = torch.randint(1, args.diffusion_steps+1, size=(actions.shape[0],)).unsqueeze(1).to(device)\n",
     "        \n",
-    "        traj_batch, info = sample_traj(gflownet, states, args, q1_target.logr_fn_detach, batch_size=args.gfn_batch_size, sigma = args.sigma_interactive)\n",
-    "        info = gflownet.train_step(traj_batch, info)\n",
+    "        noise = torch.randn_like(actions).to(device)\n",
+    "        noised_actions = actor.sqrtab[t] * pi.detach() + actor.sqrtmab[t] * noise\n",
+    "        denoised_actions = actor.nn_model(noised_actions, observations, t.float())\n",
+    "        eps = 1 / actor.sqrtmab[t] * (noised_actions - actor.sqrtab[t] * denoised_actions)\n",
+    "        z = (t>1)*torch.randn(actions.shape).to(device)\n",
+    "        y_i = actor.oneover_sqrta[t] * (noised_actions - eps * actor.mab_over_sqrtmab[t]) + actor.sqrt_beta_t[t] * z\n",
+    "        t = torch.nn.functional.one_hot(t.squeeze()-1, num_classes=args.diffusion_steps+1).float()\n",
     "        \n",
-    "        for param, target_param in zip(q1.parameters(), q1_target.parameters()):\n",
-    "            target_param.data.copy_(0.995 * param.data + (0.005) * target_param.data)\n",
+    "        qf1_pi = qf1(observations, y_i, t)\n",
+    "        qf2_pi = qf2(observations, y_i, t)\n",
+    "        min_qf_pi = torch.min(qf1_pi, qf2_pi)\n",
+    "        actor_loss = ((alpha * log_pi) - min_qf_pi).mean()\n",
+    "\n",
+    "        actor_optimizer.zero_grad()\n",
+    "        actor_loss.backward()\n",
+    "        actor_optimizer.step()\n",
+    "        \n",
+    "        for param, target_param in zip(qf1.parameters(), qf1_target.parameters()):\n",
+    "            target_param.data.copy_(args.tau * param.data + (1 - args.tau) * target_param.data)\n",
+    "        for param, target_param in zip(qf2.parameters(), qf2_target.parameters()):\n",
+    "            target_param.data.copy_(args.tau * param.data + (1 - args.tau) * target_param.data)\n",
     "            \n",
     "        if global_step % 100 == 0:\n",
-    "            writer.add_scalar(\"losses/qf1_values\", q1_a_values.mean().item(), global_step)\n",
-    "            writer.add_scalar(\"losses/v_values\", next_V.mean().item(), global_step)\n",
-    "            writer.add_scalar(\"losses/GFN\", info['loss_train'], global_step)"
+    "            writer.add_scalar(\"losses/qf1_values\", qf1_a_values.mean().item(), global_step)\n",
+    "            writer.add_scalar(\"losses/qf2_values\", qf2_a_values.mean().item(), global_step)\n",
+    "            writer.add_scalar(\"losses/qf1_loss\", qf1_loss.item(), global_step)\n",
+    "            writer.add_scalar(\"losses/qf2_loss\", qf2_loss.item(), global_step)\n",
+    "            writer.add_scalar(\"losses/qf_loss\", qf_loss.item() / 2.0, global_step)\n",
+    "            writer.add_scalar(\"losses/actor_loss\", actor_loss.item(), global_step)"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": 15,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/png": "",
-      "text/plain": [
-       "<Figure size 640x480 with 1 Axes>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "def visualize_gfn_trajectories(env, num_trajectories=20, horizon=6):\n",
+    "def visualize_dsac_trajectories(actor, env, num_trajectories=20, horizon=6):\n",
     "    episode_actions = defaultdict(list)\n",
     "    colors = plt.cm.get_cmap('tab10', num_trajectories)\n",
     "    trajectories = []\n",
@@ -1461,7 +5922,7 @@
     "        state = env.reset()\n",
     "        trajectory = [(-1,0)]  \n",
     "        for t in range(horizon):\n",
-    "            action = sample_policy(gflownet, torch.Tensor(state).unsqueeze(0).to(device), args, sigma=args.sigma_interactive)\n",
+    "            action = actor.sample(torch.Tensor(state).unsqueeze(0).to(device))\n",
     "            action = action.detach().cpu()[0]\n",
     "            state, reward, done, _ = env.step(action)\n",
     "            episode_actions[i].append((state,action))\n",
@@ -1476,32 +5937,49 @@
     "            for stones_patch in stones_level:\n",
     "                stones_patch = np.linspace(stones_patch[0], stones_patch[1], 100) *100 + 100\n",
     "                for k in stones_patch:\n",
-    "                    grid[i, int(k)] = .1\n",
+    "                    grid[i, int(k)] = .9\n",
+    "\n",
+    "        agent_width = np.linspace(-(env.stones_range * env.agent_width)/2,  (env.stones_range * env.agent_width)/2, 100) *100 +100\n",
+    "        for i in agent_width:\n",
+    "\n",
+    "            grid[0, int(i)] = .9\n",
+    "        \n",
     "\n",
     "        # append trajectories\n",
+    "\n",
+    "        trajectory[0] =(0,0)\n",
     "        trajectory = np.array(trajectory)\n",
     "        trajectory[:, 0] = trajectory[:, 0] * 100 + 100\n",
     "        trajectories.append(trajectory)\n",
     "        env.reset()\n",
     "    #plot grid and trajectories\n",
-    "    grid[0,0] = 1\n",
+    "    grid[0,0] = .9\n",
     "    plt.imshow(grid, cmap='binary', aspect='auto', interpolation='nearest')\n",
     "    for i,traj in enumerate(trajectories):    \n",
     "        plt.plot(traj[:, 0],traj[:, 1],color = colors(i))\n",
     "        plt.xlim(0, 200)\n",
     "\n",
-    "    plt.show()\n",
-    "\n",
-    "visualize_gfn_trajectories(envs, num_trajectories=20, horizon=6)"
+    "    plt.show()"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 22,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 640x480 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
    "source": [
-    "visualize_gfn_trajectories(envs, num_trajectories=20, horizon=6)"
+    "visualize_dsac_trajectories(actor, envs, num_trajectories=100, horizon=6)"
    ]
   },
   {
diff --git a/qflow_dgfs_model.py b/qflow_dgfs_model.py
index 82dc57e..68e3f04 100644
--- a/qflow_dgfs_model.py
+++ b/qflow_dgfs_model.py
@@ -4,6 +4,7 @@ import numpy as np
 import torch
 from torch import nn
 from einops import rearrange
+import torch.nn.functional as F
 
 
 def check_shape(cur_shape):
@@ -110,4 +111,78 @@ class FourierMLP(nn.Module):
         if self.residual:
             out = out + input
         out = self.final_layer(out) # (bs, channels) -> (bs, d)
-        return out.view(-1, *self.out_shape)
\ No newline at end of file
+        return out.view(-1, *self.out_shape)
+    
+    
+class SoftQNetworkMLP(nn.Module):
+    def __init__(self, args, env, alpha=0.05):
+        super().__init__()
+        self.args = args
+        if args.fourier_features:
+            self.b = nn.Parameter(torch.randn(np.array(env.observation_space.shape).prod() + np.prod(env.action_space.shape), 256) * 10, requires_grad=False)            
+            self.fc1 = nn.Linear(512, 512)
+        else:
+            self.fc1 = nn.Linear(np.array(env.observation_space.shape).prod() + np.prod(env.action_space.shape), 512)
+        self.fc2 = nn.Linear(512, 512)
+        self.fc3 = nn.Linear(512, 256)
+        self.fc4 = nn.Linear(256, 1)
+        self.ln1 = nn.LayerNorm(512)
+        self.ln2 = nn.LayerNorm(512)
+        self.ln3 = nn.LayerNorm(256)
+        self.alpha = alpha
+        self.args = args
+
+    def forward(self, x, a):
+        # TODO: apply tanh here
+        if self.args.use_tanh:
+            a = torch.tanh(a) * self.args.action_scale
+        x = torch.cat([x, a], 1)
+        if self.args.fourier_features:
+            x = torch.cat([torch.sin(torch.matmul(x, self.b)), torch.cos(torch.matmul(x, self.b))], -1)
+        x = F.gelu(self.ln1(self.fc1(x)))
+        x = F.gelu(self.ln2(self.fc2(x)))
+        x = F.gelu(self.ln3(self.fc3(x)))
+        x = self.fc4(x)
+        return x
+    
+    def score(self, x, a):
+        a = a.detach()
+        a.requires_grad_(True)
+        
+        if self.args.barrier_function:
+            # const = torch.ones_like(a) * math.exp(2)
+            # const.requires_grad_(True)
+            # b = torch.max(torch.exp(2 * a), const) + torch.max(torch.exp(-2 * a), const)
+            b = (a ** 2).sum(-1) * 0.001
+            q_sa = self.forward(x, a) - b.unsqueeze(-1)
+        else:
+            q_sa = self.forward(x, a)
+        
+        # get gradient wrt r_sa
+        if self.args.use_tanh:
+            q_sa = q_sa + torch.log(self.args.action_scale * (1 - torch.tanh(a)**2) + 1e-6).sum(1, keepdim=True)
+        score = torch.autograd.grad(q_sa.sum(), a)[0]#/self.alpha
+        # print(a.shape, score.shape, torch.norm(score, dim=1).shape)
+        if self.args.score_normalization:
+            score = score/torch.norm(score, dim=1).unsqueeze(1)
+        elif self.args.divide_by_alpha_score:
+            score = score/self.alpha 
+
+        return score.detach()
+    
+    def logr_fn_detach(self, x, a):
+        
+        if self.args.barrier_function:
+            # const = torch.ones_like(a) * math.exp(2)
+            # const.requires_grad_(True)
+            # b = torch.max(torch.exp(2 * a), const) + torch.max(torch.exp(-2 * a), const)
+            b = (a ** 2).sum(-1) * 0.001
+            logr = self.forward(x, a).detach() - b.unsqueeze(-1).detach()
+        else:
+            logr = self.forward(x, a).detach()
+
+        if self.args.use_tanh:
+            logr = logr/self.alpha + torch.log(self.args.action_scale * (1 - torch.tanh(a)**2) + 1e-6).sum(1, keepdim=True)
+        logr = torch.where(torch.isinf(logr), -1e6, logr)
+        logr = torch.clamp(logr, min=-1e6)
+        return logr
\ No newline at end of file
